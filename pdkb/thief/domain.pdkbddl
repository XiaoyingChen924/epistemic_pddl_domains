
(define (domain thief)
    (:agents t g)
    (:types )
    (:constants )
    (:predicates (thief) (guard) {AK}(goal))

    (:action make-noise-thief
        :derive-condition   always
        :precondition       (and (thief))
        :effect             (and (when (guard) [g](thief)))
    )

    (:action make-noise-guard
        :derive-condition   always
        :precondition       (and (guard))
        :effect             (and (when (thief) [t](guard)))
    )

    (:action thief-sees-guard
        :derive-condition   always
        :precondition       (and (thief) (guard))
        :effect             (and [t](guard))
    )

    (:action guard-sees-thief
        :derive-condition   always
        :precondition       (and (thief) (guard))
        :effect             (and [g](thief))
    )

    (:action both-see-each-other
        :derive-condition   always
        :precondition       (and (thief) (guard))
        :effect             (and [g](thief) [t](guard))
    )

    (:action ambush
        :derive-condition   always
        :precondition       (and (thief) ![t] (guard))
        :effect             (and (goal))
    )

    (:action rush
        :derive-condition   always
        :precondition       (and (thief))
        :effect             (and (goal))
    )

    (:action trick
        :derive-condition   always
        :precondition       (and (thief)
                                 [t](guard)
                                 [t] ![g] (thief))
        :effect             (and (goal))
    )

)
