(define (domain grid)

    (:requirements :strips :conditional-effects)

    (:predicates
        (not_--)
        (not_at_a_p0011)
        (not_at_a_p012)
        (not_at_a_p1)
        (not_at_a_p10)
        (not_at_a_p2)
        (not_at_a_p3)
        (not_at_a_p4)
        (not_at_a_p5)
        (not_at_a_p6)
        (not_at_a_p7)
        (not_at_a_p8)
        (not_at_a_p9)
        (not_at_b_p0011)
        (not_at_b_p012)
        (not_at_b_p1)
        (not_at_b_p10)
        (not_at_b_p2)
        (not_at_b_p3)
        (not_at_b_p4)
        (not_at_b_p5)
        (not_at_b_p6)
        (not_at_b_p7)
        (not_at_b_p8)
        (not_at_b_p9)
        (not_at_c_p0011)
        (not_at_c_p012)
        (not_at_c_p1)
        (not_at_c_p10)
        (not_at_c_p2)
        (not_at_c_p3)
        (not_at_c_p4)
        (not_at_c_p5)
        (not_at_c_p6)
        (not_at_c_p7)
        (not_at_c_p8)
        (not_at_c_p9)
        (not_at_d_p0011)
        (not_at_d_p012)
        (not_at_d_p1)
        (not_at_d_p10)
        (not_at_d_p2)
        (not_at_d_p3)
        (not_at_d_p4)
        (not_at_d_p5)
        (not_at_d_p6)
        (not_at_d_p7)
        (not_at_d_p8)
        (not_at_d_p9)
        (not_blocked_p0011)
        (not_blocked_p012)
        (not_blocked_p1)
        (not_blocked_p10)
        (not_blocked_p2)
        (not_blocked_p3)
        (not_blocked_p4)
        (not_blocked_p5)
        (not_blocked_p6)
        (not_blocked_p7)
        (not_blocked_p8)
        (not_blocked_p9)
        (not_checked_p0011)
        (not_checked_p012)
        (not_checked_p1)
        (not_checked_p10)
        (not_checked_p2)
        (not_checked_p3)
        (not_checked_p4)
        (not_checked_p5)
        (not_checked_p6)
        (not_checked_p7)
        (not_checked_p8)
        (not_checked_p9)
        (not_communicate)
        (not_communicating_a_a)
        (not_communicating_a_b)
        (not_communicating_a_c)
        (not_communicating_a_d)
        (not_communicating_b_a)
        (not_communicating_b_b)
        (not_communicating_b_c)
        (not_communicating_b_d)
        (not_communicating_c_a)
        (not_communicating_c_b)
        (not_communicating_c_c)
        (not_communicating_c_d)
        (not_communicating_d_a)
        (not_communicating_d_b)
        (not_communicating_d_c)
        (not_communicating_d_d)
        (not_force)
        (not_hiddenblockedcell_p0011)
        (not_hiddenblockedcell_p012)
        (not_hiddenblockedcell_p1)
        (not_hiddenblockedcell_p10)
        (not_hiddenblockedcell_p2)
        (not_hiddenblockedcell_p3)
        (not_hiddenblockedcell_p4)
        (not_hiddenblockedcell_p5)
        (not_hiddenblockedcell_p6)
        (not_hiddenblockedcell_p7)
        (not_hiddenblockedcell_p8)
        (not_hiddenblockedcell_p9)
        (not_hiddensurvivorat_s_p0011)
        (not_hiddensurvivorat_s_p012)
        (not_hiddensurvivorat_s_p1)
        (not_hiddensurvivorat_s_p10)
        (not_hiddensurvivorat_s_p2)
        (not_hiddensurvivorat_s_p3)
        (not_hiddensurvivorat_s_p4)
        (not_hiddensurvivorat_s_p5)
        (not_hiddensurvivorat_s_p6)
        (not_hiddensurvivorat_s_p7)
        (not_hiddensurvivorat_s_p8)
        (not_hiddensurvivorat_s_p9)
        (not_msg_p0011)
        (not_msg_p012)
        (not_msg_p1)
        (not_msg_p10)
        (not_msg_p2)
        (not_msg_p3)
        (not_msg_p4)
        (not_msg_p5)
        (not_msg_p6)
        (not_msg_p7)
        (not_msg_p8)
        (not_msg_p9)
        (not_obs_p0011)
        (not_obs_p012)
        (not_obs_p1)
        (not_obs_p10)
        (not_obs_p2)
        (not_obs_p3)
        (not_obs_p4)
        (not_obs_p5)
        (not_obs_p6)
        (not_obs_p7)
        (not_obs_p8)
        (not_obs_p9)
        (not_obss_p0011)
        (not_obss_p012)
        (not_obss_p1)
        (not_obss_p10)
        (not_obss_p2)
        (not_obss_p3)
        (not_obss_p4)
        (not_obss_p5)
        (not_obss_p6)
        (not_obss_p7)
        (not_obss_p8)
        (not_obss_p9)
        (not_planner)
        (not_succ_p0011_p0011)
        (not_succ_p0011_p012)
        (not_succ_p0011_p1)
        (not_succ_p0011_p10)
        (not_succ_p0011_p2)
        (not_succ_p0011_p3)
        (not_succ_p0011_p4)
        (not_succ_p0011_p5)
        (not_succ_p0011_p6)
        (not_succ_p0011_p7)
        (not_succ_p0011_p8)
        (not_succ_p0011_p9)
        (not_succ_p012_p0011)
        (not_succ_p012_p012)
        (not_succ_p012_p1)
        (not_succ_p012_p10)
        (not_succ_p012_p2)
        (not_succ_p012_p3)
        (not_succ_p012_p4)
        (not_succ_p012_p5)
        (not_succ_p012_p6)
        (not_succ_p012_p7)
        (not_succ_p012_p8)
        (not_succ_p012_p9)
        (not_succ_p10_p0011)
        (not_succ_p10_p012)
        (not_succ_p10_p1)
        (not_succ_p10_p10)
        (not_succ_p10_p2)
        (not_succ_p10_p3)
        (not_succ_p10_p4)
        (not_succ_p10_p5)
        (not_succ_p10_p6)
        (not_succ_p10_p7)
        (not_succ_p10_p8)
        (not_succ_p10_p9)
        (not_succ_p1_p0011)
        (not_succ_p1_p012)
        (not_succ_p1_p1)
        (not_succ_p1_p10)
        (not_succ_p1_p2)
        (not_succ_p1_p3)
        (not_succ_p1_p4)
        (not_succ_p1_p5)
        (not_succ_p1_p6)
        (not_succ_p1_p7)
        (not_succ_p1_p8)
        (not_succ_p1_p9)
        (not_succ_p2_p0011)
        (not_succ_p2_p012)
        (not_succ_p2_p1)
        (not_succ_p2_p10)
        (not_succ_p2_p2)
        (not_succ_p2_p3)
        (not_succ_p2_p4)
        (not_succ_p2_p5)
        (not_succ_p2_p6)
        (not_succ_p2_p7)
        (not_succ_p2_p8)
        (not_succ_p2_p9)
        (not_succ_p3_p0011)
        (not_succ_p3_p012)
        (not_succ_p3_p1)
        (not_succ_p3_p10)
        (not_succ_p3_p2)
        (not_succ_p3_p3)
        (not_succ_p3_p4)
        (not_succ_p3_p5)
        (not_succ_p3_p6)
        (not_succ_p3_p7)
        (not_succ_p3_p8)
        (not_succ_p3_p9)
        (not_succ_p4_p0011)
        (not_succ_p4_p012)
        (not_succ_p4_p1)
        (not_succ_p4_p10)
        (not_succ_p4_p2)
        (not_succ_p4_p3)
        (not_succ_p4_p4)
        (not_succ_p4_p5)
        (not_succ_p4_p6)
        (not_succ_p4_p7)
        (not_succ_p4_p8)
        (not_succ_p4_p9)
        (not_succ_p5_p0011)
        (not_succ_p5_p012)
        (not_succ_p5_p1)
        (not_succ_p5_p10)
        (not_succ_p5_p2)
        (not_succ_p5_p3)
        (not_succ_p5_p4)
        (not_succ_p5_p5)
        (not_succ_p5_p6)
        (not_succ_p5_p7)
        (not_succ_p5_p8)
        (not_succ_p5_p9)
        (not_succ_p6_p0011)
        (not_succ_p6_p012)
        (not_succ_p6_p1)
        (not_succ_p6_p10)
        (not_succ_p6_p2)
        (not_succ_p6_p3)
        (not_succ_p6_p4)
        (not_succ_p6_p5)
        (not_succ_p6_p6)
        (not_succ_p6_p7)
        (not_succ_p6_p8)
        (not_succ_p6_p9)
        (not_succ_p7_p0011)
        (not_succ_p7_p012)
        (not_succ_p7_p1)
        (not_succ_p7_p10)
        (not_succ_p7_p2)
        (not_succ_p7_p3)
        (not_succ_p7_p4)
        (not_succ_p7_p5)
        (not_succ_p7_p6)
        (not_succ_p7_p7)
        (not_succ_p7_p8)
        (not_succ_p7_p9)
        (not_succ_p8_p0011)
        (not_succ_p8_p012)
        (not_succ_p8_p1)
        (not_succ_p8_p10)
        (not_succ_p8_p2)
        (not_succ_p8_p3)
        (not_succ_p8_p4)
        (not_succ_p8_p5)
        (not_succ_p8_p6)
        (not_succ_p8_p7)
        (not_succ_p8_p8)
        (not_succ_p8_p9)
        (not_succ_p9_p0011)
        (not_succ_p9_p012)
        (not_succ_p9_p1)
        (not_succ_p9_p10)
        (not_succ_p9_p2)
        (not_succ_p9_p3)
        (not_succ_p9_p4)
        (not_succ_p9_p5)
        (not_succ_p9_p6)
        (not_succ_p9_p7)
        (not_succ_p9_p8)
        (not_succ_p9_p9)
        (not_survivorat_s_p0011)
        (not_survivorat_s_p012)
        (not_survivorat_s_p1)
        (not_survivorat_s_p10)
        (not_survivorat_s_p2)
        (not_survivorat_s_p3)
        (not_survivorat_s_p4)
        (not_survivorat_s_p5)
        (not_survivorat_s_p6)
        (not_survivorat_s_p7)
        (not_survivorat_s_p8)
        (not_survivorat_s_p9)
        (not_to)
        (--)
        (Ba_not_--)
        (Ba_not_blocked_p0011)
        (Ba_not_blocked_p012)
        (Ba_not_blocked_p1)
        (Ba_not_blocked_p10)
        (Ba_not_blocked_p2)
        (Ba_not_blocked_p3)
        (Ba_not_blocked_p4)
        (Ba_not_blocked_p5)
        (Ba_not_blocked_p6)
        (Ba_not_blocked_p7)
        (Ba_not_blocked_p8)
        (Ba_not_blocked_p9)
        (Ba_not_communicate)
        (Ba_not_communicating_a_a)
        (Ba_not_communicating_a_b)
        (Ba_not_communicating_a_c)
        (Ba_not_communicating_a_d)
        (Ba_not_communicating_b_a)
        (Ba_not_communicating_b_b)
        (Ba_not_communicating_b_c)
        (Ba_not_communicating_b_d)
        (Ba_not_communicating_c_a)
        (Ba_not_communicating_c_b)
        (Ba_not_communicating_c_c)
        (Ba_not_communicating_c_d)
        (Ba_not_communicating_d_a)
        (Ba_not_communicating_d_b)
        (Ba_not_communicating_d_c)
        (Ba_not_communicating_d_d)
        (Ba_not_force)
        (Ba_not_hiddenblockedcell_p0011)
        (Ba_not_hiddenblockedcell_p012)
        (Ba_not_hiddenblockedcell_p1)
        (Ba_not_hiddenblockedcell_p10)
        (Ba_not_hiddenblockedcell_p2)
        (Ba_not_hiddenblockedcell_p3)
        (Ba_not_hiddenblockedcell_p4)
        (Ba_not_hiddenblockedcell_p5)
        (Ba_not_hiddenblockedcell_p6)
        (Ba_not_hiddenblockedcell_p7)
        (Ba_not_hiddenblockedcell_p8)
        (Ba_not_hiddenblockedcell_p9)
        (Ba_not_hiddensurvivorat_s_p0011)
        (Ba_not_hiddensurvivorat_s_p012)
        (Ba_not_hiddensurvivorat_s_p1)
        (Ba_not_hiddensurvivorat_s_p10)
        (Ba_not_hiddensurvivorat_s_p2)
        (Ba_not_hiddensurvivorat_s_p3)
        (Ba_not_hiddensurvivorat_s_p4)
        (Ba_not_hiddensurvivorat_s_p5)
        (Ba_not_hiddensurvivorat_s_p6)
        (Ba_not_hiddensurvivorat_s_p7)
        (Ba_not_hiddensurvivorat_s_p8)
        (Ba_not_hiddensurvivorat_s_p9)
        (Ba_not_msg_p0011)
        (Ba_not_msg_p012)
        (Ba_not_msg_p1)
        (Ba_not_msg_p10)
        (Ba_not_msg_p2)
        (Ba_not_msg_p3)
        (Ba_not_msg_p4)
        (Ba_not_msg_p5)
        (Ba_not_msg_p6)
        (Ba_not_msg_p7)
        (Ba_not_msg_p8)
        (Ba_not_msg_p9)
        (Ba_not_obss_p0011)
        (Ba_not_obss_p012)
        (Ba_not_obss_p1)
        (Ba_not_obss_p10)
        (Ba_not_obss_p2)
        (Ba_not_obss_p3)
        (Ba_not_obss_p4)
        (Ba_not_obss_p5)
        (Ba_not_obss_p6)
        (Ba_not_obss_p7)
        (Ba_not_obss_p8)
        (Ba_not_obss_p9)
        (Ba_not_planner)
        (Ba_not_survivorat_s_p0011)
        (Ba_not_survivorat_s_p012)
        (Ba_not_survivorat_s_p1)
        (Ba_not_survivorat_s_p10)
        (Ba_not_survivorat_s_p2)
        (Ba_not_survivorat_s_p3)
        (Ba_not_survivorat_s_p4)
        (Ba_not_survivorat_s_p5)
        (Ba_not_survivorat_s_p6)
        (Ba_not_survivorat_s_p7)
        (Ba_not_survivorat_s_p8)
        (Ba_not_survivorat_s_p9)
        (Ba_not_to)
        (Ba_--)
        (Ba_blocked_p0011)
        (Ba_blocked_p012)
        (Ba_blocked_p1)
        (Ba_blocked_p10)
        (Ba_blocked_p2)
        (Ba_blocked_p3)
        (Ba_blocked_p4)
        (Ba_blocked_p5)
        (Ba_blocked_p6)
        (Ba_blocked_p7)
        (Ba_blocked_p8)
        (Ba_blocked_p9)
        (Ba_communicate)
        (Ba_communicating_a_a)
        (Ba_communicating_a_b)
        (Ba_communicating_a_c)
        (Ba_communicating_a_d)
        (Ba_communicating_b_a)
        (Ba_communicating_b_b)
        (Ba_communicating_b_c)
        (Ba_communicating_b_d)
        (Ba_communicating_c_a)
        (Ba_communicating_c_b)
        (Ba_communicating_c_c)
        (Ba_communicating_c_d)
        (Ba_communicating_d_a)
        (Ba_communicating_d_b)
        (Ba_communicating_d_c)
        (Ba_communicating_d_d)
        (Ba_force)
        (Ba_hiddenblockedcell_p0011)
        (Ba_hiddenblockedcell_p012)
        (Ba_hiddenblockedcell_p1)
        (Ba_hiddenblockedcell_p10)
        (Ba_hiddenblockedcell_p2)
        (Ba_hiddenblockedcell_p3)
        (Ba_hiddenblockedcell_p4)
        (Ba_hiddenblockedcell_p5)
        (Ba_hiddenblockedcell_p6)
        (Ba_hiddenblockedcell_p7)
        (Ba_hiddenblockedcell_p8)
        (Ba_hiddenblockedcell_p9)
        (Ba_hiddensurvivorat_s_p0011)
        (Ba_hiddensurvivorat_s_p012)
        (Ba_hiddensurvivorat_s_p1)
        (Ba_hiddensurvivorat_s_p10)
        (Ba_hiddensurvivorat_s_p2)
        (Ba_hiddensurvivorat_s_p3)
        (Ba_hiddensurvivorat_s_p4)
        (Ba_hiddensurvivorat_s_p5)
        (Ba_hiddensurvivorat_s_p6)
        (Ba_hiddensurvivorat_s_p7)
        (Ba_hiddensurvivorat_s_p8)
        (Ba_hiddensurvivorat_s_p9)
        (Ba_msg_p0011)
        (Ba_msg_p012)
        (Ba_msg_p1)
        (Ba_msg_p10)
        (Ba_msg_p2)
        (Ba_msg_p3)
        (Ba_msg_p4)
        (Ba_msg_p5)
        (Ba_msg_p6)
        (Ba_msg_p7)
        (Ba_msg_p8)
        (Ba_msg_p9)
        (Ba_obss_p0011)
        (Ba_obss_p012)
        (Ba_obss_p1)
        (Ba_obss_p10)
        (Ba_obss_p2)
        (Ba_obss_p3)
        (Ba_obss_p4)
        (Ba_obss_p5)
        (Ba_obss_p6)
        (Ba_obss_p7)
        (Ba_obss_p8)
        (Ba_obss_p9)
        (Ba_planner)
        (Ba_survivorat_s_p0011)
        (Ba_survivorat_s_p012)
        (Ba_survivorat_s_p1)
        (Ba_survivorat_s_p10)
        (Ba_survivorat_s_p2)
        (Ba_survivorat_s_p3)
        (Ba_survivorat_s_p4)
        (Ba_survivorat_s_p5)
        (Ba_survivorat_s_p6)
        (Ba_survivorat_s_p7)
        (Ba_survivorat_s_p8)
        (Ba_survivorat_s_p9)
        (Ba_to)
        (Bb_not_--)
        (Bb_not_blocked_p0011)
        (Bb_not_blocked_p012)
        (Bb_not_blocked_p1)
        (Bb_not_blocked_p10)
        (Bb_not_blocked_p2)
        (Bb_not_blocked_p3)
        (Bb_not_blocked_p4)
        (Bb_not_blocked_p5)
        (Bb_not_blocked_p6)
        (Bb_not_blocked_p7)
        (Bb_not_blocked_p8)
        (Bb_not_blocked_p9)
        (Bb_not_communicate)
        (Bb_not_communicating_a_a)
        (Bb_not_communicating_a_b)
        (Bb_not_communicating_a_c)
        (Bb_not_communicating_a_d)
        (Bb_not_communicating_b_a)
        (Bb_not_communicating_b_b)
        (Bb_not_communicating_b_c)
        (Bb_not_communicating_b_d)
        (Bb_not_communicating_c_a)
        (Bb_not_communicating_c_b)
        (Bb_not_communicating_c_c)
        (Bb_not_communicating_c_d)
        (Bb_not_communicating_d_a)
        (Bb_not_communicating_d_b)
        (Bb_not_communicating_d_c)
        (Bb_not_communicating_d_d)
        (Bb_not_force)
        (Bb_not_hiddenblockedcell_p0011)
        (Bb_not_hiddenblockedcell_p012)
        (Bb_not_hiddenblockedcell_p1)
        (Bb_not_hiddenblockedcell_p10)
        (Bb_not_hiddenblockedcell_p2)
        (Bb_not_hiddenblockedcell_p3)
        (Bb_not_hiddenblockedcell_p4)
        (Bb_not_hiddenblockedcell_p5)
        (Bb_not_hiddenblockedcell_p6)
        (Bb_not_hiddenblockedcell_p7)
        (Bb_not_hiddenblockedcell_p8)
        (Bb_not_hiddenblockedcell_p9)
        (Bb_not_hiddensurvivorat_s_p0011)
        (Bb_not_hiddensurvivorat_s_p012)
        (Bb_not_hiddensurvivorat_s_p1)
        (Bb_not_hiddensurvivorat_s_p10)
        (Bb_not_hiddensurvivorat_s_p2)
        (Bb_not_hiddensurvivorat_s_p3)
        (Bb_not_hiddensurvivorat_s_p4)
        (Bb_not_hiddensurvivorat_s_p5)
        (Bb_not_hiddensurvivorat_s_p6)
        (Bb_not_hiddensurvivorat_s_p7)
        (Bb_not_hiddensurvivorat_s_p8)
        (Bb_not_hiddensurvivorat_s_p9)
        (Bb_not_msg_p0011)
        (Bb_not_msg_p012)
        (Bb_not_msg_p1)
        (Bb_not_msg_p10)
        (Bb_not_msg_p2)
        (Bb_not_msg_p3)
        (Bb_not_msg_p4)
        (Bb_not_msg_p5)
        (Bb_not_msg_p6)
        (Bb_not_msg_p7)
        (Bb_not_msg_p8)
        (Bb_not_msg_p9)
        (Bb_not_obss_p0011)
        (Bb_not_obss_p012)
        (Bb_not_obss_p1)
        (Bb_not_obss_p10)
        (Bb_not_obss_p2)
        (Bb_not_obss_p3)
        (Bb_not_obss_p4)
        (Bb_not_obss_p5)
        (Bb_not_obss_p6)
        (Bb_not_obss_p7)
        (Bb_not_obss_p8)
        (Bb_not_obss_p9)
        (Bb_not_planner)
        (Bb_not_survivorat_s_p0011)
        (Bb_not_survivorat_s_p012)
        (Bb_not_survivorat_s_p1)
        (Bb_not_survivorat_s_p10)
        (Bb_not_survivorat_s_p2)
        (Bb_not_survivorat_s_p3)
        (Bb_not_survivorat_s_p4)
        (Bb_not_survivorat_s_p5)
        (Bb_not_survivorat_s_p6)
        (Bb_not_survivorat_s_p7)
        (Bb_not_survivorat_s_p8)
        (Bb_not_survivorat_s_p9)
        (Bb_not_to)
        (Bb_--)
        (Bb_blocked_p0011)
        (Bb_blocked_p012)
        (Bb_blocked_p1)
        (Bb_blocked_p10)
        (Bb_blocked_p2)
        (Bb_blocked_p3)
        (Bb_blocked_p4)
        (Bb_blocked_p5)
        (Bb_blocked_p6)
        (Bb_blocked_p7)
        (Bb_blocked_p8)
        (Bb_blocked_p9)
        (Bb_communicate)
        (Bb_communicating_a_a)
        (Bb_communicating_a_b)
        (Bb_communicating_a_c)
        (Bb_communicating_a_d)
        (Bb_communicating_b_a)
        (Bb_communicating_b_b)
        (Bb_communicating_b_c)
        (Bb_communicating_b_d)
        (Bb_communicating_c_a)
        (Bb_communicating_c_b)
        (Bb_communicating_c_c)
        (Bb_communicating_c_d)
        (Bb_communicating_d_a)
        (Bb_communicating_d_b)
        (Bb_communicating_d_c)
        (Bb_communicating_d_d)
        (Bb_force)
        (Bb_hiddenblockedcell_p0011)
        (Bb_hiddenblockedcell_p012)
        (Bb_hiddenblockedcell_p1)
        (Bb_hiddenblockedcell_p10)
        (Bb_hiddenblockedcell_p2)
        (Bb_hiddenblockedcell_p3)
        (Bb_hiddenblockedcell_p4)
        (Bb_hiddenblockedcell_p5)
        (Bb_hiddenblockedcell_p6)
        (Bb_hiddenblockedcell_p7)
        (Bb_hiddenblockedcell_p8)
        (Bb_hiddenblockedcell_p9)
        (Bb_hiddensurvivorat_s_p0011)
        (Bb_hiddensurvivorat_s_p012)
        (Bb_hiddensurvivorat_s_p1)
        (Bb_hiddensurvivorat_s_p10)
        (Bb_hiddensurvivorat_s_p2)
        (Bb_hiddensurvivorat_s_p3)
        (Bb_hiddensurvivorat_s_p4)
        (Bb_hiddensurvivorat_s_p5)
        (Bb_hiddensurvivorat_s_p6)
        (Bb_hiddensurvivorat_s_p7)
        (Bb_hiddensurvivorat_s_p8)
        (Bb_hiddensurvivorat_s_p9)
        (Bb_msg_p0011)
        (Bb_msg_p012)
        (Bb_msg_p1)
        (Bb_msg_p10)
        (Bb_msg_p2)
        (Bb_msg_p3)
        (Bb_msg_p4)
        (Bb_msg_p5)
        (Bb_msg_p6)
        (Bb_msg_p7)
        (Bb_msg_p8)
        (Bb_msg_p9)
        (Bb_obss_p0011)
        (Bb_obss_p012)
        (Bb_obss_p1)
        (Bb_obss_p10)
        (Bb_obss_p2)
        (Bb_obss_p3)
        (Bb_obss_p4)
        (Bb_obss_p5)
        (Bb_obss_p6)
        (Bb_obss_p7)
        (Bb_obss_p8)
        (Bb_obss_p9)
        (Bb_planner)
        (Bb_survivorat_s_p0011)
        (Bb_survivorat_s_p012)
        (Bb_survivorat_s_p1)
        (Bb_survivorat_s_p10)
        (Bb_survivorat_s_p2)
        (Bb_survivorat_s_p3)
        (Bb_survivorat_s_p4)
        (Bb_survivorat_s_p5)
        (Bb_survivorat_s_p6)
        (Bb_survivorat_s_p7)
        (Bb_survivorat_s_p8)
        (Bb_survivorat_s_p9)
        (Bb_to)
        (Bc_not_--)
        (Bc_not_blocked_p0011)
        (Bc_not_blocked_p012)
        (Bc_not_blocked_p1)
        (Bc_not_blocked_p10)
        (Bc_not_blocked_p2)
        (Bc_not_blocked_p3)
        (Bc_not_blocked_p4)
        (Bc_not_blocked_p5)
        (Bc_not_blocked_p6)
        (Bc_not_blocked_p7)
        (Bc_not_blocked_p8)
        (Bc_not_blocked_p9)
        (Bc_not_communicate)
        (Bc_not_communicating_a_a)
        (Bc_not_communicating_a_b)
        (Bc_not_communicating_a_c)
        (Bc_not_communicating_a_d)
        (Bc_not_communicating_b_a)
        (Bc_not_communicating_b_b)
        (Bc_not_communicating_b_c)
        (Bc_not_communicating_b_d)
        (Bc_not_communicating_c_a)
        (Bc_not_communicating_c_b)
        (Bc_not_communicating_c_c)
        (Bc_not_communicating_c_d)
        (Bc_not_communicating_d_a)
        (Bc_not_communicating_d_b)
        (Bc_not_communicating_d_c)
        (Bc_not_communicating_d_d)
        (Bc_not_force)
        (Bc_not_hiddenblockedcell_p0011)
        (Bc_not_hiddenblockedcell_p012)
        (Bc_not_hiddenblockedcell_p1)
        (Bc_not_hiddenblockedcell_p10)
        (Bc_not_hiddenblockedcell_p2)
        (Bc_not_hiddenblockedcell_p3)
        (Bc_not_hiddenblockedcell_p4)
        (Bc_not_hiddenblockedcell_p5)
        (Bc_not_hiddenblockedcell_p6)
        (Bc_not_hiddenblockedcell_p7)
        (Bc_not_hiddenblockedcell_p8)
        (Bc_not_hiddenblockedcell_p9)
        (Bc_not_hiddensurvivorat_s_p0011)
        (Bc_not_hiddensurvivorat_s_p012)
        (Bc_not_hiddensurvivorat_s_p1)
        (Bc_not_hiddensurvivorat_s_p10)
        (Bc_not_hiddensurvivorat_s_p2)
        (Bc_not_hiddensurvivorat_s_p3)
        (Bc_not_hiddensurvivorat_s_p4)
        (Bc_not_hiddensurvivorat_s_p5)
        (Bc_not_hiddensurvivorat_s_p6)
        (Bc_not_hiddensurvivorat_s_p7)
        (Bc_not_hiddensurvivorat_s_p8)
        (Bc_not_hiddensurvivorat_s_p9)
        (Bc_not_msg_p0011)
        (Bc_not_msg_p012)
        (Bc_not_msg_p1)
        (Bc_not_msg_p10)
        (Bc_not_msg_p2)
        (Bc_not_msg_p3)
        (Bc_not_msg_p4)
        (Bc_not_msg_p5)
        (Bc_not_msg_p6)
        (Bc_not_msg_p7)
        (Bc_not_msg_p8)
        (Bc_not_msg_p9)
        (Bc_not_obss_p0011)
        (Bc_not_obss_p012)
        (Bc_not_obss_p1)
        (Bc_not_obss_p10)
        (Bc_not_obss_p2)
        (Bc_not_obss_p3)
        (Bc_not_obss_p4)
        (Bc_not_obss_p5)
        (Bc_not_obss_p6)
        (Bc_not_obss_p7)
        (Bc_not_obss_p8)
        (Bc_not_obss_p9)
        (Bc_not_planner)
        (Bc_not_survivorat_s_p0011)
        (Bc_not_survivorat_s_p012)
        (Bc_not_survivorat_s_p1)
        (Bc_not_survivorat_s_p10)
        (Bc_not_survivorat_s_p2)
        (Bc_not_survivorat_s_p3)
        (Bc_not_survivorat_s_p4)
        (Bc_not_survivorat_s_p5)
        (Bc_not_survivorat_s_p6)
        (Bc_not_survivorat_s_p7)
        (Bc_not_survivorat_s_p8)
        (Bc_not_survivorat_s_p9)
        (Bc_not_to)
        (Bc_--)
        (Bc_blocked_p0011)
        (Bc_blocked_p012)
        (Bc_blocked_p1)
        (Bc_blocked_p10)
        (Bc_blocked_p2)
        (Bc_blocked_p3)
        (Bc_blocked_p4)
        (Bc_blocked_p5)
        (Bc_blocked_p6)
        (Bc_blocked_p7)
        (Bc_blocked_p8)
        (Bc_blocked_p9)
        (Bc_communicate)
        (Bc_communicating_a_a)
        (Bc_communicating_a_b)
        (Bc_communicating_a_c)
        (Bc_communicating_a_d)
        (Bc_communicating_b_a)
        (Bc_communicating_b_b)
        (Bc_communicating_b_c)
        (Bc_communicating_b_d)
        (Bc_communicating_c_a)
        (Bc_communicating_c_b)
        (Bc_communicating_c_c)
        (Bc_communicating_c_d)
        (Bc_communicating_d_a)
        (Bc_communicating_d_b)
        (Bc_communicating_d_c)
        (Bc_communicating_d_d)
        (Bc_force)
        (Bc_hiddenblockedcell_p0011)
        (Bc_hiddenblockedcell_p012)
        (Bc_hiddenblockedcell_p1)
        (Bc_hiddenblockedcell_p10)
        (Bc_hiddenblockedcell_p2)
        (Bc_hiddenblockedcell_p3)
        (Bc_hiddenblockedcell_p4)
        (Bc_hiddenblockedcell_p5)
        (Bc_hiddenblockedcell_p6)
        (Bc_hiddenblockedcell_p7)
        (Bc_hiddenblockedcell_p8)
        (Bc_hiddenblockedcell_p9)
        (Bc_hiddensurvivorat_s_p0011)
        (Bc_hiddensurvivorat_s_p012)
        (Bc_hiddensurvivorat_s_p1)
        (Bc_hiddensurvivorat_s_p10)
        (Bc_hiddensurvivorat_s_p2)
        (Bc_hiddensurvivorat_s_p3)
        (Bc_hiddensurvivorat_s_p4)
        (Bc_hiddensurvivorat_s_p5)
        (Bc_hiddensurvivorat_s_p6)
        (Bc_hiddensurvivorat_s_p7)
        (Bc_hiddensurvivorat_s_p8)
        (Bc_hiddensurvivorat_s_p9)
        (Bc_msg_p0011)
        (Bc_msg_p012)
        (Bc_msg_p1)
        (Bc_msg_p10)
        (Bc_msg_p2)
        (Bc_msg_p3)
        (Bc_msg_p4)
        (Bc_msg_p5)
        (Bc_msg_p6)
        (Bc_msg_p7)
        (Bc_msg_p8)
        (Bc_msg_p9)
        (Bc_obss_p0011)
        (Bc_obss_p012)
        (Bc_obss_p1)
        (Bc_obss_p10)
        (Bc_obss_p2)
        (Bc_obss_p3)
        (Bc_obss_p4)
        (Bc_obss_p5)
        (Bc_obss_p6)
        (Bc_obss_p7)
        (Bc_obss_p8)
        (Bc_obss_p9)
        (Bc_planner)
        (Bc_survivorat_s_p0011)
        (Bc_survivorat_s_p012)
        (Bc_survivorat_s_p1)
        (Bc_survivorat_s_p10)
        (Bc_survivorat_s_p2)
        (Bc_survivorat_s_p3)
        (Bc_survivorat_s_p4)
        (Bc_survivorat_s_p5)
        (Bc_survivorat_s_p6)
        (Bc_survivorat_s_p7)
        (Bc_survivorat_s_p8)
        (Bc_survivorat_s_p9)
        (Bc_to)
        (Bd_not_--)
        (Bd_not_blocked_p0011)
        (Bd_not_blocked_p012)
        (Bd_not_blocked_p1)
        (Bd_not_blocked_p10)
        (Bd_not_blocked_p2)
        (Bd_not_blocked_p3)
        (Bd_not_blocked_p4)
        (Bd_not_blocked_p5)
        (Bd_not_blocked_p6)
        (Bd_not_blocked_p7)
        (Bd_not_blocked_p8)
        (Bd_not_blocked_p9)
        (Bd_not_communicate)
        (Bd_not_communicating_a_a)
        (Bd_not_communicating_a_b)
        (Bd_not_communicating_a_c)
        (Bd_not_communicating_a_d)
        (Bd_not_communicating_b_a)
        (Bd_not_communicating_b_b)
        (Bd_not_communicating_b_c)
        (Bd_not_communicating_b_d)
        (Bd_not_communicating_c_a)
        (Bd_not_communicating_c_b)
        (Bd_not_communicating_c_c)
        (Bd_not_communicating_c_d)
        (Bd_not_communicating_d_a)
        (Bd_not_communicating_d_b)
        (Bd_not_communicating_d_c)
        (Bd_not_communicating_d_d)
        (Bd_not_force)
        (Bd_not_hiddenblockedcell_p0011)
        (Bd_not_hiddenblockedcell_p012)
        (Bd_not_hiddenblockedcell_p1)
        (Bd_not_hiddenblockedcell_p10)
        (Bd_not_hiddenblockedcell_p2)
        (Bd_not_hiddenblockedcell_p3)
        (Bd_not_hiddenblockedcell_p4)
        (Bd_not_hiddenblockedcell_p5)
        (Bd_not_hiddenblockedcell_p6)
        (Bd_not_hiddenblockedcell_p7)
        (Bd_not_hiddenblockedcell_p8)
        (Bd_not_hiddenblockedcell_p9)
        (Bd_not_hiddensurvivorat_s_p0011)
        (Bd_not_hiddensurvivorat_s_p012)
        (Bd_not_hiddensurvivorat_s_p1)
        (Bd_not_hiddensurvivorat_s_p10)
        (Bd_not_hiddensurvivorat_s_p2)
        (Bd_not_hiddensurvivorat_s_p3)
        (Bd_not_hiddensurvivorat_s_p4)
        (Bd_not_hiddensurvivorat_s_p5)
        (Bd_not_hiddensurvivorat_s_p6)
        (Bd_not_hiddensurvivorat_s_p7)
        (Bd_not_hiddensurvivorat_s_p8)
        (Bd_not_hiddensurvivorat_s_p9)
        (Bd_not_msg_p0011)
        (Bd_not_msg_p012)
        (Bd_not_msg_p1)
        (Bd_not_msg_p10)
        (Bd_not_msg_p2)
        (Bd_not_msg_p3)
        (Bd_not_msg_p4)
        (Bd_not_msg_p5)
        (Bd_not_msg_p6)
        (Bd_not_msg_p7)
        (Bd_not_msg_p8)
        (Bd_not_msg_p9)
        (Bd_not_obss_p0011)
        (Bd_not_obss_p012)
        (Bd_not_obss_p1)
        (Bd_not_obss_p10)
        (Bd_not_obss_p2)
        (Bd_not_obss_p3)
        (Bd_not_obss_p4)
        (Bd_not_obss_p5)
        (Bd_not_obss_p6)
        (Bd_not_obss_p7)
        (Bd_not_obss_p8)
        (Bd_not_obss_p9)
        (Bd_not_planner)
        (Bd_not_survivorat_s_p0011)
        (Bd_not_survivorat_s_p012)
        (Bd_not_survivorat_s_p1)
        (Bd_not_survivorat_s_p10)
        (Bd_not_survivorat_s_p2)
        (Bd_not_survivorat_s_p3)
        (Bd_not_survivorat_s_p4)
        (Bd_not_survivorat_s_p5)
        (Bd_not_survivorat_s_p6)
        (Bd_not_survivorat_s_p7)
        (Bd_not_survivorat_s_p8)
        (Bd_not_survivorat_s_p9)
        (Bd_not_to)
        (Bd_--)
        (Bd_blocked_p0011)
        (Bd_blocked_p012)
        (Bd_blocked_p1)
        (Bd_blocked_p10)
        (Bd_blocked_p2)
        (Bd_blocked_p3)
        (Bd_blocked_p4)
        (Bd_blocked_p5)
        (Bd_blocked_p6)
        (Bd_blocked_p7)
        (Bd_blocked_p8)
        (Bd_blocked_p9)
        (Bd_communicate)
        (Bd_communicating_a_a)
        (Bd_communicating_a_b)
        (Bd_communicating_a_c)
        (Bd_communicating_a_d)
        (Bd_communicating_b_a)
        (Bd_communicating_b_b)
        (Bd_communicating_b_c)
        (Bd_communicating_b_d)
        (Bd_communicating_c_a)
        (Bd_communicating_c_b)
        (Bd_communicating_c_c)
        (Bd_communicating_c_d)
        (Bd_communicating_d_a)
        (Bd_communicating_d_b)
        (Bd_communicating_d_c)
        (Bd_communicating_d_d)
        (Bd_force)
        (Bd_hiddenblockedcell_p0011)
        (Bd_hiddenblockedcell_p012)
        (Bd_hiddenblockedcell_p1)
        (Bd_hiddenblockedcell_p10)
        (Bd_hiddenblockedcell_p2)
        (Bd_hiddenblockedcell_p3)
        (Bd_hiddenblockedcell_p4)
        (Bd_hiddenblockedcell_p5)
        (Bd_hiddenblockedcell_p6)
        (Bd_hiddenblockedcell_p7)
        (Bd_hiddenblockedcell_p8)
        (Bd_hiddenblockedcell_p9)
        (Bd_hiddensurvivorat_s_p0011)
        (Bd_hiddensurvivorat_s_p012)
        (Bd_hiddensurvivorat_s_p1)
        (Bd_hiddensurvivorat_s_p10)
        (Bd_hiddensurvivorat_s_p2)
        (Bd_hiddensurvivorat_s_p3)
        (Bd_hiddensurvivorat_s_p4)
        (Bd_hiddensurvivorat_s_p5)
        (Bd_hiddensurvivorat_s_p6)
        (Bd_hiddensurvivorat_s_p7)
        (Bd_hiddensurvivorat_s_p8)
        (Bd_hiddensurvivorat_s_p9)
        (Bd_msg_p0011)
        (Bd_msg_p012)
        (Bd_msg_p1)
        (Bd_msg_p10)
        (Bd_msg_p2)
        (Bd_msg_p3)
        (Bd_msg_p4)
        (Bd_msg_p5)
        (Bd_msg_p6)
        (Bd_msg_p7)
        (Bd_msg_p8)
        (Bd_msg_p9)
        (Bd_obss_p0011)
        (Bd_obss_p012)
        (Bd_obss_p1)
        (Bd_obss_p10)
        (Bd_obss_p2)
        (Bd_obss_p3)
        (Bd_obss_p4)
        (Bd_obss_p5)
        (Bd_obss_p6)
        (Bd_obss_p7)
        (Bd_obss_p8)
        (Bd_obss_p9)
        (Bd_planner)
        (Bd_survivorat_s_p0011)
        (Bd_survivorat_s_p012)
        (Bd_survivorat_s_p1)
        (Bd_survivorat_s_p10)
        (Bd_survivorat_s_p2)
        (Bd_survivorat_s_p3)
        (Bd_survivorat_s_p4)
        (Bd_survivorat_s_p5)
        (Bd_survivorat_s_p6)
        (Bd_survivorat_s_p7)
        (Bd_survivorat_s_p8)
        (Bd_survivorat_s_p9)
        (Bd_to)
        (Pa_not_--)
        (Pa_not_blocked_p0011)
        (Pa_not_blocked_p012)
        (Pa_not_blocked_p1)
        (Pa_not_blocked_p10)
        (Pa_not_blocked_p2)
        (Pa_not_blocked_p3)
        (Pa_not_blocked_p4)
        (Pa_not_blocked_p5)
        (Pa_not_blocked_p6)
        (Pa_not_blocked_p7)
        (Pa_not_blocked_p8)
        (Pa_not_blocked_p9)
        (Pa_not_communicate)
        (Pa_not_communicating_a_a)
        (Pa_not_communicating_a_b)
        (Pa_not_communicating_a_c)
        (Pa_not_communicating_a_d)
        (Pa_not_communicating_b_a)
        (Pa_not_communicating_b_b)
        (Pa_not_communicating_b_c)
        (Pa_not_communicating_b_d)
        (Pa_not_communicating_c_a)
        (Pa_not_communicating_c_b)
        (Pa_not_communicating_c_c)
        (Pa_not_communicating_c_d)
        (Pa_not_communicating_d_a)
        (Pa_not_communicating_d_b)
        (Pa_not_communicating_d_c)
        (Pa_not_communicating_d_d)
        (Pa_not_force)
        (Pa_not_hiddenblockedcell_p0011)
        (Pa_not_hiddenblockedcell_p012)
        (Pa_not_hiddenblockedcell_p1)
        (Pa_not_hiddenblockedcell_p10)
        (Pa_not_hiddenblockedcell_p2)
        (Pa_not_hiddenblockedcell_p3)
        (Pa_not_hiddenblockedcell_p4)
        (Pa_not_hiddenblockedcell_p5)
        (Pa_not_hiddenblockedcell_p6)
        (Pa_not_hiddenblockedcell_p7)
        (Pa_not_hiddenblockedcell_p8)
        (Pa_not_hiddenblockedcell_p9)
        (Pa_not_hiddensurvivorat_s_p0011)
        (Pa_not_hiddensurvivorat_s_p012)
        (Pa_not_hiddensurvivorat_s_p1)
        (Pa_not_hiddensurvivorat_s_p10)
        (Pa_not_hiddensurvivorat_s_p2)
        (Pa_not_hiddensurvivorat_s_p3)
        (Pa_not_hiddensurvivorat_s_p4)
        (Pa_not_hiddensurvivorat_s_p5)
        (Pa_not_hiddensurvivorat_s_p6)
        (Pa_not_hiddensurvivorat_s_p7)
        (Pa_not_hiddensurvivorat_s_p8)
        (Pa_not_hiddensurvivorat_s_p9)
        (Pa_not_msg_p0011)
        (Pa_not_msg_p012)
        (Pa_not_msg_p1)
        (Pa_not_msg_p10)
        (Pa_not_msg_p2)
        (Pa_not_msg_p3)
        (Pa_not_msg_p4)
        (Pa_not_msg_p5)
        (Pa_not_msg_p6)
        (Pa_not_msg_p7)
        (Pa_not_msg_p8)
        (Pa_not_msg_p9)
        (Pa_not_obss_p0011)
        (Pa_not_obss_p012)
        (Pa_not_obss_p1)
        (Pa_not_obss_p10)
        (Pa_not_obss_p2)
        (Pa_not_obss_p3)
        (Pa_not_obss_p4)
        (Pa_not_obss_p5)
        (Pa_not_obss_p6)
        (Pa_not_obss_p7)
        (Pa_not_obss_p8)
        (Pa_not_obss_p9)
        (Pa_not_planner)
        (Pa_not_survivorat_s_p0011)
        (Pa_not_survivorat_s_p012)
        (Pa_not_survivorat_s_p1)
        (Pa_not_survivorat_s_p10)
        (Pa_not_survivorat_s_p2)
        (Pa_not_survivorat_s_p3)
        (Pa_not_survivorat_s_p4)
        (Pa_not_survivorat_s_p5)
        (Pa_not_survivorat_s_p6)
        (Pa_not_survivorat_s_p7)
        (Pa_not_survivorat_s_p8)
        (Pa_not_survivorat_s_p9)
        (Pa_not_to)
        (Pa_--)
        (Pa_blocked_p0011)
        (Pa_blocked_p012)
        (Pa_blocked_p1)
        (Pa_blocked_p10)
        (Pa_blocked_p2)
        (Pa_blocked_p3)
        (Pa_blocked_p4)
        (Pa_blocked_p5)
        (Pa_blocked_p6)
        (Pa_blocked_p7)
        (Pa_blocked_p8)
        (Pa_blocked_p9)
        (Pa_communicate)
        (Pa_communicating_a_a)
        (Pa_communicating_a_b)
        (Pa_communicating_a_c)
        (Pa_communicating_a_d)
        (Pa_communicating_b_a)
        (Pa_communicating_b_b)
        (Pa_communicating_b_c)
        (Pa_communicating_b_d)
        (Pa_communicating_c_a)
        (Pa_communicating_c_b)
        (Pa_communicating_c_c)
        (Pa_communicating_c_d)
        (Pa_communicating_d_a)
        (Pa_communicating_d_b)
        (Pa_communicating_d_c)
        (Pa_communicating_d_d)
        (Pa_force)
        (Pa_hiddenblockedcell_p0011)
        (Pa_hiddenblockedcell_p012)
        (Pa_hiddenblockedcell_p1)
        (Pa_hiddenblockedcell_p10)
        (Pa_hiddenblockedcell_p2)
        (Pa_hiddenblockedcell_p3)
        (Pa_hiddenblockedcell_p4)
        (Pa_hiddenblockedcell_p5)
        (Pa_hiddenblockedcell_p6)
        (Pa_hiddenblockedcell_p7)
        (Pa_hiddenblockedcell_p8)
        (Pa_hiddenblockedcell_p9)
        (Pa_hiddensurvivorat_s_p0011)
        (Pa_hiddensurvivorat_s_p012)
        (Pa_hiddensurvivorat_s_p1)
        (Pa_hiddensurvivorat_s_p10)
        (Pa_hiddensurvivorat_s_p2)
        (Pa_hiddensurvivorat_s_p3)
        (Pa_hiddensurvivorat_s_p4)
        (Pa_hiddensurvivorat_s_p5)
        (Pa_hiddensurvivorat_s_p6)
        (Pa_hiddensurvivorat_s_p7)
        (Pa_hiddensurvivorat_s_p8)
        (Pa_hiddensurvivorat_s_p9)
        (Pa_msg_p0011)
        (Pa_msg_p012)
        (Pa_msg_p1)
        (Pa_msg_p10)
        (Pa_msg_p2)
        (Pa_msg_p3)
        (Pa_msg_p4)
        (Pa_msg_p5)
        (Pa_msg_p6)
        (Pa_msg_p7)
        (Pa_msg_p8)
        (Pa_msg_p9)
        (Pa_obss_p0011)
        (Pa_obss_p012)
        (Pa_obss_p1)
        (Pa_obss_p10)
        (Pa_obss_p2)
        (Pa_obss_p3)
        (Pa_obss_p4)
        (Pa_obss_p5)
        (Pa_obss_p6)
        (Pa_obss_p7)
        (Pa_obss_p8)
        (Pa_obss_p9)
        (Pa_planner)
        (Pa_survivorat_s_p0011)
        (Pa_survivorat_s_p012)
        (Pa_survivorat_s_p1)
        (Pa_survivorat_s_p10)
        (Pa_survivorat_s_p2)
        (Pa_survivorat_s_p3)
        (Pa_survivorat_s_p4)
        (Pa_survivorat_s_p5)
        (Pa_survivorat_s_p6)
        (Pa_survivorat_s_p7)
        (Pa_survivorat_s_p8)
        (Pa_survivorat_s_p9)
        (Pa_to)
        (Pb_not_--)
        (Pb_not_blocked_p0011)
        (Pb_not_blocked_p012)
        (Pb_not_blocked_p1)
        (Pb_not_blocked_p10)
        (Pb_not_blocked_p2)
        (Pb_not_blocked_p3)
        (Pb_not_blocked_p4)
        (Pb_not_blocked_p5)
        (Pb_not_blocked_p6)
        (Pb_not_blocked_p7)
        (Pb_not_blocked_p8)
        (Pb_not_blocked_p9)
        (Pb_not_communicate)
        (Pb_not_communicating_a_a)
        (Pb_not_communicating_a_b)
        (Pb_not_communicating_a_c)
        (Pb_not_communicating_a_d)
        (Pb_not_communicating_b_a)
        (Pb_not_communicating_b_b)
        (Pb_not_communicating_b_c)
        (Pb_not_communicating_b_d)
        (Pb_not_communicating_c_a)
        (Pb_not_communicating_c_b)
        (Pb_not_communicating_c_c)
        (Pb_not_communicating_c_d)
        (Pb_not_communicating_d_a)
        (Pb_not_communicating_d_b)
        (Pb_not_communicating_d_c)
        (Pb_not_communicating_d_d)
        (Pb_not_force)
        (Pb_not_hiddenblockedcell_p0011)
        (Pb_not_hiddenblockedcell_p012)
        (Pb_not_hiddenblockedcell_p1)
        (Pb_not_hiddenblockedcell_p10)
        (Pb_not_hiddenblockedcell_p2)
        (Pb_not_hiddenblockedcell_p3)
        (Pb_not_hiddenblockedcell_p4)
        (Pb_not_hiddenblockedcell_p5)
        (Pb_not_hiddenblockedcell_p6)
        (Pb_not_hiddenblockedcell_p7)
        (Pb_not_hiddenblockedcell_p8)
        (Pb_not_hiddenblockedcell_p9)
        (Pb_not_hiddensurvivorat_s_p0011)
        (Pb_not_hiddensurvivorat_s_p012)
        (Pb_not_hiddensurvivorat_s_p1)
        (Pb_not_hiddensurvivorat_s_p10)
        (Pb_not_hiddensurvivorat_s_p2)
        (Pb_not_hiddensurvivorat_s_p3)
        (Pb_not_hiddensurvivorat_s_p4)
        (Pb_not_hiddensurvivorat_s_p5)
        (Pb_not_hiddensurvivorat_s_p6)
        (Pb_not_hiddensurvivorat_s_p7)
        (Pb_not_hiddensurvivorat_s_p8)
        (Pb_not_hiddensurvivorat_s_p9)
        (Pb_not_msg_p0011)
        (Pb_not_msg_p012)
        (Pb_not_msg_p1)
        (Pb_not_msg_p10)
        (Pb_not_msg_p2)
        (Pb_not_msg_p3)
        (Pb_not_msg_p4)
        (Pb_not_msg_p5)
        (Pb_not_msg_p6)
        (Pb_not_msg_p7)
        (Pb_not_msg_p8)
        (Pb_not_msg_p9)
        (Pb_not_obss_p0011)
        (Pb_not_obss_p012)
        (Pb_not_obss_p1)
        (Pb_not_obss_p10)
        (Pb_not_obss_p2)
        (Pb_not_obss_p3)
        (Pb_not_obss_p4)
        (Pb_not_obss_p5)
        (Pb_not_obss_p6)
        (Pb_not_obss_p7)
        (Pb_not_obss_p8)
        (Pb_not_obss_p9)
        (Pb_not_planner)
        (Pb_not_survivorat_s_p0011)
        (Pb_not_survivorat_s_p012)
        (Pb_not_survivorat_s_p1)
        (Pb_not_survivorat_s_p10)
        (Pb_not_survivorat_s_p2)
        (Pb_not_survivorat_s_p3)
        (Pb_not_survivorat_s_p4)
        (Pb_not_survivorat_s_p5)
        (Pb_not_survivorat_s_p6)
        (Pb_not_survivorat_s_p7)
        (Pb_not_survivorat_s_p8)
        (Pb_not_survivorat_s_p9)
        (Pb_not_to)
        (Pb_--)
        (Pb_blocked_p0011)
        (Pb_blocked_p012)
        (Pb_blocked_p1)
        (Pb_blocked_p10)
        (Pb_blocked_p2)
        (Pb_blocked_p3)
        (Pb_blocked_p4)
        (Pb_blocked_p5)
        (Pb_blocked_p6)
        (Pb_blocked_p7)
        (Pb_blocked_p8)
        (Pb_blocked_p9)
        (Pb_communicate)
        (Pb_communicating_a_a)
        (Pb_communicating_a_b)
        (Pb_communicating_a_c)
        (Pb_communicating_a_d)
        (Pb_communicating_b_a)
        (Pb_communicating_b_b)
        (Pb_communicating_b_c)
        (Pb_communicating_b_d)
        (Pb_communicating_c_a)
        (Pb_communicating_c_b)
        (Pb_communicating_c_c)
        (Pb_communicating_c_d)
        (Pb_communicating_d_a)
        (Pb_communicating_d_b)
        (Pb_communicating_d_c)
        (Pb_communicating_d_d)
        (Pb_force)
        (Pb_hiddenblockedcell_p0011)
        (Pb_hiddenblockedcell_p012)
        (Pb_hiddenblockedcell_p1)
        (Pb_hiddenblockedcell_p10)
        (Pb_hiddenblockedcell_p2)
        (Pb_hiddenblockedcell_p3)
        (Pb_hiddenblockedcell_p4)
        (Pb_hiddenblockedcell_p5)
        (Pb_hiddenblockedcell_p6)
        (Pb_hiddenblockedcell_p7)
        (Pb_hiddenblockedcell_p8)
        (Pb_hiddenblockedcell_p9)
        (Pb_hiddensurvivorat_s_p0011)
        (Pb_hiddensurvivorat_s_p012)
        (Pb_hiddensurvivorat_s_p1)
        (Pb_hiddensurvivorat_s_p10)
        (Pb_hiddensurvivorat_s_p2)
        (Pb_hiddensurvivorat_s_p3)
        (Pb_hiddensurvivorat_s_p4)
        (Pb_hiddensurvivorat_s_p5)
        (Pb_hiddensurvivorat_s_p6)
        (Pb_hiddensurvivorat_s_p7)
        (Pb_hiddensurvivorat_s_p8)
        (Pb_hiddensurvivorat_s_p9)
        (Pb_msg_p0011)
        (Pb_msg_p012)
        (Pb_msg_p1)
        (Pb_msg_p10)
        (Pb_msg_p2)
        (Pb_msg_p3)
        (Pb_msg_p4)
        (Pb_msg_p5)
        (Pb_msg_p6)
        (Pb_msg_p7)
        (Pb_msg_p8)
        (Pb_msg_p9)
        (Pb_obss_p0011)
        (Pb_obss_p012)
        (Pb_obss_p1)
        (Pb_obss_p10)
        (Pb_obss_p2)
        (Pb_obss_p3)
        (Pb_obss_p4)
        (Pb_obss_p5)
        (Pb_obss_p6)
        (Pb_obss_p7)
        (Pb_obss_p8)
        (Pb_obss_p9)
        (Pb_planner)
        (Pb_survivorat_s_p0011)
        (Pb_survivorat_s_p012)
        (Pb_survivorat_s_p1)
        (Pb_survivorat_s_p10)
        (Pb_survivorat_s_p2)
        (Pb_survivorat_s_p3)
        (Pb_survivorat_s_p4)
        (Pb_survivorat_s_p5)
        (Pb_survivorat_s_p6)
        (Pb_survivorat_s_p7)
        (Pb_survivorat_s_p8)
        (Pb_survivorat_s_p9)
        (Pb_to)
        (Pc_not_--)
        (Pc_not_blocked_p0011)
        (Pc_not_blocked_p012)
        (Pc_not_blocked_p1)
        (Pc_not_blocked_p10)
        (Pc_not_blocked_p2)
        (Pc_not_blocked_p3)
        (Pc_not_blocked_p4)
        (Pc_not_blocked_p5)
        (Pc_not_blocked_p6)
        (Pc_not_blocked_p7)
        (Pc_not_blocked_p8)
        (Pc_not_blocked_p9)
        (Pc_not_communicate)
        (Pc_not_communicating_a_a)
        (Pc_not_communicating_a_b)
        (Pc_not_communicating_a_c)
        (Pc_not_communicating_a_d)
        (Pc_not_communicating_b_a)
        (Pc_not_communicating_b_b)
        (Pc_not_communicating_b_c)
        (Pc_not_communicating_b_d)
        (Pc_not_communicating_c_a)
        (Pc_not_communicating_c_b)
        (Pc_not_communicating_c_c)
        (Pc_not_communicating_c_d)
        (Pc_not_communicating_d_a)
        (Pc_not_communicating_d_b)
        (Pc_not_communicating_d_c)
        (Pc_not_communicating_d_d)
        (Pc_not_force)
        (Pc_not_hiddenblockedcell_p0011)
        (Pc_not_hiddenblockedcell_p012)
        (Pc_not_hiddenblockedcell_p1)
        (Pc_not_hiddenblockedcell_p10)
        (Pc_not_hiddenblockedcell_p2)
        (Pc_not_hiddenblockedcell_p3)
        (Pc_not_hiddenblockedcell_p4)
        (Pc_not_hiddenblockedcell_p5)
        (Pc_not_hiddenblockedcell_p6)
        (Pc_not_hiddenblockedcell_p7)
        (Pc_not_hiddenblockedcell_p8)
        (Pc_not_hiddenblockedcell_p9)
        (Pc_not_hiddensurvivorat_s_p0011)
        (Pc_not_hiddensurvivorat_s_p012)
        (Pc_not_hiddensurvivorat_s_p1)
        (Pc_not_hiddensurvivorat_s_p10)
        (Pc_not_hiddensurvivorat_s_p2)
        (Pc_not_hiddensurvivorat_s_p3)
        (Pc_not_hiddensurvivorat_s_p4)
        (Pc_not_hiddensurvivorat_s_p5)
        (Pc_not_hiddensurvivorat_s_p6)
        (Pc_not_hiddensurvivorat_s_p7)
        (Pc_not_hiddensurvivorat_s_p8)
        (Pc_not_hiddensurvivorat_s_p9)
        (Pc_not_msg_p0011)
        (Pc_not_msg_p012)
        (Pc_not_msg_p1)
        (Pc_not_msg_p10)
        (Pc_not_msg_p2)
        (Pc_not_msg_p3)
        (Pc_not_msg_p4)
        (Pc_not_msg_p5)
        (Pc_not_msg_p6)
        (Pc_not_msg_p7)
        (Pc_not_msg_p8)
        (Pc_not_msg_p9)
        (Pc_not_obss_p0011)
        (Pc_not_obss_p012)
        (Pc_not_obss_p1)
        (Pc_not_obss_p10)
        (Pc_not_obss_p2)
        (Pc_not_obss_p3)
        (Pc_not_obss_p4)
        (Pc_not_obss_p5)
        (Pc_not_obss_p6)
        (Pc_not_obss_p7)
        (Pc_not_obss_p8)
        (Pc_not_obss_p9)
        (Pc_not_planner)
        (Pc_not_survivorat_s_p0011)
        (Pc_not_survivorat_s_p012)
        (Pc_not_survivorat_s_p1)
        (Pc_not_survivorat_s_p10)
        (Pc_not_survivorat_s_p2)
        (Pc_not_survivorat_s_p3)
        (Pc_not_survivorat_s_p4)
        (Pc_not_survivorat_s_p5)
        (Pc_not_survivorat_s_p6)
        (Pc_not_survivorat_s_p7)
        (Pc_not_survivorat_s_p8)
        (Pc_not_survivorat_s_p9)
        (Pc_not_to)
        (Pc_--)
        (Pc_blocked_p0011)
        (Pc_blocked_p012)
        (Pc_blocked_p1)
        (Pc_blocked_p10)
        (Pc_blocked_p2)
        (Pc_blocked_p3)
        (Pc_blocked_p4)
        (Pc_blocked_p5)
        (Pc_blocked_p6)
        (Pc_blocked_p7)
        (Pc_blocked_p8)
        (Pc_blocked_p9)
        (Pc_communicate)
        (Pc_communicating_a_a)
        (Pc_communicating_a_b)
        (Pc_communicating_a_c)
        (Pc_communicating_a_d)
        (Pc_communicating_b_a)
        (Pc_communicating_b_b)
        (Pc_communicating_b_c)
        (Pc_communicating_b_d)
        (Pc_communicating_c_a)
        (Pc_communicating_c_b)
        (Pc_communicating_c_c)
        (Pc_communicating_c_d)
        (Pc_communicating_d_a)
        (Pc_communicating_d_b)
        (Pc_communicating_d_c)
        (Pc_communicating_d_d)
        (Pc_force)
        (Pc_hiddenblockedcell_p0011)
        (Pc_hiddenblockedcell_p012)
        (Pc_hiddenblockedcell_p1)
        (Pc_hiddenblockedcell_p10)
        (Pc_hiddenblockedcell_p2)
        (Pc_hiddenblockedcell_p3)
        (Pc_hiddenblockedcell_p4)
        (Pc_hiddenblockedcell_p5)
        (Pc_hiddenblockedcell_p6)
        (Pc_hiddenblockedcell_p7)
        (Pc_hiddenblockedcell_p8)
        (Pc_hiddenblockedcell_p9)
        (Pc_hiddensurvivorat_s_p0011)
        (Pc_hiddensurvivorat_s_p012)
        (Pc_hiddensurvivorat_s_p1)
        (Pc_hiddensurvivorat_s_p10)
        (Pc_hiddensurvivorat_s_p2)
        (Pc_hiddensurvivorat_s_p3)
        (Pc_hiddensurvivorat_s_p4)
        (Pc_hiddensurvivorat_s_p5)
        (Pc_hiddensurvivorat_s_p6)
        (Pc_hiddensurvivorat_s_p7)
        (Pc_hiddensurvivorat_s_p8)
        (Pc_hiddensurvivorat_s_p9)
        (Pc_msg_p0011)
        (Pc_msg_p012)
        (Pc_msg_p1)
        (Pc_msg_p10)
        (Pc_msg_p2)
        (Pc_msg_p3)
        (Pc_msg_p4)
        (Pc_msg_p5)
        (Pc_msg_p6)
        (Pc_msg_p7)
        (Pc_msg_p8)
        (Pc_msg_p9)
        (Pc_obss_p0011)
        (Pc_obss_p012)
        (Pc_obss_p1)
        (Pc_obss_p10)
        (Pc_obss_p2)
        (Pc_obss_p3)
        (Pc_obss_p4)
        (Pc_obss_p5)
        (Pc_obss_p6)
        (Pc_obss_p7)
        (Pc_obss_p8)
        (Pc_obss_p9)
        (Pc_planner)
        (Pc_survivorat_s_p0011)
        (Pc_survivorat_s_p012)
        (Pc_survivorat_s_p1)
        (Pc_survivorat_s_p10)
        (Pc_survivorat_s_p2)
        (Pc_survivorat_s_p3)
        (Pc_survivorat_s_p4)
        (Pc_survivorat_s_p5)
        (Pc_survivorat_s_p6)
        (Pc_survivorat_s_p7)
        (Pc_survivorat_s_p8)
        (Pc_survivorat_s_p9)
        (Pc_to)
        (Pd_not_--)
        (Pd_not_blocked_p0011)
        (Pd_not_blocked_p012)
        (Pd_not_blocked_p1)
        (Pd_not_blocked_p10)
        (Pd_not_blocked_p2)
        (Pd_not_blocked_p3)
        (Pd_not_blocked_p4)
        (Pd_not_blocked_p5)
        (Pd_not_blocked_p6)
        (Pd_not_blocked_p7)
        (Pd_not_blocked_p8)
        (Pd_not_blocked_p9)
        (Pd_not_communicate)
        (Pd_not_communicating_a_a)
        (Pd_not_communicating_a_b)
        (Pd_not_communicating_a_c)
        (Pd_not_communicating_a_d)
        (Pd_not_communicating_b_a)
        (Pd_not_communicating_b_b)
        (Pd_not_communicating_b_c)
        (Pd_not_communicating_b_d)
        (Pd_not_communicating_c_a)
        (Pd_not_communicating_c_b)
        (Pd_not_communicating_c_c)
        (Pd_not_communicating_c_d)
        (Pd_not_communicating_d_a)
        (Pd_not_communicating_d_b)
        (Pd_not_communicating_d_c)
        (Pd_not_communicating_d_d)
        (Pd_not_force)
        (Pd_not_hiddenblockedcell_p0011)
        (Pd_not_hiddenblockedcell_p012)
        (Pd_not_hiddenblockedcell_p1)
        (Pd_not_hiddenblockedcell_p10)
        (Pd_not_hiddenblockedcell_p2)
        (Pd_not_hiddenblockedcell_p3)
        (Pd_not_hiddenblockedcell_p4)
        (Pd_not_hiddenblockedcell_p5)
        (Pd_not_hiddenblockedcell_p6)
        (Pd_not_hiddenblockedcell_p7)
        (Pd_not_hiddenblockedcell_p8)
        (Pd_not_hiddenblockedcell_p9)
        (Pd_not_hiddensurvivorat_s_p0011)
        (Pd_not_hiddensurvivorat_s_p012)
        (Pd_not_hiddensurvivorat_s_p1)
        (Pd_not_hiddensurvivorat_s_p10)
        (Pd_not_hiddensurvivorat_s_p2)
        (Pd_not_hiddensurvivorat_s_p3)
        (Pd_not_hiddensurvivorat_s_p4)
        (Pd_not_hiddensurvivorat_s_p5)
        (Pd_not_hiddensurvivorat_s_p6)
        (Pd_not_hiddensurvivorat_s_p7)
        (Pd_not_hiddensurvivorat_s_p8)
        (Pd_not_hiddensurvivorat_s_p9)
        (Pd_not_msg_p0011)
        (Pd_not_msg_p012)
        (Pd_not_msg_p1)
        (Pd_not_msg_p10)
        (Pd_not_msg_p2)
        (Pd_not_msg_p3)
        (Pd_not_msg_p4)
        (Pd_not_msg_p5)
        (Pd_not_msg_p6)
        (Pd_not_msg_p7)
        (Pd_not_msg_p8)
        (Pd_not_msg_p9)
        (Pd_not_obss_p0011)
        (Pd_not_obss_p012)
        (Pd_not_obss_p1)
        (Pd_not_obss_p10)
        (Pd_not_obss_p2)
        (Pd_not_obss_p3)
        (Pd_not_obss_p4)
        (Pd_not_obss_p5)
        (Pd_not_obss_p6)
        (Pd_not_obss_p7)
        (Pd_not_obss_p8)
        (Pd_not_obss_p9)
        (Pd_not_planner)
        (Pd_not_survivorat_s_p0011)
        (Pd_not_survivorat_s_p012)
        (Pd_not_survivorat_s_p1)
        (Pd_not_survivorat_s_p10)
        (Pd_not_survivorat_s_p2)
        (Pd_not_survivorat_s_p3)
        (Pd_not_survivorat_s_p4)
        (Pd_not_survivorat_s_p5)
        (Pd_not_survivorat_s_p6)
        (Pd_not_survivorat_s_p7)
        (Pd_not_survivorat_s_p8)
        (Pd_not_survivorat_s_p9)
        (Pd_not_to)
        (Pd_--)
        (Pd_blocked_p0011)
        (Pd_blocked_p012)
        (Pd_blocked_p1)
        (Pd_blocked_p10)
        (Pd_blocked_p2)
        (Pd_blocked_p3)
        (Pd_blocked_p4)
        (Pd_blocked_p5)
        (Pd_blocked_p6)
        (Pd_blocked_p7)
        (Pd_blocked_p8)
        (Pd_blocked_p9)
        (Pd_communicate)
        (Pd_communicating_a_a)
        (Pd_communicating_a_b)
        (Pd_communicating_a_c)
        (Pd_communicating_a_d)
        (Pd_communicating_b_a)
        (Pd_communicating_b_b)
        (Pd_communicating_b_c)
        (Pd_communicating_b_d)
        (Pd_communicating_c_a)
        (Pd_communicating_c_b)
        (Pd_communicating_c_c)
        (Pd_communicating_c_d)
        (Pd_communicating_d_a)
        (Pd_communicating_d_b)
        (Pd_communicating_d_c)
        (Pd_communicating_d_d)
        (Pd_force)
        (Pd_hiddenblockedcell_p0011)
        (Pd_hiddenblockedcell_p012)
        (Pd_hiddenblockedcell_p1)
        (Pd_hiddenblockedcell_p10)
        (Pd_hiddenblockedcell_p2)
        (Pd_hiddenblockedcell_p3)
        (Pd_hiddenblockedcell_p4)
        (Pd_hiddenblockedcell_p5)
        (Pd_hiddenblockedcell_p6)
        (Pd_hiddenblockedcell_p7)
        (Pd_hiddenblockedcell_p8)
        (Pd_hiddenblockedcell_p9)
        (Pd_hiddensurvivorat_s_p0011)
        (Pd_hiddensurvivorat_s_p012)
        (Pd_hiddensurvivorat_s_p1)
        (Pd_hiddensurvivorat_s_p10)
        (Pd_hiddensurvivorat_s_p2)
        (Pd_hiddensurvivorat_s_p3)
        (Pd_hiddensurvivorat_s_p4)
        (Pd_hiddensurvivorat_s_p5)
        (Pd_hiddensurvivorat_s_p6)
        (Pd_hiddensurvivorat_s_p7)
        (Pd_hiddensurvivorat_s_p8)
        (Pd_hiddensurvivorat_s_p9)
        (Pd_msg_p0011)
        (Pd_msg_p012)
        (Pd_msg_p1)
        (Pd_msg_p10)
        (Pd_msg_p2)
        (Pd_msg_p3)
        (Pd_msg_p4)
        (Pd_msg_p5)
        (Pd_msg_p6)
        (Pd_msg_p7)
        (Pd_msg_p8)
        (Pd_msg_p9)
        (Pd_obss_p0011)
        (Pd_obss_p012)
        (Pd_obss_p1)
        (Pd_obss_p10)
        (Pd_obss_p2)
        (Pd_obss_p3)
        (Pd_obss_p4)
        (Pd_obss_p5)
        (Pd_obss_p6)
        (Pd_obss_p7)
        (Pd_obss_p8)
        (Pd_obss_p9)
        (Pd_planner)
        (Pd_survivorat_s_p0011)
        (Pd_survivorat_s_p012)
        (Pd_survivorat_s_p1)
        (Pd_survivorat_s_p10)
        (Pd_survivorat_s_p2)
        (Pd_survivorat_s_p3)
        (Pd_survivorat_s_p4)
        (Pd_survivorat_s_p5)
        (Pd_survivorat_s_p6)
        (Pd_survivorat_s_p7)
        (Pd_survivorat_s_p8)
        (Pd_survivorat_s_p9)
        (Pd_to)
        (at_a_p0011)
        (at_a_p012)
        (at_a_p1)
        (at_a_p10)
        (at_a_p2)
        (at_a_p3)
        (at_a_p4)
        (at_a_p5)
        (at_a_p6)
        (at_a_p7)
        (at_a_p8)
        (at_a_p9)
        (at_b_p0011)
        (at_b_p012)
        (at_b_p1)
        (at_b_p10)
        (at_b_p2)
        (at_b_p3)
        (at_b_p4)
        (at_b_p5)
        (at_b_p6)
        (at_b_p7)
        (at_b_p8)
        (at_b_p9)
        (at_c_p0011)
        (at_c_p012)
        (at_c_p1)
        (at_c_p10)
        (at_c_p2)
        (at_c_p3)
        (at_c_p4)
        (at_c_p5)
        (at_c_p6)
        (at_c_p7)
        (at_c_p8)
        (at_c_p9)
        (at_d_p0011)
        (at_d_p012)
        (at_d_p1)
        (at_d_p10)
        (at_d_p2)
        (at_d_p3)
        (at_d_p4)
        (at_d_p5)
        (at_d_p6)
        (at_d_p7)
        (at_d_p8)
        (at_d_p9)
        (blocked_p0011)
        (blocked_p012)
        (blocked_p1)
        (blocked_p10)
        (blocked_p2)
        (blocked_p3)
        (blocked_p4)
        (blocked_p5)
        (blocked_p6)
        (blocked_p7)
        (blocked_p8)
        (blocked_p9)
        (checked_p0011)
        (checked_p012)
        (checked_p1)
        (checked_p10)
        (checked_p2)
        (checked_p3)
        (checked_p4)
        (checked_p5)
        (checked_p6)
        (checked_p7)
        (checked_p8)
        (checked_p9)
        (communicate)
        (communicating_a_a)
        (communicating_a_b)
        (communicating_a_c)
        (communicating_a_d)
        (communicating_b_a)
        (communicating_b_b)
        (communicating_b_c)
        (communicating_b_d)
        (communicating_c_a)
        (communicating_c_b)
        (communicating_c_c)
        (communicating_c_d)
        (communicating_d_a)
        (communicating_d_b)
        (communicating_d_c)
        (communicating_d_d)
        (force)
        (hiddenblockedcell_p0011)
        (hiddenblockedcell_p012)
        (hiddenblockedcell_p1)
        (hiddenblockedcell_p10)
        (hiddenblockedcell_p2)
        (hiddenblockedcell_p3)
        (hiddenblockedcell_p4)
        (hiddenblockedcell_p5)
        (hiddenblockedcell_p6)
        (hiddenblockedcell_p7)
        (hiddenblockedcell_p8)
        (hiddenblockedcell_p9)
        (hiddensurvivorat_s_p0011)
        (hiddensurvivorat_s_p012)
        (hiddensurvivorat_s_p1)
        (hiddensurvivorat_s_p10)
        (hiddensurvivorat_s_p2)
        (hiddensurvivorat_s_p3)
        (hiddensurvivorat_s_p4)
        (hiddensurvivorat_s_p5)
        (hiddensurvivorat_s_p6)
        (hiddensurvivorat_s_p7)
        (hiddensurvivorat_s_p8)
        (hiddensurvivorat_s_p9)
        (msg_p0011)
        (msg_p012)
        (msg_p1)
        (msg_p10)
        (msg_p2)
        (msg_p3)
        (msg_p4)
        (msg_p5)
        (msg_p6)
        (msg_p7)
        (msg_p8)
        (msg_p9)
        (obs_p0011)
        (obs_p012)
        (obs_p1)
        (obs_p10)
        (obs_p2)
        (obs_p3)
        (obs_p4)
        (obs_p5)
        (obs_p6)
        (obs_p7)
        (obs_p8)
        (obs_p9)
        (obss_p0011)
        (obss_p012)
        (obss_p1)
        (obss_p10)
        (obss_p2)
        (obss_p3)
        (obss_p4)
        (obss_p5)
        (obss_p6)
        (obss_p7)
        (obss_p8)
        (obss_p9)
        (planner)
        (succ_p0011_p0011)
        (succ_p0011_p012)
        (succ_p0011_p1)
        (succ_p0011_p10)
        (succ_p0011_p2)
        (succ_p0011_p3)
        (succ_p0011_p4)
        (succ_p0011_p5)
        (succ_p0011_p6)
        (succ_p0011_p7)
        (succ_p0011_p8)
        (succ_p0011_p9)
        (succ_p012_p0011)
        (succ_p012_p012)
        (succ_p012_p1)
        (succ_p012_p10)
        (succ_p012_p2)
        (succ_p012_p3)
        (succ_p012_p4)
        (succ_p012_p5)
        (succ_p012_p6)
        (succ_p012_p7)
        (succ_p012_p8)
        (succ_p012_p9)
        (succ_p10_p0011)
        (succ_p10_p012)
        (succ_p10_p1)
        (succ_p10_p10)
        (succ_p10_p2)
        (succ_p10_p3)
        (succ_p10_p4)
        (succ_p10_p5)
        (succ_p10_p6)
        (succ_p10_p7)
        (succ_p10_p8)
        (succ_p10_p9)
        (succ_p1_p0011)
        (succ_p1_p012)
        (succ_p1_p1)
        (succ_p1_p10)
        (succ_p1_p2)
        (succ_p1_p3)
        (succ_p1_p4)
        (succ_p1_p5)
        (succ_p1_p6)
        (succ_p1_p7)
        (succ_p1_p8)
        (succ_p1_p9)
        (succ_p2_p0011)
        (succ_p2_p012)
        (succ_p2_p1)
        (succ_p2_p10)
        (succ_p2_p2)
        (succ_p2_p3)
        (succ_p2_p4)
        (succ_p2_p5)
        (succ_p2_p6)
        (succ_p2_p7)
        (succ_p2_p8)
        (succ_p2_p9)
        (succ_p3_p0011)
        (succ_p3_p012)
        (succ_p3_p1)
        (succ_p3_p10)
        (succ_p3_p2)
        (succ_p3_p3)
        (succ_p3_p4)
        (succ_p3_p5)
        (succ_p3_p6)
        (succ_p3_p7)
        (succ_p3_p8)
        (succ_p3_p9)
        (succ_p4_p0011)
        (succ_p4_p012)
        (succ_p4_p1)
        (succ_p4_p10)
        (succ_p4_p2)
        (succ_p4_p3)
        (succ_p4_p4)
        (succ_p4_p5)
        (succ_p4_p6)
        (succ_p4_p7)
        (succ_p4_p8)
        (succ_p4_p9)
        (succ_p5_p0011)
        (succ_p5_p012)
        (succ_p5_p1)
        (succ_p5_p10)
        (succ_p5_p2)
        (succ_p5_p3)
        (succ_p5_p4)
        (succ_p5_p5)
        (succ_p5_p6)
        (succ_p5_p7)
        (succ_p5_p8)
        (succ_p5_p9)
        (succ_p6_p0011)
        (succ_p6_p012)
        (succ_p6_p1)
        (succ_p6_p10)
        (succ_p6_p2)
        (succ_p6_p3)
        (succ_p6_p4)
        (succ_p6_p5)
        (succ_p6_p6)
        (succ_p6_p7)
        (succ_p6_p8)
        (succ_p6_p9)
        (succ_p7_p0011)
        (succ_p7_p012)
        (succ_p7_p1)
        (succ_p7_p10)
        (succ_p7_p2)
        (succ_p7_p3)
        (succ_p7_p4)
        (succ_p7_p5)
        (succ_p7_p6)
        (succ_p7_p7)
        (succ_p7_p8)
        (succ_p7_p9)
        (succ_p8_p0011)
        (succ_p8_p012)
        (succ_p8_p1)
        (succ_p8_p10)
        (succ_p8_p2)
        (succ_p8_p3)
        (succ_p8_p4)
        (succ_p8_p5)
        (succ_p8_p6)
        (succ_p8_p7)
        (succ_p8_p8)
        (succ_p8_p9)
        (succ_p9_p0011)
        (succ_p9_p012)
        (succ_p9_p1)
        (succ_p9_p10)
        (succ_p9_p2)
        (succ_p9_p3)
        (succ_p9_p4)
        (succ_p9_p5)
        (succ_p9_p6)
        (succ_p9_p7)
        (succ_p9_p8)
        (succ_p9_p9)
        (survivorat_s_p0011)
        (survivorat_s_p012)
        (survivorat_s_p1)
        (survivorat_s_p10)
        (survivorat_s_p2)
        (survivorat_s_p3)
        (survivorat_s_p4)
        (survivorat_s_p5)
        (survivorat_s_p6)
        (survivorat_s_p7)
        (survivorat_s_p8)
        (survivorat_s_p9)
        (to)
    )

    (:action commsurvivor_p0011_a_s
        :precondition (and (Pa_survivorat_s_p0011)
                           (at_a_p0011)
                           (Ba_survivorat_s_p0011))
        :effect (and
                    ; #10843: <==closure== 53864 (pos)
                    (Pc_msg_p0011)

                    ; #12009: <==closure== 85953 (pos)
                    (Pd_msg_p0011)

                    ; #25188: <==closure== 36448 (pos)
                    (Pa_msg_p0011)

                    ; #26895: <==closure== 44774 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #34652: <==closure== 46755 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #36448: <==commonly_known== 64452 (pos)
                    (Ba_msg_p0011)

                    ; #37061: <==closure== 73673 (pos)
                    (Pb_msg_p0011)

                    ; #44774: origin
                    (Bc_survivorat_s_p0011)

                    ; #46755: origin
                    (Bd_survivorat_s_p0011)

                    ; #53864: <==commonly_known== 64452 (pos)
                    (Bc_msg_p0011)

                    ; #60490: origin
                    (Bb_survivorat_s_p0011)

                    ; #64452: origin
                    (msg_p0011)

                    ; #66815: <==closure== 76907 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #73673: <==commonly_known== 64452 (pos)
                    (Bb_msg_p0011)

                    ; #76907: origin
                    (Ba_survivorat_s_p0011)

                    ; #85953: <==commonly_known== 64452 (pos)
                    (Bd_msg_p0011)

                    ; #89207: <==closure== 60490 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #14675: <==negation-removal== 36448 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #18145: <==negation-removal== 44774 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #18517: <==negation-removal== 25188 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31365: <==negation-removal== 26895 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #39495: <==negation-removal== 66815 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #44248: <==negation-removal== 85953 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #51013: <==negation-removal== 64452 (pos)
                    (not (not_msg_p0011))

                    ; #53100: <==negation-removal== 89207 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #57984: <==negation-removal== 53864 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #67480: <==negation-removal== 12009 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #68794: <==negation-removal== 10843 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #74253: <==negation-removal== 34652 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #75124: <==negation-removal== 76907 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #80224: <==negation-removal== 60490 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #83855: <==negation-removal== 46755 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #85882: <==negation-removal== 73673 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #91629: <==negation-removal== 37061 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p0011_b_s
        :precondition (and (Bb_survivorat_s_p0011)
                           (Pb_survivorat_s_p0011)
                           (at_b_p0011))
        :effect (and
                    ; #10843: <==closure== 53864 (pos)
                    (Pc_msg_p0011)

                    ; #12009: <==closure== 85953 (pos)
                    (Pd_msg_p0011)

                    ; #25188: <==closure== 36448 (pos)
                    (Pa_msg_p0011)

                    ; #26895: <==closure== 44774 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #34652: <==closure== 46755 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #36448: <==commonly_known== 64452 (pos)
                    (Ba_msg_p0011)

                    ; #37061: <==closure== 73673 (pos)
                    (Pb_msg_p0011)

                    ; #44774: origin
                    (Bc_survivorat_s_p0011)

                    ; #46755: origin
                    (Bd_survivorat_s_p0011)

                    ; #53864: <==commonly_known== 64452 (pos)
                    (Bc_msg_p0011)

                    ; #60490: origin
                    (Bb_survivorat_s_p0011)

                    ; #64452: origin
                    (msg_p0011)

                    ; #66815: <==closure== 76907 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #73673: <==commonly_known== 64452 (pos)
                    (Bb_msg_p0011)

                    ; #76907: origin
                    (Ba_survivorat_s_p0011)

                    ; #85953: <==commonly_known== 64452 (pos)
                    (Bd_msg_p0011)

                    ; #89207: <==closure== 60490 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #14675: <==negation-removal== 36448 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #18145: <==negation-removal== 44774 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #18517: <==negation-removal== 25188 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31365: <==negation-removal== 26895 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #39495: <==negation-removal== 66815 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #44248: <==negation-removal== 85953 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #51013: <==negation-removal== 64452 (pos)
                    (not (not_msg_p0011))

                    ; #53100: <==negation-removal== 89207 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #57984: <==negation-removal== 53864 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #67480: <==negation-removal== 12009 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #68794: <==negation-removal== 10843 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #74253: <==negation-removal== 34652 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #75124: <==negation-removal== 76907 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #80224: <==negation-removal== 60490 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #83855: <==negation-removal== 46755 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #85882: <==negation-removal== 73673 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #91629: <==negation-removal== 37061 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p0011_c_s
        :precondition (and (at_c_p0011)
                           (Pc_survivorat_s_p0011)
                           (Bc_survivorat_s_p0011))
        :effect (and
                    ; #10843: <==closure== 53864 (pos)
                    (Pc_msg_p0011)

                    ; #12009: <==closure== 85953 (pos)
                    (Pd_msg_p0011)

                    ; #25188: <==closure== 36448 (pos)
                    (Pa_msg_p0011)

                    ; #26895: <==closure== 44774 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #34652: <==closure== 46755 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #36448: <==commonly_known== 64452 (pos)
                    (Ba_msg_p0011)

                    ; #37061: <==closure== 73673 (pos)
                    (Pb_msg_p0011)

                    ; #44774: origin
                    (Bc_survivorat_s_p0011)

                    ; #46755: origin
                    (Bd_survivorat_s_p0011)

                    ; #53864: <==commonly_known== 64452 (pos)
                    (Bc_msg_p0011)

                    ; #60490: origin
                    (Bb_survivorat_s_p0011)

                    ; #64452: origin
                    (msg_p0011)

                    ; #66815: <==closure== 76907 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #73673: <==commonly_known== 64452 (pos)
                    (Bb_msg_p0011)

                    ; #76907: origin
                    (Ba_survivorat_s_p0011)

                    ; #85953: <==commonly_known== 64452 (pos)
                    (Bd_msg_p0011)

                    ; #89207: <==closure== 60490 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #14675: <==negation-removal== 36448 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #18145: <==negation-removal== 44774 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #18517: <==negation-removal== 25188 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31365: <==negation-removal== 26895 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #39495: <==negation-removal== 66815 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #44248: <==negation-removal== 85953 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #51013: <==negation-removal== 64452 (pos)
                    (not (not_msg_p0011))

                    ; #53100: <==negation-removal== 89207 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #57984: <==negation-removal== 53864 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #67480: <==negation-removal== 12009 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #68794: <==negation-removal== 10843 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #74253: <==negation-removal== 34652 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #75124: <==negation-removal== 76907 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #80224: <==negation-removal== 60490 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #83855: <==negation-removal== 46755 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #85882: <==negation-removal== 73673 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #91629: <==negation-removal== 37061 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p0011_d_s
        :precondition (and (Pd_survivorat_s_p0011)
                           (Bd_survivorat_s_p0011)
                           (at_d_p0011))
        :effect (and
                    ; #10843: <==closure== 53864 (pos)
                    (Pc_msg_p0011)

                    ; #12009: <==closure== 85953 (pos)
                    (Pd_msg_p0011)

                    ; #25188: <==closure== 36448 (pos)
                    (Pa_msg_p0011)

                    ; #26895: <==closure== 44774 (pos)
                    (Pc_survivorat_s_p0011)

                    ; #34652: <==closure== 46755 (pos)
                    (Pd_survivorat_s_p0011)

                    ; #36448: <==commonly_known== 64452 (pos)
                    (Ba_msg_p0011)

                    ; #37061: <==closure== 73673 (pos)
                    (Pb_msg_p0011)

                    ; #44774: origin
                    (Bc_survivorat_s_p0011)

                    ; #46755: origin
                    (Bd_survivorat_s_p0011)

                    ; #53864: <==commonly_known== 64452 (pos)
                    (Bc_msg_p0011)

                    ; #60490: origin
                    (Bb_survivorat_s_p0011)

                    ; #64452: origin
                    (msg_p0011)

                    ; #66815: <==closure== 76907 (pos)
                    (Pa_survivorat_s_p0011)

                    ; #73673: <==commonly_known== 64452 (pos)
                    (Bb_msg_p0011)

                    ; #76907: origin
                    (Ba_survivorat_s_p0011)

                    ; #85953: <==commonly_known== 64452 (pos)
                    (Bd_msg_p0011)

                    ; #89207: <==closure== 60490 (pos)
                    (Pb_survivorat_s_p0011)

                    ; #14675: <==negation-removal== 36448 (pos)
                    (not (Pa_not_msg_p0011))

                    ; #18145: <==negation-removal== 44774 (pos)
                    (not (Pc_not_survivorat_s_p0011))

                    ; #18517: <==negation-removal== 25188 (pos)
                    (not (Ba_not_msg_p0011))

                    ; #31365: <==negation-removal== 26895 (pos)
                    (not (Bc_not_survivorat_s_p0011))

                    ; #39495: <==negation-removal== 66815 (pos)
                    (not (Ba_not_survivorat_s_p0011))

                    ; #44248: <==negation-removal== 85953 (pos)
                    (not (Pd_not_msg_p0011))

                    ; #51013: <==negation-removal== 64452 (pos)
                    (not (not_msg_p0011))

                    ; #53100: <==negation-removal== 89207 (pos)
                    (not (Bb_not_survivorat_s_p0011))

                    ; #57984: <==negation-removal== 53864 (pos)
                    (not (Pc_not_msg_p0011))

                    ; #67480: <==negation-removal== 12009 (pos)
                    (not (Bd_not_msg_p0011))

                    ; #68794: <==negation-removal== 10843 (pos)
                    (not (Bc_not_msg_p0011))

                    ; #74253: <==negation-removal== 34652 (pos)
                    (not (Bd_not_survivorat_s_p0011))

                    ; #75124: <==negation-removal== 76907 (pos)
                    (not (Pa_not_survivorat_s_p0011))

                    ; #80224: <==negation-removal== 60490 (pos)
                    (not (Pb_not_survivorat_s_p0011))

                    ; #83855: <==negation-removal== 46755 (pos)
                    (not (Pd_not_survivorat_s_p0011))

                    ; #85882: <==negation-removal== 73673 (pos)
                    (not (Pb_not_msg_p0011))

                    ; #91629: <==negation-removal== 37061 (pos)
                    (not (Bb_not_msg_p0011))))

    (:action commsurvivor_p012_a_s
        :precondition (and (at_a_p012)
                           (Ba_survivorat_s_p012)
                           (Pa_survivorat_s_p012))
        :effect (and
                    ; #10675: <==closure== 29192 (pos)
                    (Pa_survivorat_s_p012)

                    ; #19219: <==commonly_known== 66020 (pos)
                    (Bd_msg_p012)

                    ; #21901: <==closure== 58664 (pos)
                    (Pb_msg_p012)

                    ; #23986: origin
                    (Bb_survivorat_s_p012)

                    ; #29192: origin
                    (Ba_survivorat_s_p012)

                    ; #40322: <==closure== 19219 (pos)
                    (Pd_msg_p012)

                    ; #47264: origin
                    (Bd_survivorat_s_p012)

                    ; #50692: <==closure== 61832 (pos)
                    (Pc_survivorat_s_p012)

                    ; #55565: <==closure== 23986 (pos)
                    (Pb_survivorat_s_p012)

                    ; #58664: <==commonly_known== 66020 (pos)
                    (Bb_msg_p012)

                    ; #61832: origin
                    (Bc_survivorat_s_p012)

                    ; #62748: <==closure== 85843 (pos)
                    (Pc_msg_p012)

                    ; #66020: origin
                    (msg_p012)

                    ; #73493: <==closure== 47264 (pos)
                    (Pd_survivorat_s_p012)

                    ; #85843: <==commonly_known== 66020 (pos)
                    (Bc_msg_p012)

                    ; #88396: <==closure== 91503 (pos)
                    (Pa_msg_p012)

                    ; #91503: <==commonly_known== 66020 (pos)
                    (Ba_msg_p012)

                    ; #19567: <==negation-removal== 47264 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #24268: <==negation-removal== 21901 (pos)
                    (not (Bb_not_msg_p012))

                    ; #25390: <==negation-removal== 58664 (pos)
                    (not (Pb_not_msg_p012))

                    ; #42639: <==negation-removal== 10675 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #50914: <==negation-removal== 88396 (pos)
                    (not (Ba_not_msg_p012))

                    ; #55208: <==negation-removal== 62748 (pos)
                    (not (Bc_not_msg_p012))

                    ; #55764: <==negation-removal== 73493 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #57674: <==negation-removal== 85843 (pos)
                    (not (Pc_not_msg_p012))

                    ; #67366: <==negation-removal== 61832 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #72906: <==negation-removal== 29192 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #75207: <==negation-removal== 40322 (pos)
                    (not (Bd_not_msg_p012))

                    ; #81157: <==negation-removal== 66020 (pos)
                    (not (not_msg_p012))

                    ; #82142: <==negation-removal== 50692 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #82692: <==negation-removal== 23986 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #83391: <==negation-removal== 55565 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #87994: <==negation-removal== 19219 (pos)
                    (not (Pd_not_msg_p012))

                    ; #88668: <==negation-removal== 91503 (pos)
                    (not (Pa_not_msg_p012))))

    (:action commsurvivor_p012_b_s
        :precondition (and (Pb_survivorat_s_p012)
                           (at_b_p012)
                           (Bb_survivorat_s_p012))
        :effect (and
                    ; #10675: <==closure== 29192 (pos)
                    (Pa_survivorat_s_p012)

                    ; #19219: <==commonly_known== 66020 (pos)
                    (Bd_msg_p012)

                    ; #21901: <==closure== 58664 (pos)
                    (Pb_msg_p012)

                    ; #23986: origin
                    (Bb_survivorat_s_p012)

                    ; #29192: origin
                    (Ba_survivorat_s_p012)

                    ; #40322: <==closure== 19219 (pos)
                    (Pd_msg_p012)

                    ; #47264: origin
                    (Bd_survivorat_s_p012)

                    ; #50692: <==closure== 61832 (pos)
                    (Pc_survivorat_s_p012)

                    ; #55565: <==closure== 23986 (pos)
                    (Pb_survivorat_s_p012)

                    ; #58664: <==commonly_known== 66020 (pos)
                    (Bb_msg_p012)

                    ; #61832: origin
                    (Bc_survivorat_s_p012)

                    ; #62748: <==closure== 85843 (pos)
                    (Pc_msg_p012)

                    ; #66020: origin
                    (msg_p012)

                    ; #73493: <==closure== 47264 (pos)
                    (Pd_survivorat_s_p012)

                    ; #85843: <==commonly_known== 66020 (pos)
                    (Bc_msg_p012)

                    ; #88396: <==closure== 91503 (pos)
                    (Pa_msg_p012)

                    ; #91503: <==commonly_known== 66020 (pos)
                    (Ba_msg_p012)

                    ; #19567: <==negation-removal== 47264 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #24268: <==negation-removal== 21901 (pos)
                    (not (Bb_not_msg_p012))

                    ; #25390: <==negation-removal== 58664 (pos)
                    (not (Pb_not_msg_p012))

                    ; #42639: <==negation-removal== 10675 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #50914: <==negation-removal== 88396 (pos)
                    (not (Ba_not_msg_p012))

                    ; #55208: <==negation-removal== 62748 (pos)
                    (not (Bc_not_msg_p012))

                    ; #55764: <==negation-removal== 73493 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #57674: <==negation-removal== 85843 (pos)
                    (not (Pc_not_msg_p012))

                    ; #67366: <==negation-removal== 61832 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #72906: <==negation-removal== 29192 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #75207: <==negation-removal== 40322 (pos)
                    (not (Bd_not_msg_p012))

                    ; #81157: <==negation-removal== 66020 (pos)
                    (not (not_msg_p012))

                    ; #82142: <==negation-removal== 50692 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #82692: <==negation-removal== 23986 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #83391: <==negation-removal== 55565 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #87994: <==negation-removal== 19219 (pos)
                    (not (Pd_not_msg_p012))

                    ; #88668: <==negation-removal== 91503 (pos)
                    (not (Pa_not_msg_p012))))

    (:action commsurvivor_p012_c_s
        :precondition (and (Bc_survivorat_s_p012)
                           (Pc_survivorat_s_p012)
                           (at_c_p012))
        :effect (and
                    ; #10675: <==closure== 29192 (pos)
                    (Pa_survivorat_s_p012)

                    ; #19219: <==commonly_known== 66020 (pos)
                    (Bd_msg_p012)

                    ; #21901: <==closure== 58664 (pos)
                    (Pb_msg_p012)

                    ; #23986: origin
                    (Bb_survivorat_s_p012)

                    ; #29192: origin
                    (Ba_survivorat_s_p012)

                    ; #40322: <==closure== 19219 (pos)
                    (Pd_msg_p012)

                    ; #47264: origin
                    (Bd_survivorat_s_p012)

                    ; #50692: <==closure== 61832 (pos)
                    (Pc_survivorat_s_p012)

                    ; #55565: <==closure== 23986 (pos)
                    (Pb_survivorat_s_p012)

                    ; #58664: <==commonly_known== 66020 (pos)
                    (Bb_msg_p012)

                    ; #61832: origin
                    (Bc_survivorat_s_p012)

                    ; #62748: <==closure== 85843 (pos)
                    (Pc_msg_p012)

                    ; #66020: origin
                    (msg_p012)

                    ; #73493: <==closure== 47264 (pos)
                    (Pd_survivorat_s_p012)

                    ; #85843: <==commonly_known== 66020 (pos)
                    (Bc_msg_p012)

                    ; #88396: <==closure== 91503 (pos)
                    (Pa_msg_p012)

                    ; #91503: <==commonly_known== 66020 (pos)
                    (Ba_msg_p012)

                    ; #19567: <==negation-removal== 47264 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #24268: <==negation-removal== 21901 (pos)
                    (not (Bb_not_msg_p012))

                    ; #25390: <==negation-removal== 58664 (pos)
                    (not (Pb_not_msg_p012))

                    ; #42639: <==negation-removal== 10675 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #50914: <==negation-removal== 88396 (pos)
                    (not (Ba_not_msg_p012))

                    ; #55208: <==negation-removal== 62748 (pos)
                    (not (Bc_not_msg_p012))

                    ; #55764: <==negation-removal== 73493 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #57674: <==negation-removal== 85843 (pos)
                    (not (Pc_not_msg_p012))

                    ; #67366: <==negation-removal== 61832 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #72906: <==negation-removal== 29192 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #75207: <==negation-removal== 40322 (pos)
                    (not (Bd_not_msg_p012))

                    ; #81157: <==negation-removal== 66020 (pos)
                    (not (not_msg_p012))

                    ; #82142: <==negation-removal== 50692 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #82692: <==negation-removal== 23986 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #83391: <==negation-removal== 55565 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #87994: <==negation-removal== 19219 (pos)
                    (not (Pd_not_msg_p012))

                    ; #88668: <==negation-removal== 91503 (pos)
                    (not (Pa_not_msg_p012))))

    (:action commsurvivor_p012_d_s
        :precondition (and (Bd_survivorat_s_p012)
                           (at_d_p012)
                           (Pd_survivorat_s_p012))
        :effect (and
                    ; #10675: <==closure== 29192 (pos)
                    (Pa_survivorat_s_p012)

                    ; #19219: <==commonly_known== 66020 (pos)
                    (Bd_msg_p012)

                    ; #21901: <==closure== 58664 (pos)
                    (Pb_msg_p012)

                    ; #23986: origin
                    (Bb_survivorat_s_p012)

                    ; #29192: origin
                    (Ba_survivorat_s_p012)

                    ; #40322: <==closure== 19219 (pos)
                    (Pd_msg_p012)

                    ; #47264: origin
                    (Bd_survivorat_s_p012)

                    ; #50692: <==closure== 61832 (pos)
                    (Pc_survivorat_s_p012)

                    ; #55565: <==closure== 23986 (pos)
                    (Pb_survivorat_s_p012)

                    ; #58664: <==commonly_known== 66020 (pos)
                    (Bb_msg_p012)

                    ; #61832: origin
                    (Bc_survivorat_s_p012)

                    ; #62748: <==closure== 85843 (pos)
                    (Pc_msg_p012)

                    ; #66020: origin
                    (msg_p012)

                    ; #73493: <==closure== 47264 (pos)
                    (Pd_survivorat_s_p012)

                    ; #85843: <==commonly_known== 66020 (pos)
                    (Bc_msg_p012)

                    ; #88396: <==closure== 91503 (pos)
                    (Pa_msg_p012)

                    ; #91503: <==commonly_known== 66020 (pos)
                    (Ba_msg_p012)

                    ; #19567: <==negation-removal== 47264 (pos)
                    (not (Pd_not_survivorat_s_p012))

                    ; #24268: <==negation-removal== 21901 (pos)
                    (not (Bb_not_msg_p012))

                    ; #25390: <==negation-removal== 58664 (pos)
                    (not (Pb_not_msg_p012))

                    ; #42639: <==negation-removal== 10675 (pos)
                    (not (Ba_not_survivorat_s_p012))

                    ; #50914: <==negation-removal== 88396 (pos)
                    (not (Ba_not_msg_p012))

                    ; #55208: <==negation-removal== 62748 (pos)
                    (not (Bc_not_msg_p012))

                    ; #55764: <==negation-removal== 73493 (pos)
                    (not (Bd_not_survivorat_s_p012))

                    ; #57674: <==negation-removal== 85843 (pos)
                    (not (Pc_not_msg_p012))

                    ; #67366: <==negation-removal== 61832 (pos)
                    (not (Pc_not_survivorat_s_p012))

                    ; #72906: <==negation-removal== 29192 (pos)
                    (not (Pa_not_survivorat_s_p012))

                    ; #75207: <==negation-removal== 40322 (pos)
                    (not (Bd_not_msg_p012))

                    ; #81157: <==negation-removal== 66020 (pos)
                    (not (not_msg_p012))

                    ; #82142: <==negation-removal== 50692 (pos)
                    (not (Bc_not_survivorat_s_p012))

                    ; #82692: <==negation-removal== 23986 (pos)
                    (not (Pb_not_survivorat_s_p012))

                    ; #83391: <==negation-removal== 55565 (pos)
                    (not (Bb_not_survivorat_s_p012))

                    ; #87994: <==negation-removal== 19219 (pos)
                    (not (Pd_not_msg_p012))

                    ; #88668: <==negation-removal== 91503 (pos)
                    (not (Pa_not_msg_p012))))

    (:action commsurvivor_p10_a_s
        :precondition (and (Pa_survivorat_s_p10)
                           (at_a_p10)
                           (Ba_survivorat_s_p10))
        :effect (and
                    ; #13709: origin
                    (Ba_survivorat_s_p10)

                    ; #26852: <==commonly_known== 78278 (pos)
                    (Bc_msg_p10)

                    ; #34934: <==commonly_known== 78278 (pos)
                    (Bd_msg_p10)

                    ; #36627: origin
                    (Bb_survivorat_s_p10)

                    ; #39046: <==closure== 49955 (pos)
                    (Pd_survivorat_s_p10)

                    ; #49955: origin
                    (Bd_survivorat_s_p10)

                    ; #52680: <==closure== 82713 (pos)
                    (Pa_msg_p10)

                    ; #53813: <==closure== 36627 (pos)
                    (Pb_survivorat_s_p10)

                    ; #54366: <==closure== 78703 (pos)
                    (Pb_msg_p10)

                    ; #63808: <==closure== 26852 (pos)
                    (Pc_msg_p10)

                    ; #64834: <==closure== 77510 (pos)
                    (Pc_survivorat_s_p10)

                    ; #77510: origin
                    (Bc_survivorat_s_p10)

                    ; #78278: origin
                    (msg_p10)

                    ; #78703: <==commonly_known== 78278 (pos)
                    (Bb_msg_p10)

                    ; #79671: <==closure== 13709 (pos)
                    (Pa_survivorat_s_p10)

                    ; #81276: <==closure== 34934 (pos)
                    (Pd_msg_p10)

                    ; #82713: <==commonly_known== 78278 (pos)
                    (Ba_msg_p10)

                    ; #12944: <==negation-removal== 13709 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #13680: <==negation-removal== 39046 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #18884: <==negation-removal== 78278 (pos)
                    (not (not_msg_p10))

                    ; #27019: <==negation-removal== 26852 (pos)
                    (not (Pc_not_msg_p10))

                    ; #34272: <==negation-removal== 79671 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #41811: <==negation-removal== 52680 (pos)
                    (not (Ba_not_msg_p10))

                    ; #45838: <==negation-removal== 81276 (pos)
                    (not (Bd_not_msg_p10))

                    ; #63630: <==negation-removal== 63808 (pos)
                    (not (Bc_not_msg_p10))

                    ; #65271: <==negation-removal== 77510 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #66764: <==negation-removal== 53813 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #67006: <==negation-removal== 49955 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #68692: <==negation-removal== 64834 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #71484: <==negation-removal== 82713 (pos)
                    (not (Pa_not_msg_p10))

                    ; #72599: <==negation-removal== 78703 (pos)
                    (not (Pb_not_msg_p10))

                    ; #81972: <==negation-removal== 34934 (pos)
                    (not (Pd_not_msg_p10))

                    ; #82595: <==negation-removal== 36627 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #83654: <==negation-removal== 54366 (pos)
                    (not (Bb_not_msg_p10))))

    (:action commsurvivor_p10_b_s
        :precondition (and (Bb_survivorat_s_p10)
                           (Pb_survivorat_s_p10)
                           (at_b_p10))
        :effect (and
                    ; #13709: origin
                    (Ba_survivorat_s_p10)

                    ; #26852: <==commonly_known== 78278 (pos)
                    (Bc_msg_p10)

                    ; #34934: <==commonly_known== 78278 (pos)
                    (Bd_msg_p10)

                    ; #36627: origin
                    (Bb_survivorat_s_p10)

                    ; #39046: <==closure== 49955 (pos)
                    (Pd_survivorat_s_p10)

                    ; #49955: origin
                    (Bd_survivorat_s_p10)

                    ; #52680: <==closure== 82713 (pos)
                    (Pa_msg_p10)

                    ; #53813: <==closure== 36627 (pos)
                    (Pb_survivorat_s_p10)

                    ; #54366: <==closure== 78703 (pos)
                    (Pb_msg_p10)

                    ; #63808: <==closure== 26852 (pos)
                    (Pc_msg_p10)

                    ; #64834: <==closure== 77510 (pos)
                    (Pc_survivorat_s_p10)

                    ; #77510: origin
                    (Bc_survivorat_s_p10)

                    ; #78278: origin
                    (msg_p10)

                    ; #78703: <==commonly_known== 78278 (pos)
                    (Bb_msg_p10)

                    ; #79671: <==closure== 13709 (pos)
                    (Pa_survivorat_s_p10)

                    ; #81276: <==closure== 34934 (pos)
                    (Pd_msg_p10)

                    ; #82713: <==commonly_known== 78278 (pos)
                    (Ba_msg_p10)

                    ; #12944: <==negation-removal== 13709 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #13680: <==negation-removal== 39046 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #18884: <==negation-removal== 78278 (pos)
                    (not (not_msg_p10))

                    ; #27019: <==negation-removal== 26852 (pos)
                    (not (Pc_not_msg_p10))

                    ; #34272: <==negation-removal== 79671 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #41811: <==negation-removal== 52680 (pos)
                    (not (Ba_not_msg_p10))

                    ; #45838: <==negation-removal== 81276 (pos)
                    (not (Bd_not_msg_p10))

                    ; #63630: <==negation-removal== 63808 (pos)
                    (not (Bc_not_msg_p10))

                    ; #65271: <==negation-removal== 77510 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #66764: <==negation-removal== 53813 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #67006: <==negation-removal== 49955 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #68692: <==negation-removal== 64834 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #71484: <==negation-removal== 82713 (pos)
                    (not (Pa_not_msg_p10))

                    ; #72599: <==negation-removal== 78703 (pos)
                    (not (Pb_not_msg_p10))

                    ; #81972: <==negation-removal== 34934 (pos)
                    (not (Pd_not_msg_p10))

                    ; #82595: <==negation-removal== 36627 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #83654: <==negation-removal== 54366 (pos)
                    (not (Bb_not_msg_p10))))

    (:action commsurvivor_p10_c_s
        :precondition (and (at_c_p10)
                           (Pc_survivorat_s_p10)
                           (Bc_survivorat_s_p10))
        :effect (and
                    ; #13709: origin
                    (Ba_survivorat_s_p10)

                    ; #26852: <==commonly_known== 78278 (pos)
                    (Bc_msg_p10)

                    ; #34934: <==commonly_known== 78278 (pos)
                    (Bd_msg_p10)

                    ; #36627: origin
                    (Bb_survivorat_s_p10)

                    ; #39046: <==closure== 49955 (pos)
                    (Pd_survivorat_s_p10)

                    ; #49955: origin
                    (Bd_survivorat_s_p10)

                    ; #52680: <==closure== 82713 (pos)
                    (Pa_msg_p10)

                    ; #53813: <==closure== 36627 (pos)
                    (Pb_survivorat_s_p10)

                    ; #54366: <==closure== 78703 (pos)
                    (Pb_msg_p10)

                    ; #63808: <==closure== 26852 (pos)
                    (Pc_msg_p10)

                    ; #64834: <==closure== 77510 (pos)
                    (Pc_survivorat_s_p10)

                    ; #77510: origin
                    (Bc_survivorat_s_p10)

                    ; #78278: origin
                    (msg_p10)

                    ; #78703: <==commonly_known== 78278 (pos)
                    (Bb_msg_p10)

                    ; #79671: <==closure== 13709 (pos)
                    (Pa_survivorat_s_p10)

                    ; #81276: <==closure== 34934 (pos)
                    (Pd_msg_p10)

                    ; #82713: <==commonly_known== 78278 (pos)
                    (Ba_msg_p10)

                    ; #12944: <==negation-removal== 13709 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #13680: <==negation-removal== 39046 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #18884: <==negation-removal== 78278 (pos)
                    (not (not_msg_p10))

                    ; #27019: <==negation-removal== 26852 (pos)
                    (not (Pc_not_msg_p10))

                    ; #34272: <==negation-removal== 79671 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #41811: <==negation-removal== 52680 (pos)
                    (not (Ba_not_msg_p10))

                    ; #45838: <==negation-removal== 81276 (pos)
                    (not (Bd_not_msg_p10))

                    ; #63630: <==negation-removal== 63808 (pos)
                    (not (Bc_not_msg_p10))

                    ; #65271: <==negation-removal== 77510 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #66764: <==negation-removal== 53813 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #67006: <==negation-removal== 49955 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #68692: <==negation-removal== 64834 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #71484: <==negation-removal== 82713 (pos)
                    (not (Pa_not_msg_p10))

                    ; #72599: <==negation-removal== 78703 (pos)
                    (not (Pb_not_msg_p10))

                    ; #81972: <==negation-removal== 34934 (pos)
                    (not (Pd_not_msg_p10))

                    ; #82595: <==negation-removal== 36627 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #83654: <==negation-removal== 54366 (pos)
                    (not (Bb_not_msg_p10))))

    (:action commsurvivor_p10_d_s
        :precondition (and (Pd_survivorat_s_p10)
                           (Bd_survivorat_s_p10)
                           (at_d_p10))
        :effect (and
                    ; #13709: origin
                    (Ba_survivorat_s_p10)

                    ; #26852: <==commonly_known== 78278 (pos)
                    (Bc_msg_p10)

                    ; #34934: <==commonly_known== 78278 (pos)
                    (Bd_msg_p10)

                    ; #36627: origin
                    (Bb_survivorat_s_p10)

                    ; #39046: <==closure== 49955 (pos)
                    (Pd_survivorat_s_p10)

                    ; #49955: origin
                    (Bd_survivorat_s_p10)

                    ; #52680: <==closure== 82713 (pos)
                    (Pa_msg_p10)

                    ; #53813: <==closure== 36627 (pos)
                    (Pb_survivorat_s_p10)

                    ; #54366: <==closure== 78703 (pos)
                    (Pb_msg_p10)

                    ; #63808: <==closure== 26852 (pos)
                    (Pc_msg_p10)

                    ; #64834: <==closure== 77510 (pos)
                    (Pc_survivorat_s_p10)

                    ; #77510: origin
                    (Bc_survivorat_s_p10)

                    ; #78278: origin
                    (msg_p10)

                    ; #78703: <==commonly_known== 78278 (pos)
                    (Bb_msg_p10)

                    ; #79671: <==closure== 13709 (pos)
                    (Pa_survivorat_s_p10)

                    ; #81276: <==closure== 34934 (pos)
                    (Pd_msg_p10)

                    ; #82713: <==commonly_known== 78278 (pos)
                    (Ba_msg_p10)

                    ; #12944: <==negation-removal== 13709 (pos)
                    (not (Pa_not_survivorat_s_p10))

                    ; #13680: <==negation-removal== 39046 (pos)
                    (not (Bd_not_survivorat_s_p10))

                    ; #18884: <==negation-removal== 78278 (pos)
                    (not (not_msg_p10))

                    ; #27019: <==negation-removal== 26852 (pos)
                    (not (Pc_not_msg_p10))

                    ; #34272: <==negation-removal== 79671 (pos)
                    (not (Ba_not_survivorat_s_p10))

                    ; #41811: <==negation-removal== 52680 (pos)
                    (not (Ba_not_msg_p10))

                    ; #45838: <==negation-removal== 81276 (pos)
                    (not (Bd_not_msg_p10))

                    ; #63630: <==negation-removal== 63808 (pos)
                    (not (Bc_not_msg_p10))

                    ; #65271: <==negation-removal== 77510 (pos)
                    (not (Pc_not_survivorat_s_p10))

                    ; #66764: <==negation-removal== 53813 (pos)
                    (not (Bb_not_survivorat_s_p10))

                    ; #67006: <==negation-removal== 49955 (pos)
                    (not (Pd_not_survivorat_s_p10))

                    ; #68692: <==negation-removal== 64834 (pos)
                    (not (Bc_not_survivorat_s_p10))

                    ; #71484: <==negation-removal== 82713 (pos)
                    (not (Pa_not_msg_p10))

                    ; #72599: <==negation-removal== 78703 (pos)
                    (not (Pb_not_msg_p10))

                    ; #81972: <==negation-removal== 34934 (pos)
                    (not (Pd_not_msg_p10))

                    ; #82595: <==negation-removal== 36627 (pos)
                    (not (Pb_not_survivorat_s_p10))

                    ; #83654: <==negation-removal== 54366 (pos)
                    (not (Bb_not_msg_p10))))

    (:action commsurvivor_p1_a_s
        :precondition (and (Ba_survivorat_s_p1)
                           (Pa_survivorat_s_p1)
                           (at_a_p1))
        :effect (and
                    ; #21300: <==closure== 24612 (pos)
                    (Pb_survivorat_s_p1)

                    ; #24612: origin
                    (Bb_survivorat_s_p1)

                    ; #25049: <==commonly_known== 76632 (pos)
                    (Bc_msg_p1)

                    ; #26320: origin
                    (Ba_survivorat_s_p1)

                    ; #26840: <==closure== 42014 (pos)
                    (Pa_msg_p1)

                    ; #32897: <==closure== 25049 (pos)
                    (Pc_msg_p1)

                    ; #42014: <==commonly_known== 76632 (pos)
                    (Ba_msg_p1)

                    ; #54108: <==closure== 76200 (pos)
                    (Pd_msg_p1)

                    ; #56978: <==closure== 79670 (pos)
                    (Pb_msg_p1)

                    ; #59237: <==closure== 26320 (pos)
                    (Pa_survivorat_s_p1)

                    ; #71213: <==closure== 84237 (pos)
                    (Pc_survivorat_s_p1)

                    ; #76200: <==commonly_known== 76632 (pos)
                    (Bd_msg_p1)

                    ; #76632: origin
                    (msg_p1)

                    ; #79670: <==commonly_known== 76632 (pos)
                    (Bb_msg_p1)

                    ; #82697: origin
                    (Bd_survivorat_s_p1)

                    ; #84237: origin
                    (Bc_survivorat_s_p1)

                    ; #96379: <==closure== 82697 (pos)
                    (Pd_survivorat_s_p1)

                    ; #14269: <==negation-removal== 21300 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #14824: <==negation-removal== 25049 (pos)
                    (not (Pc_not_msg_p1))

                    ; #16871: <==negation-removal== 96379 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #17328: <==negation-removal== 76632 (pos)
                    (not (not_msg_p1))

                    ; #21306: <==negation-removal== 76200 (pos)
                    (not (Pd_not_msg_p1))

                    ; #28327: <==negation-removal== 59237 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #33352: <==negation-removal== 71213 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #37372: <==negation-removal== 26320 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #39482: <==negation-removal== 79670 (pos)
                    (not (Pb_not_msg_p1))

                    ; #45145: <==negation-removal== 56978 (pos)
                    (not (Bb_not_msg_p1))

                    ; #52563: <==negation-removal== 32897 (pos)
                    (not (Bc_not_msg_p1))

                    ; #54905: <==negation-removal== 82697 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #56819: <==negation-removal== 42014 (pos)
                    (not (Pa_not_msg_p1))

                    ; #65437: <==negation-removal== 84237 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #68908: <==negation-removal== 54108 (pos)
                    (not (Bd_not_msg_p1))

                    ; #83015: <==negation-removal== 26840 (pos)
                    (not (Ba_not_msg_p1))

                    ; #92220: <==negation-removal== 24612 (pos)
                    (not (Pb_not_survivorat_s_p1))))

    (:action commsurvivor_p1_b_s
        :precondition (and (at_b_p1)
                           (Bb_survivorat_s_p1)
                           (Pb_survivorat_s_p1))
        :effect (and
                    ; #21300: <==closure== 24612 (pos)
                    (Pb_survivorat_s_p1)

                    ; #24612: origin
                    (Bb_survivorat_s_p1)

                    ; #25049: <==commonly_known== 76632 (pos)
                    (Bc_msg_p1)

                    ; #26320: origin
                    (Ba_survivorat_s_p1)

                    ; #26840: <==closure== 42014 (pos)
                    (Pa_msg_p1)

                    ; #32897: <==closure== 25049 (pos)
                    (Pc_msg_p1)

                    ; #42014: <==commonly_known== 76632 (pos)
                    (Ba_msg_p1)

                    ; #54108: <==closure== 76200 (pos)
                    (Pd_msg_p1)

                    ; #56978: <==closure== 79670 (pos)
                    (Pb_msg_p1)

                    ; #59237: <==closure== 26320 (pos)
                    (Pa_survivorat_s_p1)

                    ; #71213: <==closure== 84237 (pos)
                    (Pc_survivorat_s_p1)

                    ; #76200: <==commonly_known== 76632 (pos)
                    (Bd_msg_p1)

                    ; #76632: origin
                    (msg_p1)

                    ; #79670: <==commonly_known== 76632 (pos)
                    (Bb_msg_p1)

                    ; #82697: origin
                    (Bd_survivorat_s_p1)

                    ; #84237: origin
                    (Bc_survivorat_s_p1)

                    ; #96379: <==closure== 82697 (pos)
                    (Pd_survivorat_s_p1)

                    ; #14269: <==negation-removal== 21300 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #14824: <==negation-removal== 25049 (pos)
                    (not (Pc_not_msg_p1))

                    ; #16871: <==negation-removal== 96379 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #17328: <==negation-removal== 76632 (pos)
                    (not (not_msg_p1))

                    ; #21306: <==negation-removal== 76200 (pos)
                    (not (Pd_not_msg_p1))

                    ; #28327: <==negation-removal== 59237 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #33352: <==negation-removal== 71213 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #37372: <==negation-removal== 26320 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #39482: <==negation-removal== 79670 (pos)
                    (not (Pb_not_msg_p1))

                    ; #45145: <==negation-removal== 56978 (pos)
                    (not (Bb_not_msg_p1))

                    ; #52563: <==negation-removal== 32897 (pos)
                    (not (Bc_not_msg_p1))

                    ; #54905: <==negation-removal== 82697 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #56819: <==negation-removal== 42014 (pos)
                    (not (Pa_not_msg_p1))

                    ; #65437: <==negation-removal== 84237 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #68908: <==negation-removal== 54108 (pos)
                    (not (Bd_not_msg_p1))

                    ; #83015: <==negation-removal== 26840 (pos)
                    (not (Ba_not_msg_p1))

                    ; #92220: <==negation-removal== 24612 (pos)
                    (not (Pb_not_survivorat_s_p1))))

    (:action commsurvivor_p1_c_s
        :precondition (and (at_c_p1)
                           (Bc_survivorat_s_p1)
                           (Pc_survivorat_s_p1))
        :effect (and
                    ; #21300: <==closure== 24612 (pos)
                    (Pb_survivorat_s_p1)

                    ; #24612: origin
                    (Bb_survivorat_s_p1)

                    ; #25049: <==commonly_known== 76632 (pos)
                    (Bc_msg_p1)

                    ; #26320: origin
                    (Ba_survivorat_s_p1)

                    ; #26840: <==closure== 42014 (pos)
                    (Pa_msg_p1)

                    ; #32897: <==closure== 25049 (pos)
                    (Pc_msg_p1)

                    ; #42014: <==commonly_known== 76632 (pos)
                    (Ba_msg_p1)

                    ; #54108: <==closure== 76200 (pos)
                    (Pd_msg_p1)

                    ; #56978: <==closure== 79670 (pos)
                    (Pb_msg_p1)

                    ; #59237: <==closure== 26320 (pos)
                    (Pa_survivorat_s_p1)

                    ; #71213: <==closure== 84237 (pos)
                    (Pc_survivorat_s_p1)

                    ; #76200: <==commonly_known== 76632 (pos)
                    (Bd_msg_p1)

                    ; #76632: origin
                    (msg_p1)

                    ; #79670: <==commonly_known== 76632 (pos)
                    (Bb_msg_p1)

                    ; #82697: origin
                    (Bd_survivorat_s_p1)

                    ; #84237: origin
                    (Bc_survivorat_s_p1)

                    ; #96379: <==closure== 82697 (pos)
                    (Pd_survivorat_s_p1)

                    ; #14269: <==negation-removal== 21300 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #14824: <==negation-removal== 25049 (pos)
                    (not (Pc_not_msg_p1))

                    ; #16871: <==negation-removal== 96379 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #17328: <==negation-removal== 76632 (pos)
                    (not (not_msg_p1))

                    ; #21306: <==negation-removal== 76200 (pos)
                    (not (Pd_not_msg_p1))

                    ; #28327: <==negation-removal== 59237 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #33352: <==negation-removal== 71213 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #37372: <==negation-removal== 26320 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #39482: <==negation-removal== 79670 (pos)
                    (not (Pb_not_msg_p1))

                    ; #45145: <==negation-removal== 56978 (pos)
                    (not (Bb_not_msg_p1))

                    ; #52563: <==negation-removal== 32897 (pos)
                    (not (Bc_not_msg_p1))

                    ; #54905: <==negation-removal== 82697 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #56819: <==negation-removal== 42014 (pos)
                    (not (Pa_not_msg_p1))

                    ; #65437: <==negation-removal== 84237 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #68908: <==negation-removal== 54108 (pos)
                    (not (Bd_not_msg_p1))

                    ; #83015: <==negation-removal== 26840 (pos)
                    (not (Ba_not_msg_p1))

                    ; #92220: <==negation-removal== 24612 (pos)
                    (not (Pb_not_survivorat_s_p1))))

    (:action commsurvivor_p1_d_s
        :precondition (and (Bd_survivorat_s_p1)
                           (Pd_survivorat_s_p1)
                           (at_d_p1))
        :effect (and
                    ; #21300: <==closure== 24612 (pos)
                    (Pb_survivorat_s_p1)

                    ; #24612: origin
                    (Bb_survivorat_s_p1)

                    ; #25049: <==commonly_known== 76632 (pos)
                    (Bc_msg_p1)

                    ; #26320: origin
                    (Ba_survivorat_s_p1)

                    ; #26840: <==closure== 42014 (pos)
                    (Pa_msg_p1)

                    ; #32897: <==closure== 25049 (pos)
                    (Pc_msg_p1)

                    ; #42014: <==commonly_known== 76632 (pos)
                    (Ba_msg_p1)

                    ; #54108: <==closure== 76200 (pos)
                    (Pd_msg_p1)

                    ; #56978: <==closure== 79670 (pos)
                    (Pb_msg_p1)

                    ; #59237: <==closure== 26320 (pos)
                    (Pa_survivorat_s_p1)

                    ; #71213: <==closure== 84237 (pos)
                    (Pc_survivorat_s_p1)

                    ; #76200: <==commonly_known== 76632 (pos)
                    (Bd_msg_p1)

                    ; #76632: origin
                    (msg_p1)

                    ; #79670: <==commonly_known== 76632 (pos)
                    (Bb_msg_p1)

                    ; #82697: origin
                    (Bd_survivorat_s_p1)

                    ; #84237: origin
                    (Bc_survivorat_s_p1)

                    ; #96379: <==closure== 82697 (pos)
                    (Pd_survivorat_s_p1)

                    ; #14269: <==negation-removal== 21300 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #14824: <==negation-removal== 25049 (pos)
                    (not (Pc_not_msg_p1))

                    ; #16871: <==negation-removal== 96379 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #17328: <==negation-removal== 76632 (pos)
                    (not (not_msg_p1))

                    ; #21306: <==negation-removal== 76200 (pos)
                    (not (Pd_not_msg_p1))

                    ; #28327: <==negation-removal== 59237 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #33352: <==negation-removal== 71213 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #37372: <==negation-removal== 26320 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #39482: <==negation-removal== 79670 (pos)
                    (not (Pb_not_msg_p1))

                    ; #45145: <==negation-removal== 56978 (pos)
                    (not (Bb_not_msg_p1))

                    ; #52563: <==negation-removal== 32897 (pos)
                    (not (Bc_not_msg_p1))

                    ; #54905: <==negation-removal== 82697 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #56819: <==negation-removal== 42014 (pos)
                    (not (Pa_not_msg_p1))

                    ; #65437: <==negation-removal== 84237 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #68908: <==negation-removal== 54108 (pos)
                    (not (Bd_not_msg_p1))

                    ; #83015: <==negation-removal== 26840 (pos)
                    (not (Ba_not_msg_p1))

                    ; #92220: <==negation-removal== 24612 (pos)
                    (not (Pb_not_survivorat_s_p1))))

    (:action commsurvivor_p2_a_s
        :precondition (and (at_a_p2)
                           (Ba_survivorat_s_p2)
                           (Pa_survivorat_s_p2))
        :effect (and
                    ; #10129: <==commonly_known== 60287 (pos)
                    (Bc_msg_p2)

                    ; #12675: <==commonly_known== 60287 (pos)
                    (Ba_msg_p2)

                    ; #21603: origin
                    (Bc_survivorat_s_p2)

                    ; #26656: origin
                    (Bd_survivorat_s_p2)

                    ; #28629: <==closure== 12675 (pos)
                    (Pa_msg_p2)

                    ; #28672: <==closure== 32219 (pos)
                    (Pb_msg_p2)

                    ; #30946: <==closure== 77622 (pos)
                    (Pb_survivorat_s_p2)

                    ; #32219: <==commonly_known== 60287 (pos)
                    (Bb_msg_p2)

                    ; #37393: <==closure== 21603 (pos)
                    (Pc_survivorat_s_p2)

                    ; #37960: <==closure== 26656 (pos)
                    (Pd_survivorat_s_p2)

                    ; #39839: origin
                    (Ba_survivorat_s_p2)

                    ; #52043: <==closure== 61731 (pos)
                    (Pd_msg_p2)

                    ; #53691: <==closure== 10129 (pos)
                    (Pc_msg_p2)

                    ; #60287: origin
                    (msg_p2)

                    ; #61731: <==commonly_known== 60287 (pos)
                    (Bd_msg_p2)

                    ; #68901: <==closure== 39839 (pos)
                    (Pa_survivorat_s_p2)

                    ; #77622: origin
                    (Bb_survivorat_s_p2)

                    ; #10425: <==negation-removal== 37960 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #21055: <==negation-removal== 26656 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #23037: <==negation-removal== 37393 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #25751: <==negation-removal== 68901 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #27609: <==negation-removal== 10129 (pos)
                    (not (Pc_not_msg_p2))

                    ; #34637: <==negation-removal== 21603 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #37144: <==negation-removal== 53691 (pos)
                    (not (Bc_not_msg_p2))

                    ; #42077: <==negation-removal== 12675 (pos)
                    (not (Pa_not_msg_p2))

                    ; #46199: <==negation-removal== 30946 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #47757: <==negation-removal== 52043 (pos)
                    (not (Bd_not_msg_p2))

                    ; #49824: <==negation-removal== 61731 (pos)
                    (not (Pd_not_msg_p2))

                    ; #53571: <==negation-removal== 28629 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53751: <==negation-removal== 60287 (pos)
                    (not (not_msg_p2))

                    ; #58655: <==negation-removal== 32219 (pos)
                    (not (Pb_not_msg_p2))

                    ; #72834: <==negation-removal== 77622 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #82468: <==negation-removal== 39839 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #84443: <==negation-removal== 28672 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p2_b_s
        :precondition (and (Bb_survivorat_s_p2)
                           (Pb_survivorat_s_p2)
                           (at_b_p2))
        :effect (and
                    ; #10129: <==commonly_known== 60287 (pos)
                    (Bc_msg_p2)

                    ; #12675: <==commonly_known== 60287 (pos)
                    (Ba_msg_p2)

                    ; #21603: origin
                    (Bc_survivorat_s_p2)

                    ; #26656: origin
                    (Bd_survivorat_s_p2)

                    ; #28629: <==closure== 12675 (pos)
                    (Pa_msg_p2)

                    ; #28672: <==closure== 32219 (pos)
                    (Pb_msg_p2)

                    ; #30946: <==closure== 77622 (pos)
                    (Pb_survivorat_s_p2)

                    ; #32219: <==commonly_known== 60287 (pos)
                    (Bb_msg_p2)

                    ; #37393: <==closure== 21603 (pos)
                    (Pc_survivorat_s_p2)

                    ; #37960: <==closure== 26656 (pos)
                    (Pd_survivorat_s_p2)

                    ; #39839: origin
                    (Ba_survivorat_s_p2)

                    ; #52043: <==closure== 61731 (pos)
                    (Pd_msg_p2)

                    ; #53691: <==closure== 10129 (pos)
                    (Pc_msg_p2)

                    ; #60287: origin
                    (msg_p2)

                    ; #61731: <==commonly_known== 60287 (pos)
                    (Bd_msg_p2)

                    ; #68901: <==closure== 39839 (pos)
                    (Pa_survivorat_s_p2)

                    ; #77622: origin
                    (Bb_survivorat_s_p2)

                    ; #10425: <==negation-removal== 37960 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #21055: <==negation-removal== 26656 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #23037: <==negation-removal== 37393 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #25751: <==negation-removal== 68901 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #27609: <==negation-removal== 10129 (pos)
                    (not (Pc_not_msg_p2))

                    ; #34637: <==negation-removal== 21603 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #37144: <==negation-removal== 53691 (pos)
                    (not (Bc_not_msg_p2))

                    ; #42077: <==negation-removal== 12675 (pos)
                    (not (Pa_not_msg_p2))

                    ; #46199: <==negation-removal== 30946 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #47757: <==negation-removal== 52043 (pos)
                    (not (Bd_not_msg_p2))

                    ; #49824: <==negation-removal== 61731 (pos)
                    (not (Pd_not_msg_p2))

                    ; #53571: <==negation-removal== 28629 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53751: <==negation-removal== 60287 (pos)
                    (not (not_msg_p2))

                    ; #58655: <==negation-removal== 32219 (pos)
                    (not (Pb_not_msg_p2))

                    ; #72834: <==negation-removal== 77622 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #82468: <==negation-removal== 39839 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #84443: <==negation-removal== 28672 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p2_c_s
        :precondition (and (at_c_p2)
                           (Bc_survivorat_s_p2)
                           (Pc_survivorat_s_p2))
        :effect (and
                    ; #10129: <==commonly_known== 60287 (pos)
                    (Bc_msg_p2)

                    ; #12675: <==commonly_known== 60287 (pos)
                    (Ba_msg_p2)

                    ; #21603: origin
                    (Bc_survivorat_s_p2)

                    ; #26656: origin
                    (Bd_survivorat_s_p2)

                    ; #28629: <==closure== 12675 (pos)
                    (Pa_msg_p2)

                    ; #28672: <==closure== 32219 (pos)
                    (Pb_msg_p2)

                    ; #30946: <==closure== 77622 (pos)
                    (Pb_survivorat_s_p2)

                    ; #32219: <==commonly_known== 60287 (pos)
                    (Bb_msg_p2)

                    ; #37393: <==closure== 21603 (pos)
                    (Pc_survivorat_s_p2)

                    ; #37960: <==closure== 26656 (pos)
                    (Pd_survivorat_s_p2)

                    ; #39839: origin
                    (Ba_survivorat_s_p2)

                    ; #52043: <==closure== 61731 (pos)
                    (Pd_msg_p2)

                    ; #53691: <==closure== 10129 (pos)
                    (Pc_msg_p2)

                    ; #60287: origin
                    (msg_p2)

                    ; #61731: <==commonly_known== 60287 (pos)
                    (Bd_msg_p2)

                    ; #68901: <==closure== 39839 (pos)
                    (Pa_survivorat_s_p2)

                    ; #77622: origin
                    (Bb_survivorat_s_p2)

                    ; #10425: <==negation-removal== 37960 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #21055: <==negation-removal== 26656 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #23037: <==negation-removal== 37393 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #25751: <==negation-removal== 68901 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #27609: <==negation-removal== 10129 (pos)
                    (not (Pc_not_msg_p2))

                    ; #34637: <==negation-removal== 21603 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #37144: <==negation-removal== 53691 (pos)
                    (not (Bc_not_msg_p2))

                    ; #42077: <==negation-removal== 12675 (pos)
                    (not (Pa_not_msg_p2))

                    ; #46199: <==negation-removal== 30946 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #47757: <==negation-removal== 52043 (pos)
                    (not (Bd_not_msg_p2))

                    ; #49824: <==negation-removal== 61731 (pos)
                    (not (Pd_not_msg_p2))

                    ; #53571: <==negation-removal== 28629 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53751: <==negation-removal== 60287 (pos)
                    (not (not_msg_p2))

                    ; #58655: <==negation-removal== 32219 (pos)
                    (not (Pb_not_msg_p2))

                    ; #72834: <==negation-removal== 77622 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #82468: <==negation-removal== 39839 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #84443: <==negation-removal== 28672 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p2_d_s
        :precondition (and (Bd_survivorat_s_p2)
                           (Pd_survivorat_s_p2)
                           (at_d_p2))
        :effect (and
                    ; #10129: <==commonly_known== 60287 (pos)
                    (Bc_msg_p2)

                    ; #12675: <==commonly_known== 60287 (pos)
                    (Ba_msg_p2)

                    ; #21603: origin
                    (Bc_survivorat_s_p2)

                    ; #26656: origin
                    (Bd_survivorat_s_p2)

                    ; #28629: <==closure== 12675 (pos)
                    (Pa_msg_p2)

                    ; #28672: <==closure== 32219 (pos)
                    (Pb_msg_p2)

                    ; #30946: <==closure== 77622 (pos)
                    (Pb_survivorat_s_p2)

                    ; #32219: <==commonly_known== 60287 (pos)
                    (Bb_msg_p2)

                    ; #37393: <==closure== 21603 (pos)
                    (Pc_survivorat_s_p2)

                    ; #37960: <==closure== 26656 (pos)
                    (Pd_survivorat_s_p2)

                    ; #39839: origin
                    (Ba_survivorat_s_p2)

                    ; #52043: <==closure== 61731 (pos)
                    (Pd_msg_p2)

                    ; #53691: <==closure== 10129 (pos)
                    (Pc_msg_p2)

                    ; #60287: origin
                    (msg_p2)

                    ; #61731: <==commonly_known== 60287 (pos)
                    (Bd_msg_p2)

                    ; #68901: <==closure== 39839 (pos)
                    (Pa_survivorat_s_p2)

                    ; #77622: origin
                    (Bb_survivorat_s_p2)

                    ; #10425: <==negation-removal== 37960 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #21055: <==negation-removal== 26656 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #23037: <==negation-removal== 37393 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #25751: <==negation-removal== 68901 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #27609: <==negation-removal== 10129 (pos)
                    (not (Pc_not_msg_p2))

                    ; #34637: <==negation-removal== 21603 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #37144: <==negation-removal== 53691 (pos)
                    (not (Bc_not_msg_p2))

                    ; #42077: <==negation-removal== 12675 (pos)
                    (not (Pa_not_msg_p2))

                    ; #46199: <==negation-removal== 30946 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #47757: <==negation-removal== 52043 (pos)
                    (not (Bd_not_msg_p2))

                    ; #49824: <==negation-removal== 61731 (pos)
                    (not (Pd_not_msg_p2))

                    ; #53571: <==negation-removal== 28629 (pos)
                    (not (Ba_not_msg_p2))

                    ; #53751: <==negation-removal== 60287 (pos)
                    (not (not_msg_p2))

                    ; #58655: <==negation-removal== 32219 (pos)
                    (not (Pb_not_msg_p2))

                    ; #72834: <==negation-removal== 77622 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #82468: <==negation-removal== 39839 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #84443: <==negation-removal== 28672 (pos)
                    (not (Bb_not_msg_p2))))

    (:action commsurvivor_p3_a_s
        :precondition (and (at_a_p3)
                           (Ba_survivorat_s_p3)
                           (Pa_survivorat_s_p3))
        :effect (and
                    ; #19430: <==closure== 60086 (pos)
                    (Pa_msg_p3)

                    ; #21342: <==commonly_known== 44043 (pos)
                    (Bc_msg_p3)

                    ; #23672: <==closure== 28532 (pos)
                    (Pc_survivorat_s_p3)

                    ; #28532: origin
                    (Bc_survivorat_s_p3)

                    ; #30204: <==closure== 51327 (pos)
                    (Pd_msg_p3)

                    ; #39733: <==closure== 21342 (pos)
                    (Pc_msg_p3)

                    ; #44043: origin
                    (msg_p3)

                    ; #51327: <==commonly_known== 44043 (pos)
                    (Bd_msg_p3)

                    ; #57163: <==commonly_known== 44043 (pos)
                    (Bb_msg_p3)

                    ; #58021: <==closure== 65976 (pos)
                    (Pb_survivorat_s_p3)

                    ; #60086: <==commonly_known== 44043 (pos)
                    (Ba_msg_p3)

                    ; #60975: origin
                    (Bd_survivorat_s_p3)

                    ; #65976: origin
                    (Bb_survivorat_s_p3)

                    ; #68867: origin
                    (Ba_survivorat_s_p3)

                    ; #70804: <==closure== 68867 (pos)
                    (Pa_survivorat_s_p3)

                    ; #73495: <==closure== 60975 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84637: <==closure== 57163 (pos)
                    (Pb_msg_p3)

                    ; #18970: <==negation-removal== 28532 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #20978: <==negation-removal== 19430 (pos)
                    (not (Ba_not_msg_p3))

                    ; #40175: <==negation-removal== 68867 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #41018: <==negation-removal== 60086 (pos)
                    (not (Pa_not_msg_p3))

                    ; #46777: <==negation-removal== 51327 (pos)
                    (not (Pd_not_msg_p3))

                    ; #49512: <==negation-removal== 23672 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #53610: <==negation-removal== 58021 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #56670: <==negation-removal== 60975 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #58731: <==negation-removal== 73495 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #67239: <==negation-removal== 21342 (pos)
                    (not (Pc_not_msg_p3))

                    ; #71575: <==negation-removal== 84637 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74375: <==negation-removal== 44043 (pos)
                    (not (not_msg_p3))

                    ; #74639: <==negation-removal== 39733 (pos)
                    (not (Bc_not_msg_p3))

                    ; #74740: <==negation-removal== 65976 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #80266: <==negation-removal== 70804 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #88015: <==negation-removal== 57163 (pos)
                    (not (Pb_not_msg_p3))

                    ; #89273: <==negation-removal== 30204 (pos)
                    (not (Bd_not_msg_p3))))

    (:action commsurvivor_p3_b_s
        :precondition (and (Pb_survivorat_s_p3)
                           (at_b_p3)
                           (Bb_survivorat_s_p3))
        :effect (and
                    ; #19430: <==closure== 60086 (pos)
                    (Pa_msg_p3)

                    ; #21342: <==commonly_known== 44043 (pos)
                    (Bc_msg_p3)

                    ; #23672: <==closure== 28532 (pos)
                    (Pc_survivorat_s_p3)

                    ; #28532: origin
                    (Bc_survivorat_s_p3)

                    ; #30204: <==closure== 51327 (pos)
                    (Pd_msg_p3)

                    ; #39733: <==closure== 21342 (pos)
                    (Pc_msg_p3)

                    ; #44043: origin
                    (msg_p3)

                    ; #51327: <==commonly_known== 44043 (pos)
                    (Bd_msg_p3)

                    ; #57163: <==commonly_known== 44043 (pos)
                    (Bb_msg_p3)

                    ; #58021: <==closure== 65976 (pos)
                    (Pb_survivorat_s_p3)

                    ; #60086: <==commonly_known== 44043 (pos)
                    (Ba_msg_p3)

                    ; #60975: origin
                    (Bd_survivorat_s_p3)

                    ; #65976: origin
                    (Bb_survivorat_s_p3)

                    ; #68867: origin
                    (Ba_survivorat_s_p3)

                    ; #70804: <==closure== 68867 (pos)
                    (Pa_survivorat_s_p3)

                    ; #73495: <==closure== 60975 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84637: <==closure== 57163 (pos)
                    (Pb_msg_p3)

                    ; #18970: <==negation-removal== 28532 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #20978: <==negation-removal== 19430 (pos)
                    (not (Ba_not_msg_p3))

                    ; #40175: <==negation-removal== 68867 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #41018: <==negation-removal== 60086 (pos)
                    (not (Pa_not_msg_p3))

                    ; #46777: <==negation-removal== 51327 (pos)
                    (not (Pd_not_msg_p3))

                    ; #49512: <==negation-removal== 23672 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #53610: <==negation-removal== 58021 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #56670: <==negation-removal== 60975 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #58731: <==negation-removal== 73495 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #67239: <==negation-removal== 21342 (pos)
                    (not (Pc_not_msg_p3))

                    ; #71575: <==negation-removal== 84637 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74375: <==negation-removal== 44043 (pos)
                    (not (not_msg_p3))

                    ; #74639: <==negation-removal== 39733 (pos)
                    (not (Bc_not_msg_p3))

                    ; #74740: <==negation-removal== 65976 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #80266: <==negation-removal== 70804 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #88015: <==negation-removal== 57163 (pos)
                    (not (Pb_not_msg_p3))

                    ; #89273: <==negation-removal== 30204 (pos)
                    (not (Bd_not_msg_p3))))

    (:action commsurvivor_p3_c_s
        :precondition (and (Pc_survivorat_s_p3)
                           (at_c_p3)
                           (Bc_survivorat_s_p3))
        :effect (and
                    ; #19430: <==closure== 60086 (pos)
                    (Pa_msg_p3)

                    ; #21342: <==commonly_known== 44043 (pos)
                    (Bc_msg_p3)

                    ; #23672: <==closure== 28532 (pos)
                    (Pc_survivorat_s_p3)

                    ; #28532: origin
                    (Bc_survivorat_s_p3)

                    ; #30204: <==closure== 51327 (pos)
                    (Pd_msg_p3)

                    ; #39733: <==closure== 21342 (pos)
                    (Pc_msg_p3)

                    ; #44043: origin
                    (msg_p3)

                    ; #51327: <==commonly_known== 44043 (pos)
                    (Bd_msg_p3)

                    ; #57163: <==commonly_known== 44043 (pos)
                    (Bb_msg_p3)

                    ; #58021: <==closure== 65976 (pos)
                    (Pb_survivorat_s_p3)

                    ; #60086: <==commonly_known== 44043 (pos)
                    (Ba_msg_p3)

                    ; #60975: origin
                    (Bd_survivorat_s_p3)

                    ; #65976: origin
                    (Bb_survivorat_s_p3)

                    ; #68867: origin
                    (Ba_survivorat_s_p3)

                    ; #70804: <==closure== 68867 (pos)
                    (Pa_survivorat_s_p3)

                    ; #73495: <==closure== 60975 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84637: <==closure== 57163 (pos)
                    (Pb_msg_p3)

                    ; #18970: <==negation-removal== 28532 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #20978: <==negation-removal== 19430 (pos)
                    (not (Ba_not_msg_p3))

                    ; #40175: <==negation-removal== 68867 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #41018: <==negation-removal== 60086 (pos)
                    (not (Pa_not_msg_p3))

                    ; #46777: <==negation-removal== 51327 (pos)
                    (not (Pd_not_msg_p3))

                    ; #49512: <==negation-removal== 23672 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #53610: <==negation-removal== 58021 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #56670: <==negation-removal== 60975 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #58731: <==negation-removal== 73495 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #67239: <==negation-removal== 21342 (pos)
                    (not (Pc_not_msg_p3))

                    ; #71575: <==negation-removal== 84637 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74375: <==negation-removal== 44043 (pos)
                    (not (not_msg_p3))

                    ; #74639: <==negation-removal== 39733 (pos)
                    (not (Bc_not_msg_p3))

                    ; #74740: <==negation-removal== 65976 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #80266: <==negation-removal== 70804 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #88015: <==negation-removal== 57163 (pos)
                    (not (Pb_not_msg_p3))

                    ; #89273: <==negation-removal== 30204 (pos)
                    (not (Bd_not_msg_p3))))

    (:action commsurvivor_p3_d_s
        :precondition (and (Bd_survivorat_s_p3)
                           (Pd_survivorat_s_p3)
                           (at_d_p3))
        :effect (and
                    ; #19430: <==closure== 60086 (pos)
                    (Pa_msg_p3)

                    ; #21342: <==commonly_known== 44043 (pos)
                    (Bc_msg_p3)

                    ; #23672: <==closure== 28532 (pos)
                    (Pc_survivorat_s_p3)

                    ; #28532: origin
                    (Bc_survivorat_s_p3)

                    ; #30204: <==closure== 51327 (pos)
                    (Pd_msg_p3)

                    ; #39733: <==closure== 21342 (pos)
                    (Pc_msg_p3)

                    ; #44043: origin
                    (msg_p3)

                    ; #51327: <==commonly_known== 44043 (pos)
                    (Bd_msg_p3)

                    ; #57163: <==commonly_known== 44043 (pos)
                    (Bb_msg_p3)

                    ; #58021: <==closure== 65976 (pos)
                    (Pb_survivorat_s_p3)

                    ; #60086: <==commonly_known== 44043 (pos)
                    (Ba_msg_p3)

                    ; #60975: origin
                    (Bd_survivorat_s_p3)

                    ; #65976: origin
                    (Bb_survivorat_s_p3)

                    ; #68867: origin
                    (Ba_survivorat_s_p3)

                    ; #70804: <==closure== 68867 (pos)
                    (Pa_survivorat_s_p3)

                    ; #73495: <==closure== 60975 (pos)
                    (Pd_survivorat_s_p3)

                    ; #84637: <==closure== 57163 (pos)
                    (Pb_msg_p3)

                    ; #18970: <==negation-removal== 28532 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #20978: <==negation-removal== 19430 (pos)
                    (not (Ba_not_msg_p3))

                    ; #40175: <==negation-removal== 68867 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #41018: <==negation-removal== 60086 (pos)
                    (not (Pa_not_msg_p3))

                    ; #46777: <==negation-removal== 51327 (pos)
                    (not (Pd_not_msg_p3))

                    ; #49512: <==negation-removal== 23672 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #53610: <==negation-removal== 58021 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #56670: <==negation-removal== 60975 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #58731: <==negation-removal== 73495 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #67239: <==negation-removal== 21342 (pos)
                    (not (Pc_not_msg_p3))

                    ; #71575: <==negation-removal== 84637 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74375: <==negation-removal== 44043 (pos)
                    (not (not_msg_p3))

                    ; #74639: <==negation-removal== 39733 (pos)
                    (not (Bc_not_msg_p3))

                    ; #74740: <==negation-removal== 65976 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #80266: <==negation-removal== 70804 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #88015: <==negation-removal== 57163 (pos)
                    (not (Pb_not_msg_p3))

                    ; #89273: <==negation-removal== 30204 (pos)
                    (not (Bd_not_msg_p3))))

    (:action commsurvivor_p4_a_s
        :precondition (and (Ba_survivorat_s_p4)
                           (Pa_survivorat_s_p4)
                           (at_a_p4))
        :effect (and
                    ; #15760: <==commonly_known== 35617 (pos)
                    (Bb_msg_p4)

                    ; #31994: origin
                    (Ba_survivorat_s_p4)

                    ; #35617: origin
                    (msg_p4)

                    ; #38973: <==commonly_known== 35617 (pos)
                    (Bc_msg_p4)

                    ; #42909: <==closure== 15760 (pos)
                    (Pb_msg_p4)

                    ; #46706: <==closure== 68979 (pos)
                    (Pc_survivorat_s_p4)

                    ; #54137: <==commonly_known== 35617 (pos)
                    (Bd_msg_p4)

                    ; #55811: <==closure== 82474 (pos)
                    (Pb_survivorat_s_p4)

                    ; #67005: origin
                    (Bd_survivorat_s_p4)

                    ; #68297: <==closure== 38973 (pos)
                    (Pc_msg_p4)

                    ; #68979: origin
                    (Bc_survivorat_s_p4)

                    ; #71713: <==closure== 54137 (pos)
                    (Pd_msg_p4)

                    ; #72155: <==closure== 67005 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74149: <==commonly_known== 35617 (pos)
                    (Ba_msg_p4)

                    ; #75044: <==closure== 31994 (pos)
                    (Pa_survivorat_s_p4)

                    ; #77136: <==closure== 74149 (pos)
                    (Pa_msg_p4)

                    ; #82474: origin
                    (Bb_survivorat_s_p4)

                    ; #18557: <==negation-removal== 42909 (pos)
                    (not (Bb_not_msg_p4))

                    ; #22527: <==negation-removal== 38973 (pos)
                    (not (Pc_not_msg_p4))

                    ; #33509: <==negation-removal== 31994 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #40682: <==negation-removal== 72155 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #43712: <==negation-removal== 68297 (pos)
                    (not (Bc_not_msg_p4))

                    ; #44423: <==negation-removal== 74149 (pos)
                    (not (Pa_not_msg_p4))

                    ; #46577: <==negation-removal== 35617 (pos)
                    (not (not_msg_p4))

                    ; #46918: <==negation-removal== 54137 (pos)
                    (not (Pd_not_msg_p4))

                    ; #61359: <==negation-removal== 68979 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #65423: <==negation-removal== 67005 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #66855: <==negation-removal== 82474 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #66972: <==negation-removal== 77136 (pos)
                    (not (Ba_not_msg_p4))

                    ; #68609: <==negation-removal== 75044 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #77997: <==negation-removal== 55811 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #86301: <==negation-removal== 46706 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #86992: <==negation-removal== 71713 (pos)
                    (not (Bd_not_msg_p4))

                    ; #91664: <==negation-removal== 15760 (pos)
                    (not (Pb_not_msg_p4))))

    (:action commsurvivor_p4_b_s
        :precondition (and (Bb_survivorat_s_p4)
                           (Pb_survivorat_s_p4)
                           (at_b_p4))
        :effect (and
                    ; #15760: <==commonly_known== 35617 (pos)
                    (Bb_msg_p4)

                    ; #31994: origin
                    (Ba_survivorat_s_p4)

                    ; #35617: origin
                    (msg_p4)

                    ; #38973: <==commonly_known== 35617 (pos)
                    (Bc_msg_p4)

                    ; #42909: <==closure== 15760 (pos)
                    (Pb_msg_p4)

                    ; #46706: <==closure== 68979 (pos)
                    (Pc_survivorat_s_p4)

                    ; #54137: <==commonly_known== 35617 (pos)
                    (Bd_msg_p4)

                    ; #55811: <==closure== 82474 (pos)
                    (Pb_survivorat_s_p4)

                    ; #67005: origin
                    (Bd_survivorat_s_p4)

                    ; #68297: <==closure== 38973 (pos)
                    (Pc_msg_p4)

                    ; #68979: origin
                    (Bc_survivorat_s_p4)

                    ; #71713: <==closure== 54137 (pos)
                    (Pd_msg_p4)

                    ; #72155: <==closure== 67005 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74149: <==commonly_known== 35617 (pos)
                    (Ba_msg_p4)

                    ; #75044: <==closure== 31994 (pos)
                    (Pa_survivorat_s_p4)

                    ; #77136: <==closure== 74149 (pos)
                    (Pa_msg_p4)

                    ; #82474: origin
                    (Bb_survivorat_s_p4)

                    ; #18557: <==negation-removal== 42909 (pos)
                    (not (Bb_not_msg_p4))

                    ; #22527: <==negation-removal== 38973 (pos)
                    (not (Pc_not_msg_p4))

                    ; #33509: <==negation-removal== 31994 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #40682: <==negation-removal== 72155 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #43712: <==negation-removal== 68297 (pos)
                    (not (Bc_not_msg_p4))

                    ; #44423: <==negation-removal== 74149 (pos)
                    (not (Pa_not_msg_p4))

                    ; #46577: <==negation-removal== 35617 (pos)
                    (not (not_msg_p4))

                    ; #46918: <==negation-removal== 54137 (pos)
                    (not (Pd_not_msg_p4))

                    ; #61359: <==negation-removal== 68979 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #65423: <==negation-removal== 67005 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #66855: <==negation-removal== 82474 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #66972: <==negation-removal== 77136 (pos)
                    (not (Ba_not_msg_p4))

                    ; #68609: <==negation-removal== 75044 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #77997: <==negation-removal== 55811 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #86301: <==negation-removal== 46706 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #86992: <==negation-removal== 71713 (pos)
                    (not (Bd_not_msg_p4))

                    ; #91664: <==negation-removal== 15760 (pos)
                    (not (Pb_not_msg_p4))))

    (:action commsurvivor_p4_c_s
        :precondition (and (Bc_survivorat_s_p4)
                           (Pc_survivorat_s_p4)
                           (at_c_p4))
        :effect (and
                    ; #15760: <==commonly_known== 35617 (pos)
                    (Bb_msg_p4)

                    ; #31994: origin
                    (Ba_survivorat_s_p4)

                    ; #35617: origin
                    (msg_p4)

                    ; #38973: <==commonly_known== 35617 (pos)
                    (Bc_msg_p4)

                    ; #42909: <==closure== 15760 (pos)
                    (Pb_msg_p4)

                    ; #46706: <==closure== 68979 (pos)
                    (Pc_survivorat_s_p4)

                    ; #54137: <==commonly_known== 35617 (pos)
                    (Bd_msg_p4)

                    ; #55811: <==closure== 82474 (pos)
                    (Pb_survivorat_s_p4)

                    ; #67005: origin
                    (Bd_survivorat_s_p4)

                    ; #68297: <==closure== 38973 (pos)
                    (Pc_msg_p4)

                    ; #68979: origin
                    (Bc_survivorat_s_p4)

                    ; #71713: <==closure== 54137 (pos)
                    (Pd_msg_p4)

                    ; #72155: <==closure== 67005 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74149: <==commonly_known== 35617 (pos)
                    (Ba_msg_p4)

                    ; #75044: <==closure== 31994 (pos)
                    (Pa_survivorat_s_p4)

                    ; #77136: <==closure== 74149 (pos)
                    (Pa_msg_p4)

                    ; #82474: origin
                    (Bb_survivorat_s_p4)

                    ; #18557: <==negation-removal== 42909 (pos)
                    (not (Bb_not_msg_p4))

                    ; #22527: <==negation-removal== 38973 (pos)
                    (not (Pc_not_msg_p4))

                    ; #33509: <==negation-removal== 31994 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #40682: <==negation-removal== 72155 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #43712: <==negation-removal== 68297 (pos)
                    (not (Bc_not_msg_p4))

                    ; #44423: <==negation-removal== 74149 (pos)
                    (not (Pa_not_msg_p4))

                    ; #46577: <==negation-removal== 35617 (pos)
                    (not (not_msg_p4))

                    ; #46918: <==negation-removal== 54137 (pos)
                    (not (Pd_not_msg_p4))

                    ; #61359: <==negation-removal== 68979 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #65423: <==negation-removal== 67005 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #66855: <==negation-removal== 82474 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #66972: <==negation-removal== 77136 (pos)
                    (not (Ba_not_msg_p4))

                    ; #68609: <==negation-removal== 75044 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #77997: <==negation-removal== 55811 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #86301: <==negation-removal== 46706 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #86992: <==negation-removal== 71713 (pos)
                    (not (Bd_not_msg_p4))

                    ; #91664: <==negation-removal== 15760 (pos)
                    (not (Pb_not_msg_p4))))

    (:action commsurvivor_p4_d_s
        :precondition (and (at_d_p4)
                           (Pd_survivorat_s_p4)
                           (Bd_survivorat_s_p4))
        :effect (and
                    ; #15760: <==commonly_known== 35617 (pos)
                    (Bb_msg_p4)

                    ; #31994: origin
                    (Ba_survivorat_s_p4)

                    ; #35617: origin
                    (msg_p4)

                    ; #38973: <==commonly_known== 35617 (pos)
                    (Bc_msg_p4)

                    ; #42909: <==closure== 15760 (pos)
                    (Pb_msg_p4)

                    ; #46706: <==closure== 68979 (pos)
                    (Pc_survivorat_s_p4)

                    ; #54137: <==commonly_known== 35617 (pos)
                    (Bd_msg_p4)

                    ; #55811: <==closure== 82474 (pos)
                    (Pb_survivorat_s_p4)

                    ; #67005: origin
                    (Bd_survivorat_s_p4)

                    ; #68297: <==closure== 38973 (pos)
                    (Pc_msg_p4)

                    ; #68979: origin
                    (Bc_survivorat_s_p4)

                    ; #71713: <==closure== 54137 (pos)
                    (Pd_msg_p4)

                    ; #72155: <==closure== 67005 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74149: <==commonly_known== 35617 (pos)
                    (Ba_msg_p4)

                    ; #75044: <==closure== 31994 (pos)
                    (Pa_survivorat_s_p4)

                    ; #77136: <==closure== 74149 (pos)
                    (Pa_msg_p4)

                    ; #82474: origin
                    (Bb_survivorat_s_p4)

                    ; #18557: <==negation-removal== 42909 (pos)
                    (not (Bb_not_msg_p4))

                    ; #22527: <==negation-removal== 38973 (pos)
                    (not (Pc_not_msg_p4))

                    ; #33509: <==negation-removal== 31994 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #40682: <==negation-removal== 72155 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #43712: <==negation-removal== 68297 (pos)
                    (not (Bc_not_msg_p4))

                    ; #44423: <==negation-removal== 74149 (pos)
                    (not (Pa_not_msg_p4))

                    ; #46577: <==negation-removal== 35617 (pos)
                    (not (not_msg_p4))

                    ; #46918: <==negation-removal== 54137 (pos)
                    (not (Pd_not_msg_p4))

                    ; #61359: <==negation-removal== 68979 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #65423: <==negation-removal== 67005 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #66855: <==negation-removal== 82474 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #66972: <==negation-removal== 77136 (pos)
                    (not (Ba_not_msg_p4))

                    ; #68609: <==negation-removal== 75044 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #77997: <==negation-removal== 55811 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #86301: <==negation-removal== 46706 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #86992: <==negation-removal== 71713 (pos)
                    (not (Bd_not_msg_p4))

                    ; #91664: <==negation-removal== 15760 (pos)
                    (not (Pb_not_msg_p4))))

    (:action commsurvivor_p5_a_s
        :precondition (and (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5)
                           (at_a_p5))
        :effect (and
                    ; #23675: <==closure== 29986 (pos)
                    (Pb_survivorat_s_p5)

                    ; #29986: origin
                    (Bb_survivorat_s_p5)

                    ; #30642: <==closure== 56208 (pos)
                    (Pb_msg_p5)

                    ; #38932: <==closure== 66092 (pos)
                    (Pd_survivorat_s_p5)

                    ; #42393: <==closure== 47000 (pos)
                    (Pc_msg_p5)

                    ; #42885: <==closure== 76661 (pos)
                    (Pd_msg_p5)

                    ; #47000: <==commonly_known== 68825 (pos)
                    (Bc_msg_p5)

                    ; #56208: <==commonly_known== 68825 (pos)
                    (Bb_msg_p5)

                    ; #56809: <==closure== 73357 (pos)
                    (Pa_survivorat_s_p5)

                    ; #66092: origin
                    (Bd_survivorat_s_p5)

                    ; #68825: origin
                    (msg_p5)

                    ; #72958: origin
                    (Bc_survivorat_s_p5)

                    ; #73357: origin
                    (Ba_survivorat_s_p5)

                    ; #73788: <==closure== 72958 (pos)
                    (Pc_survivorat_s_p5)

                    ; #76661: <==commonly_known== 68825 (pos)
                    (Bd_msg_p5)

                    ; #79565: <==commonly_known== 68825 (pos)
                    (Ba_msg_p5)

                    ; #92002: <==closure== 79565 (pos)
                    (Pa_msg_p5)

                    ; #15098: <==negation-removal== 66092 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #19299: <==negation-removal== 42393 (pos)
                    (not (Bc_not_msg_p5))

                    ; #26845: <==negation-removal== 47000 (pos)
                    (not (Pc_not_msg_p5))

                    ; #30209: <==negation-removal== 30642 (pos)
                    (not (Bb_not_msg_p5))

                    ; #33270: <==negation-removal== 73357 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #35041: <==negation-removal== 79565 (pos)
                    (not (Pa_not_msg_p5))

                    ; #36994: <==negation-removal== 38932 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #37059: <==negation-removal== 72958 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #47724: <==negation-removal== 29986 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #49906: <==negation-removal== 23675 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #63759: <==negation-removal== 92002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #65226: <==negation-removal== 56208 (pos)
                    (not (Pb_not_msg_p5))

                    ; #72015: <==negation-removal== 56809 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #73669: <==negation-removal== 42885 (pos)
                    (not (Bd_not_msg_p5))

                    ; #78392: <==negation-removal== 68825 (pos)
                    (not (not_msg_p5))

                    ; #84957: <==negation-removal== 73788 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #88062: <==negation-removal== 76661 (pos)
                    (not (Pd_not_msg_p5))))

    (:action commsurvivor_p5_b_s
        :precondition (and (Pb_survivorat_s_p5)
                           (Bb_survivorat_s_p5)
                           (at_b_p5))
        :effect (and
                    ; #23675: <==closure== 29986 (pos)
                    (Pb_survivorat_s_p5)

                    ; #29986: origin
                    (Bb_survivorat_s_p5)

                    ; #30642: <==closure== 56208 (pos)
                    (Pb_msg_p5)

                    ; #38932: <==closure== 66092 (pos)
                    (Pd_survivorat_s_p5)

                    ; #42393: <==closure== 47000 (pos)
                    (Pc_msg_p5)

                    ; #42885: <==closure== 76661 (pos)
                    (Pd_msg_p5)

                    ; #47000: <==commonly_known== 68825 (pos)
                    (Bc_msg_p5)

                    ; #56208: <==commonly_known== 68825 (pos)
                    (Bb_msg_p5)

                    ; #56809: <==closure== 73357 (pos)
                    (Pa_survivorat_s_p5)

                    ; #66092: origin
                    (Bd_survivorat_s_p5)

                    ; #68825: origin
                    (msg_p5)

                    ; #72958: origin
                    (Bc_survivorat_s_p5)

                    ; #73357: origin
                    (Ba_survivorat_s_p5)

                    ; #73788: <==closure== 72958 (pos)
                    (Pc_survivorat_s_p5)

                    ; #76661: <==commonly_known== 68825 (pos)
                    (Bd_msg_p5)

                    ; #79565: <==commonly_known== 68825 (pos)
                    (Ba_msg_p5)

                    ; #92002: <==closure== 79565 (pos)
                    (Pa_msg_p5)

                    ; #15098: <==negation-removal== 66092 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #19299: <==negation-removal== 42393 (pos)
                    (not (Bc_not_msg_p5))

                    ; #26845: <==negation-removal== 47000 (pos)
                    (not (Pc_not_msg_p5))

                    ; #30209: <==negation-removal== 30642 (pos)
                    (not (Bb_not_msg_p5))

                    ; #33270: <==negation-removal== 73357 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #35041: <==negation-removal== 79565 (pos)
                    (not (Pa_not_msg_p5))

                    ; #36994: <==negation-removal== 38932 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #37059: <==negation-removal== 72958 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #47724: <==negation-removal== 29986 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #49906: <==negation-removal== 23675 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #63759: <==negation-removal== 92002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #65226: <==negation-removal== 56208 (pos)
                    (not (Pb_not_msg_p5))

                    ; #72015: <==negation-removal== 56809 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #73669: <==negation-removal== 42885 (pos)
                    (not (Bd_not_msg_p5))

                    ; #78392: <==negation-removal== 68825 (pos)
                    (not (not_msg_p5))

                    ; #84957: <==negation-removal== 73788 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #88062: <==negation-removal== 76661 (pos)
                    (not (Pd_not_msg_p5))))

    (:action commsurvivor_p5_c_s
        :precondition (and (at_c_p5)
                           (Bc_survivorat_s_p5)
                           (Pc_survivorat_s_p5))
        :effect (and
                    ; #23675: <==closure== 29986 (pos)
                    (Pb_survivorat_s_p5)

                    ; #29986: origin
                    (Bb_survivorat_s_p5)

                    ; #30642: <==closure== 56208 (pos)
                    (Pb_msg_p5)

                    ; #38932: <==closure== 66092 (pos)
                    (Pd_survivorat_s_p5)

                    ; #42393: <==closure== 47000 (pos)
                    (Pc_msg_p5)

                    ; #42885: <==closure== 76661 (pos)
                    (Pd_msg_p5)

                    ; #47000: <==commonly_known== 68825 (pos)
                    (Bc_msg_p5)

                    ; #56208: <==commonly_known== 68825 (pos)
                    (Bb_msg_p5)

                    ; #56809: <==closure== 73357 (pos)
                    (Pa_survivorat_s_p5)

                    ; #66092: origin
                    (Bd_survivorat_s_p5)

                    ; #68825: origin
                    (msg_p5)

                    ; #72958: origin
                    (Bc_survivorat_s_p5)

                    ; #73357: origin
                    (Ba_survivorat_s_p5)

                    ; #73788: <==closure== 72958 (pos)
                    (Pc_survivorat_s_p5)

                    ; #76661: <==commonly_known== 68825 (pos)
                    (Bd_msg_p5)

                    ; #79565: <==commonly_known== 68825 (pos)
                    (Ba_msg_p5)

                    ; #92002: <==closure== 79565 (pos)
                    (Pa_msg_p5)

                    ; #15098: <==negation-removal== 66092 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #19299: <==negation-removal== 42393 (pos)
                    (not (Bc_not_msg_p5))

                    ; #26845: <==negation-removal== 47000 (pos)
                    (not (Pc_not_msg_p5))

                    ; #30209: <==negation-removal== 30642 (pos)
                    (not (Bb_not_msg_p5))

                    ; #33270: <==negation-removal== 73357 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #35041: <==negation-removal== 79565 (pos)
                    (not (Pa_not_msg_p5))

                    ; #36994: <==negation-removal== 38932 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #37059: <==negation-removal== 72958 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #47724: <==negation-removal== 29986 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #49906: <==negation-removal== 23675 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #63759: <==negation-removal== 92002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #65226: <==negation-removal== 56208 (pos)
                    (not (Pb_not_msg_p5))

                    ; #72015: <==negation-removal== 56809 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #73669: <==negation-removal== 42885 (pos)
                    (not (Bd_not_msg_p5))

                    ; #78392: <==negation-removal== 68825 (pos)
                    (not (not_msg_p5))

                    ; #84957: <==negation-removal== 73788 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #88062: <==negation-removal== 76661 (pos)
                    (not (Pd_not_msg_p5))))

    (:action commsurvivor_p5_d_s
        :precondition (and (at_d_p5)
                           (Bd_survivorat_s_p5)
                           (Pd_survivorat_s_p5))
        :effect (and
                    ; #23675: <==closure== 29986 (pos)
                    (Pb_survivorat_s_p5)

                    ; #29986: origin
                    (Bb_survivorat_s_p5)

                    ; #30642: <==closure== 56208 (pos)
                    (Pb_msg_p5)

                    ; #38932: <==closure== 66092 (pos)
                    (Pd_survivorat_s_p5)

                    ; #42393: <==closure== 47000 (pos)
                    (Pc_msg_p5)

                    ; #42885: <==closure== 76661 (pos)
                    (Pd_msg_p5)

                    ; #47000: <==commonly_known== 68825 (pos)
                    (Bc_msg_p5)

                    ; #56208: <==commonly_known== 68825 (pos)
                    (Bb_msg_p5)

                    ; #56809: <==closure== 73357 (pos)
                    (Pa_survivorat_s_p5)

                    ; #66092: origin
                    (Bd_survivorat_s_p5)

                    ; #68825: origin
                    (msg_p5)

                    ; #72958: origin
                    (Bc_survivorat_s_p5)

                    ; #73357: origin
                    (Ba_survivorat_s_p5)

                    ; #73788: <==closure== 72958 (pos)
                    (Pc_survivorat_s_p5)

                    ; #76661: <==commonly_known== 68825 (pos)
                    (Bd_msg_p5)

                    ; #79565: <==commonly_known== 68825 (pos)
                    (Ba_msg_p5)

                    ; #92002: <==closure== 79565 (pos)
                    (Pa_msg_p5)

                    ; #15098: <==negation-removal== 66092 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #19299: <==negation-removal== 42393 (pos)
                    (not (Bc_not_msg_p5))

                    ; #26845: <==negation-removal== 47000 (pos)
                    (not (Pc_not_msg_p5))

                    ; #30209: <==negation-removal== 30642 (pos)
                    (not (Bb_not_msg_p5))

                    ; #33270: <==negation-removal== 73357 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #35041: <==negation-removal== 79565 (pos)
                    (not (Pa_not_msg_p5))

                    ; #36994: <==negation-removal== 38932 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #37059: <==negation-removal== 72958 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #47724: <==negation-removal== 29986 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #49906: <==negation-removal== 23675 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #63759: <==negation-removal== 92002 (pos)
                    (not (Ba_not_msg_p5))

                    ; #65226: <==negation-removal== 56208 (pos)
                    (not (Pb_not_msg_p5))

                    ; #72015: <==negation-removal== 56809 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #73669: <==negation-removal== 42885 (pos)
                    (not (Bd_not_msg_p5))

                    ; #78392: <==negation-removal== 68825 (pos)
                    (not (not_msg_p5))

                    ; #84957: <==negation-removal== 73788 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #88062: <==negation-removal== 76661 (pos)
                    (not (Pd_not_msg_p5))))

    (:action commsurvivor_p6_a_s
        :precondition (and (at_a_p6)
                           (Ba_survivorat_s_p6)
                           (Pa_survivorat_s_p6))
        :effect (and
                    ; #10039: origin
                    (Bc_survivorat_s_p6)

                    ; #10697: <==closure== 11142 (pos)
                    (Pa_survivorat_s_p6)

                    ; #11142: origin
                    (Ba_survivorat_s_p6)

                    ; #16010: <==closure== 29908 (pos)
                    (Pc_msg_p6)

                    ; #16559: <==closure== 83206 (pos)
                    (Pb_msg_p6)

                    ; #22234: <==commonly_known== 66248 (pos)
                    (Bd_msg_p6)

                    ; #29908: <==commonly_known== 66248 (pos)
                    (Bc_msg_p6)

                    ; #41028: <==closure== 10039 (pos)
                    (Pc_survivorat_s_p6)

                    ; #41261: <==closure== 97051 (pos)
                    (Pa_msg_p6)

                    ; #43556: <==closure== 22234 (pos)
                    (Pd_msg_p6)

                    ; #66248: origin
                    (msg_p6)

                    ; #72422: origin
                    (Bb_survivorat_s_p6)

                    ; #77644: <==closure== 89187 (pos)
                    (Pd_survivorat_s_p6)

                    ; #83206: <==commonly_known== 66248 (pos)
                    (Bb_msg_p6)

                    ; #83478: <==closure== 72422 (pos)
                    (Pb_survivorat_s_p6)

                    ; #89187: origin
                    (Bd_survivorat_s_p6)

                    ; #97051: <==commonly_known== 66248 (pos)
                    (Ba_msg_p6)

                    ; #10409: <==negation-removal== 83478 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #10843: <==negation-removal== 43556 (pos)
                    (not (Bd_not_msg_p6))

                    ; #11930: <==negation-removal== 89187 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #17477: <==negation-removal== 83206 (pos)
                    (not (Pb_not_msg_p6))

                    ; #20469: <==negation-removal== 11142 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #23427: <==negation-removal== 41261 (pos)
                    (not (Ba_not_msg_p6))

                    ; #24913: <==negation-removal== 97051 (pos)
                    (not (Pa_not_msg_p6))

                    ; #27629: <==negation-removal== 72422 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #44011: <==negation-removal== 10697 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #44662: <==negation-removal== 10039 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #57156: <==negation-removal== 66248 (pos)
                    (not (not_msg_p6))

                    ; #60660: <==negation-removal== 29908 (pos)
                    (not (Pc_not_msg_p6))

                    ; #64229: <==negation-removal== 16559 (pos)
                    (not (Bb_not_msg_p6))

                    ; #70252: <==negation-removal== 41028 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #76166: <==negation-removal== 16010 (pos)
                    (not (Bc_not_msg_p6))

                    ; #87124: <==negation-removal== 22234 (pos)
                    (not (Pd_not_msg_p6))

                    ; #91928: <==negation-removal== 77644 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p6_b_s
        :precondition (and (Bb_survivorat_s_p6)
                           (at_b_p6)
                           (Pb_survivorat_s_p6))
        :effect (and
                    ; #10039: origin
                    (Bc_survivorat_s_p6)

                    ; #10697: <==closure== 11142 (pos)
                    (Pa_survivorat_s_p6)

                    ; #11142: origin
                    (Ba_survivorat_s_p6)

                    ; #16010: <==closure== 29908 (pos)
                    (Pc_msg_p6)

                    ; #16559: <==closure== 83206 (pos)
                    (Pb_msg_p6)

                    ; #22234: <==commonly_known== 66248 (pos)
                    (Bd_msg_p6)

                    ; #29908: <==commonly_known== 66248 (pos)
                    (Bc_msg_p6)

                    ; #41028: <==closure== 10039 (pos)
                    (Pc_survivorat_s_p6)

                    ; #41261: <==closure== 97051 (pos)
                    (Pa_msg_p6)

                    ; #43556: <==closure== 22234 (pos)
                    (Pd_msg_p6)

                    ; #66248: origin
                    (msg_p6)

                    ; #72422: origin
                    (Bb_survivorat_s_p6)

                    ; #77644: <==closure== 89187 (pos)
                    (Pd_survivorat_s_p6)

                    ; #83206: <==commonly_known== 66248 (pos)
                    (Bb_msg_p6)

                    ; #83478: <==closure== 72422 (pos)
                    (Pb_survivorat_s_p6)

                    ; #89187: origin
                    (Bd_survivorat_s_p6)

                    ; #97051: <==commonly_known== 66248 (pos)
                    (Ba_msg_p6)

                    ; #10409: <==negation-removal== 83478 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #10843: <==negation-removal== 43556 (pos)
                    (not (Bd_not_msg_p6))

                    ; #11930: <==negation-removal== 89187 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #17477: <==negation-removal== 83206 (pos)
                    (not (Pb_not_msg_p6))

                    ; #20469: <==negation-removal== 11142 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #23427: <==negation-removal== 41261 (pos)
                    (not (Ba_not_msg_p6))

                    ; #24913: <==negation-removal== 97051 (pos)
                    (not (Pa_not_msg_p6))

                    ; #27629: <==negation-removal== 72422 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #44011: <==negation-removal== 10697 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #44662: <==negation-removal== 10039 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #57156: <==negation-removal== 66248 (pos)
                    (not (not_msg_p6))

                    ; #60660: <==negation-removal== 29908 (pos)
                    (not (Pc_not_msg_p6))

                    ; #64229: <==negation-removal== 16559 (pos)
                    (not (Bb_not_msg_p6))

                    ; #70252: <==negation-removal== 41028 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #76166: <==negation-removal== 16010 (pos)
                    (not (Bc_not_msg_p6))

                    ; #87124: <==negation-removal== 22234 (pos)
                    (not (Pd_not_msg_p6))

                    ; #91928: <==negation-removal== 77644 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p6_c_s
        :precondition (and (Bc_survivorat_s_p6)
                           (at_c_p6)
                           (Pc_survivorat_s_p6))
        :effect (and
                    ; #10039: origin
                    (Bc_survivorat_s_p6)

                    ; #10697: <==closure== 11142 (pos)
                    (Pa_survivorat_s_p6)

                    ; #11142: origin
                    (Ba_survivorat_s_p6)

                    ; #16010: <==closure== 29908 (pos)
                    (Pc_msg_p6)

                    ; #16559: <==closure== 83206 (pos)
                    (Pb_msg_p6)

                    ; #22234: <==commonly_known== 66248 (pos)
                    (Bd_msg_p6)

                    ; #29908: <==commonly_known== 66248 (pos)
                    (Bc_msg_p6)

                    ; #41028: <==closure== 10039 (pos)
                    (Pc_survivorat_s_p6)

                    ; #41261: <==closure== 97051 (pos)
                    (Pa_msg_p6)

                    ; #43556: <==closure== 22234 (pos)
                    (Pd_msg_p6)

                    ; #66248: origin
                    (msg_p6)

                    ; #72422: origin
                    (Bb_survivorat_s_p6)

                    ; #77644: <==closure== 89187 (pos)
                    (Pd_survivorat_s_p6)

                    ; #83206: <==commonly_known== 66248 (pos)
                    (Bb_msg_p6)

                    ; #83478: <==closure== 72422 (pos)
                    (Pb_survivorat_s_p6)

                    ; #89187: origin
                    (Bd_survivorat_s_p6)

                    ; #97051: <==commonly_known== 66248 (pos)
                    (Ba_msg_p6)

                    ; #10409: <==negation-removal== 83478 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #10843: <==negation-removal== 43556 (pos)
                    (not (Bd_not_msg_p6))

                    ; #11930: <==negation-removal== 89187 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #17477: <==negation-removal== 83206 (pos)
                    (not (Pb_not_msg_p6))

                    ; #20469: <==negation-removal== 11142 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #23427: <==negation-removal== 41261 (pos)
                    (not (Ba_not_msg_p6))

                    ; #24913: <==negation-removal== 97051 (pos)
                    (not (Pa_not_msg_p6))

                    ; #27629: <==negation-removal== 72422 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #44011: <==negation-removal== 10697 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #44662: <==negation-removal== 10039 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #57156: <==negation-removal== 66248 (pos)
                    (not (not_msg_p6))

                    ; #60660: <==negation-removal== 29908 (pos)
                    (not (Pc_not_msg_p6))

                    ; #64229: <==negation-removal== 16559 (pos)
                    (not (Bb_not_msg_p6))

                    ; #70252: <==negation-removal== 41028 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #76166: <==negation-removal== 16010 (pos)
                    (not (Bc_not_msg_p6))

                    ; #87124: <==negation-removal== 22234 (pos)
                    (not (Pd_not_msg_p6))

                    ; #91928: <==negation-removal== 77644 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p6_d_s
        :precondition (and (Pd_survivorat_s_p6)
                           (Bd_survivorat_s_p6)
                           (at_d_p6))
        :effect (and
                    ; #10039: origin
                    (Bc_survivorat_s_p6)

                    ; #10697: <==closure== 11142 (pos)
                    (Pa_survivorat_s_p6)

                    ; #11142: origin
                    (Ba_survivorat_s_p6)

                    ; #16010: <==closure== 29908 (pos)
                    (Pc_msg_p6)

                    ; #16559: <==closure== 83206 (pos)
                    (Pb_msg_p6)

                    ; #22234: <==commonly_known== 66248 (pos)
                    (Bd_msg_p6)

                    ; #29908: <==commonly_known== 66248 (pos)
                    (Bc_msg_p6)

                    ; #41028: <==closure== 10039 (pos)
                    (Pc_survivorat_s_p6)

                    ; #41261: <==closure== 97051 (pos)
                    (Pa_msg_p6)

                    ; #43556: <==closure== 22234 (pos)
                    (Pd_msg_p6)

                    ; #66248: origin
                    (msg_p6)

                    ; #72422: origin
                    (Bb_survivorat_s_p6)

                    ; #77644: <==closure== 89187 (pos)
                    (Pd_survivorat_s_p6)

                    ; #83206: <==commonly_known== 66248 (pos)
                    (Bb_msg_p6)

                    ; #83478: <==closure== 72422 (pos)
                    (Pb_survivorat_s_p6)

                    ; #89187: origin
                    (Bd_survivorat_s_p6)

                    ; #97051: <==commonly_known== 66248 (pos)
                    (Ba_msg_p6)

                    ; #10409: <==negation-removal== 83478 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #10843: <==negation-removal== 43556 (pos)
                    (not (Bd_not_msg_p6))

                    ; #11930: <==negation-removal== 89187 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #17477: <==negation-removal== 83206 (pos)
                    (not (Pb_not_msg_p6))

                    ; #20469: <==negation-removal== 11142 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #23427: <==negation-removal== 41261 (pos)
                    (not (Ba_not_msg_p6))

                    ; #24913: <==negation-removal== 97051 (pos)
                    (not (Pa_not_msg_p6))

                    ; #27629: <==negation-removal== 72422 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #44011: <==negation-removal== 10697 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #44662: <==negation-removal== 10039 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #57156: <==negation-removal== 66248 (pos)
                    (not (not_msg_p6))

                    ; #60660: <==negation-removal== 29908 (pos)
                    (not (Pc_not_msg_p6))

                    ; #64229: <==negation-removal== 16559 (pos)
                    (not (Bb_not_msg_p6))

                    ; #70252: <==negation-removal== 41028 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #76166: <==negation-removal== 16010 (pos)
                    (not (Bc_not_msg_p6))

                    ; #87124: <==negation-removal== 22234 (pos)
                    (not (Pd_not_msg_p6))

                    ; #91928: <==negation-removal== 77644 (pos)
                    (not (Bd_not_survivorat_s_p6))))

    (:action commsurvivor_p7_a_s
        :precondition (and (Pa_survivorat_s_p7)
                           (Ba_survivorat_s_p7)
                           (at_a_p7))
        :effect (and
                    ; #18999: <==commonly_known== 58371 (pos)
                    (Bc_msg_p7)

                    ; #27779: <==closure== 40185 (pos)
                    (Pd_survivorat_s_p7)

                    ; #28221: origin
                    (Bb_survivorat_s_p7)

                    ; #30222: <==closure== 31370 (pos)
                    (Pd_msg_p7)

                    ; #31370: <==commonly_known== 58371 (pos)
                    (Bd_msg_p7)

                    ; #35492: <==closure== 74159 (pos)
                    (Pc_survivorat_s_p7)

                    ; #38439: <==commonly_known== 58371 (pos)
                    (Bb_msg_p7)

                    ; #40185: origin
                    (Bd_survivorat_s_p7)

                    ; #40209: <==closure== 38439 (pos)
                    (Pb_msg_p7)

                    ; #40842: <==closure== 28221 (pos)
                    (Pb_survivorat_s_p7)

                    ; #41082: <==closure== 47880 (pos)
                    (Pa_survivorat_s_p7)

                    ; #42516: <==closure== 18999 (pos)
                    (Pc_msg_p7)

                    ; #47880: origin
                    (Ba_survivorat_s_p7)

                    ; #58371: origin
                    (msg_p7)

                    ; #61230: <==closure== 91174 (pos)
                    (Pa_msg_p7)

                    ; #74159: origin
                    (Bc_survivorat_s_p7)

                    ; #91174: <==commonly_known== 58371 (pos)
                    (Ba_msg_p7)

                    ; #11120: <==negation-removal== 40209 (pos)
                    (not (Bb_not_msg_p7))

                    ; #14796: <==negation-removal== 40842 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #15578: <==negation-removal== 47880 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #23393: <==negation-removal== 91174 (pos)
                    (not (Pa_not_msg_p7))

                    ; #25747: <==negation-removal== 28221 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #30418: <==negation-removal== 30222 (pos)
                    (not (Bd_not_msg_p7))

                    ; #30501: <==negation-removal== 40185 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36520: <==negation-removal== 58371 (pos)
                    (not (not_msg_p7))

                    ; #45191: <==negation-removal== 42516 (pos)
                    (not (Bc_not_msg_p7))

                    ; #45951: <==negation-removal== 31370 (pos)
                    (not (Pd_not_msg_p7))

                    ; #59153: <==negation-removal== 35492 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #60749: <==negation-removal== 61230 (pos)
                    (not (Ba_not_msg_p7))

                    ; #63475: <==negation-removal== 41082 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #76031: <==negation-removal== 74159 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #78608: <==negation-removal== 27779 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #82127: <==negation-removal== 38439 (pos)
                    (not (Pb_not_msg_p7))

                    ; #87008: <==negation-removal== 18999 (pos)
                    (not (Pc_not_msg_p7))))

    (:action commsurvivor_p7_b_s
        :precondition (and (Pb_survivorat_s_p7)
                           (Bb_survivorat_s_p7)
                           (at_b_p7))
        :effect (and
                    ; #18999: <==commonly_known== 58371 (pos)
                    (Bc_msg_p7)

                    ; #27779: <==closure== 40185 (pos)
                    (Pd_survivorat_s_p7)

                    ; #28221: origin
                    (Bb_survivorat_s_p7)

                    ; #30222: <==closure== 31370 (pos)
                    (Pd_msg_p7)

                    ; #31370: <==commonly_known== 58371 (pos)
                    (Bd_msg_p7)

                    ; #35492: <==closure== 74159 (pos)
                    (Pc_survivorat_s_p7)

                    ; #38439: <==commonly_known== 58371 (pos)
                    (Bb_msg_p7)

                    ; #40185: origin
                    (Bd_survivorat_s_p7)

                    ; #40209: <==closure== 38439 (pos)
                    (Pb_msg_p7)

                    ; #40842: <==closure== 28221 (pos)
                    (Pb_survivorat_s_p7)

                    ; #41082: <==closure== 47880 (pos)
                    (Pa_survivorat_s_p7)

                    ; #42516: <==closure== 18999 (pos)
                    (Pc_msg_p7)

                    ; #47880: origin
                    (Ba_survivorat_s_p7)

                    ; #58371: origin
                    (msg_p7)

                    ; #61230: <==closure== 91174 (pos)
                    (Pa_msg_p7)

                    ; #74159: origin
                    (Bc_survivorat_s_p7)

                    ; #91174: <==commonly_known== 58371 (pos)
                    (Ba_msg_p7)

                    ; #11120: <==negation-removal== 40209 (pos)
                    (not (Bb_not_msg_p7))

                    ; #14796: <==negation-removal== 40842 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #15578: <==negation-removal== 47880 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #23393: <==negation-removal== 91174 (pos)
                    (not (Pa_not_msg_p7))

                    ; #25747: <==negation-removal== 28221 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #30418: <==negation-removal== 30222 (pos)
                    (not (Bd_not_msg_p7))

                    ; #30501: <==negation-removal== 40185 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36520: <==negation-removal== 58371 (pos)
                    (not (not_msg_p7))

                    ; #45191: <==negation-removal== 42516 (pos)
                    (not (Bc_not_msg_p7))

                    ; #45951: <==negation-removal== 31370 (pos)
                    (not (Pd_not_msg_p7))

                    ; #59153: <==negation-removal== 35492 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #60749: <==negation-removal== 61230 (pos)
                    (not (Ba_not_msg_p7))

                    ; #63475: <==negation-removal== 41082 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #76031: <==negation-removal== 74159 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #78608: <==negation-removal== 27779 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #82127: <==negation-removal== 38439 (pos)
                    (not (Pb_not_msg_p7))

                    ; #87008: <==negation-removal== 18999 (pos)
                    (not (Pc_not_msg_p7))))

    (:action commsurvivor_p7_c_s
        :precondition (and (at_c_p7)
                           (Pc_survivorat_s_p7)
                           (Bc_survivorat_s_p7))
        :effect (and
                    ; #18999: <==commonly_known== 58371 (pos)
                    (Bc_msg_p7)

                    ; #27779: <==closure== 40185 (pos)
                    (Pd_survivorat_s_p7)

                    ; #28221: origin
                    (Bb_survivorat_s_p7)

                    ; #30222: <==closure== 31370 (pos)
                    (Pd_msg_p7)

                    ; #31370: <==commonly_known== 58371 (pos)
                    (Bd_msg_p7)

                    ; #35492: <==closure== 74159 (pos)
                    (Pc_survivorat_s_p7)

                    ; #38439: <==commonly_known== 58371 (pos)
                    (Bb_msg_p7)

                    ; #40185: origin
                    (Bd_survivorat_s_p7)

                    ; #40209: <==closure== 38439 (pos)
                    (Pb_msg_p7)

                    ; #40842: <==closure== 28221 (pos)
                    (Pb_survivorat_s_p7)

                    ; #41082: <==closure== 47880 (pos)
                    (Pa_survivorat_s_p7)

                    ; #42516: <==closure== 18999 (pos)
                    (Pc_msg_p7)

                    ; #47880: origin
                    (Ba_survivorat_s_p7)

                    ; #58371: origin
                    (msg_p7)

                    ; #61230: <==closure== 91174 (pos)
                    (Pa_msg_p7)

                    ; #74159: origin
                    (Bc_survivorat_s_p7)

                    ; #91174: <==commonly_known== 58371 (pos)
                    (Ba_msg_p7)

                    ; #11120: <==negation-removal== 40209 (pos)
                    (not (Bb_not_msg_p7))

                    ; #14796: <==negation-removal== 40842 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #15578: <==negation-removal== 47880 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #23393: <==negation-removal== 91174 (pos)
                    (not (Pa_not_msg_p7))

                    ; #25747: <==negation-removal== 28221 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #30418: <==negation-removal== 30222 (pos)
                    (not (Bd_not_msg_p7))

                    ; #30501: <==negation-removal== 40185 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36520: <==negation-removal== 58371 (pos)
                    (not (not_msg_p7))

                    ; #45191: <==negation-removal== 42516 (pos)
                    (not (Bc_not_msg_p7))

                    ; #45951: <==negation-removal== 31370 (pos)
                    (not (Pd_not_msg_p7))

                    ; #59153: <==negation-removal== 35492 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #60749: <==negation-removal== 61230 (pos)
                    (not (Ba_not_msg_p7))

                    ; #63475: <==negation-removal== 41082 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #76031: <==negation-removal== 74159 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #78608: <==negation-removal== 27779 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #82127: <==negation-removal== 38439 (pos)
                    (not (Pb_not_msg_p7))

                    ; #87008: <==negation-removal== 18999 (pos)
                    (not (Pc_not_msg_p7))))

    (:action commsurvivor_p7_d_s
        :precondition (and (Pd_survivorat_s_p7)
                           (Bd_survivorat_s_p7)
                           (at_d_p7))
        :effect (and
                    ; #18999: <==commonly_known== 58371 (pos)
                    (Bc_msg_p7)

                    ; #27779: <==closure== 40185 (pos)
                    (Pd_survivorat_s_p7)

                    ; #28221: origin
                    (Bb_survivorat_s_p7)

                    ; #30222: <==closure== 31370 (pos)
                    (Pd_msg_p7)

                    ; #31370: <==commonly_known== 58371 (pos)
                    (Bd_msg_p7)

                    ; #35492: <==closure== 74159 (pos)
                    (Pc_survivorat_s_p7)

                    ; #38439: <==commonly_known== 58371 (pos)
                    (Bb_msg_p7)

                    ; #40185: origin
                    (Bd_survivorat_s_p7)

                    ; #40209: <==closure== 38439 (pos)
                    (Pb_msg_p7)

                    ; #40842: <==closure== 28221 (pos)
                    (Pb_survivorat_s_p7)

                    ; #41082: <==closure== 47880 (pos)
                    (Pa_survivorat_s_p7)

                    ; #42516: <==closure== 18999 (pos)
                    (Pc_msg_p7)

                    ; #47880: origin
                    (Ba_survivorat_s_p7)

                    ; #58371: origin
                    (msg_p7)

                    ; #61230: <==closure== 91174 (pos)
                    (Pa_msg_p7)

                    ; #74159: origin
                    (Bc_survivorat_s_p7)

                    ; #91174: <==commonly_known== 58371 (pos)
                    (Ba_msg_p7)

                    ; #11120: <==negation-removal== 40209 (pos)
                    (not (Bb_not_msg_p7))

                    ; #14796: <==negation-removal== 40842 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #15578: <==negation-removal== 47880 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #23393: <==negation-removal== 91174 (pos)
                    (not (Pa_not_msg_p7))

                    ; #25747: <==negation-removal== 28221 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #30418: <==negation-removal== 30222 (pos)
                    (not (Bd_not_msg_p7))

                    ; #30501: <==negation-removal== 40185 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #36520: <==negation-removal== 58371 (pos)
                    (not (not_msg_p7))

                    ; #45191: <==negation-removal== 42516 (pos)
                    (not (Bc_not_msg_p7))

                    ; #45951: <==negation-removal== 31370 (pos)
                    (not (Pd_not_msg_p7))

                    ; #59153: <==negation-removal== 35492 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #60749: <==negation-removal== 61230 (pos)
                    (not (Ba_not_msg_p7))

                    ; #63475: <==negation-removal== 41082 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #76031: <==negation-removal== 74159 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #78608: <==negation-removal== 27779 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #82127: <==negation-removal== 38439 (pos)
                    (not (Pb_not_msg_p7))

                    ; #87008: <==negation-removal== 18999 (pos)
                    (not (Pc_not_msg_p7))))

    (:action commsurvivor_p8_a_s
        :precondition (and (Pa_survivorat_s_p8)
                           (at_a_p8)
                           (Ba_survivorat_s_p8))
        :effect (and
                    ; #12422: <==closure== 90265 (pos)
                    (Pb_survivorat_s_p8)

                    ; #13669: <==closure== 55235 (pos)
                    (Pd_survivorat_s_p8)

                    ; #14675: <==commonly_known== 92202 (pos)
                    (Bb_msg_p8)

                    ; #19214: origin
                    (Bc_survivorat_s_p8)

                    ; #36044: <==closure== 14675 (pos)
                    (Pb_msg_p8)

                    ; #44331: <==closure== 19214 (pos)
                    (Pc_survivorat_s_p8)

                    ; #45147: <==commonly_known== 92202 (pos)
                    (Bd_msg_p8)

                    ; #51174: <==commonly_known== 92202 (pos)
                    (Ba_msg_p8)

                    ; #51191: <==closure== 66867 (pos)
                    (Pa_survivorat_s_p8)

                    ; #55235: origin
                    (Bd_survivorat_s_p8)

                    ; #56857: <==closure== 77991 (pos)
                    (Pc_msg_p8)

                    ; #66867: origin
                    (Ba_survivorat_s_p8)

                    ; #73970: <==closure== 51174 (pos)
                    (Pa_msg_p8)

                    ; #77991: <==commonly_known== 92202 (pos)
                    (Bc_msg_p8)

                    ; #83693: <==closure== 45147 (pos)
                    (Pd_msg_p8)

                    ; #90265: origin
                    (Bb_survivorat_s_p8)

                    ; #92202: origin
                    (msg_p8)

                    ; #10117: <==negation-removal== 12422 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #10578: <==negation-removal== 55235 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #27483: <==negation-removal== 44331 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #27666: <==negation-removal== 51191 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #48277: <==negation-removal== 90265 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54561: <==negation-removal== 73970 (pos)
                    (not (Ba_not_msg_p8))

                    ; #55693: <==negation-removal== 66867 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #60973: <==negation-removal== 14675 (pos)
                    (not (Pb_not_msg_p8))

                    ; #63551: <==negation-removal== 45147 (pos)
                    (not (Pd_not_msg_p8))

                    ; #63595: <==negation-removal== 56857 (pos)
                    (not (Bc_not_msg_p8))

                    ; #63905: <==negation-removal== 83693 (pos)
                    (not (Bd_not_msg_p8))

                    ; #66716: <==negation-removal== 13669 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #68664: <==negation-removal== 92202 (pos)
                    (not (not_msg_p8))

                    ; #70499: <==negation-removal== 77991 (pos)
                    (not (Pc_not_msg_p8))

                    ; #75305: <==negation-removal== 36044 (pos)
                    (not (Bb_not_msg_p8))

                    ; #86204: <==negation-removal== 19214 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #86257: <==negation-removal== 51174 (pos)
                    (not (Pa_not_msg_p8))))

    (:action commsurvivor_p8_b_s
        :precondition (and (at_b_p8)
                           (Pb_survivorat_s_p8)
                           (Bb_survivorat_s_p8))
        :effect (and
                    ; #12422: <==closure== 90265 (pos)
                    (Pb_survivorat_s_p8)

                    ; #13669: <==closure== 55235 (pos)
                    (Pd_survivorat_s_p8)

                    ; #14675: <==commonly_known== 92202 (pos)
                    (Bb_msg_p8)

                    ; #19214: origin
                    (Bc_survivorat_s_p8)

                    ; #36044: <==closure== 14675 (pos)
                    (Pb_msg_p8)

                    ; #44331: <==closure== 19214 (pos)
                    (Pc_survivorat_s_p8)

                    ; #45147: <==commonly_known== 92202 (pos)
                    (Bd_msg_p8)

                    ; #51174: <==commonly_known== 92202 (pos)
                    (Ba_msg_p8)

                    ; #51191: <==closure== 66867 (pos)
                    (Pa_survivorat_s_p8)

                    ; #55235: origin
                    (Bd_survivorat_s_p8)

                    ; #56857: <==closure== 77991 (pos)
                    (Pc_msg_p8)

                    ; #66867: origin
                    (Ba_survivorat_s_p8)

                    ; #73970: <==closure== 51174 (pos)
                    (Pa_msg_p8)

                    ; #77991: <==commonly_known== 92202 (pos)
                    (Bc_msg_p8)

                    ; #83693: <==closure== 45147 (pos)
                    (Pd_msg_p8)

                    ; #90265: origin
                    (Bb_survivorat_s_p8)

                    ; #92202: origin
                    (msg_p8)

                    ; #10117: <==negation-removal== 12422 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #10578: <==negation-removal== 55235 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #27483: <==negation-removal== 44331 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #27666: <==negation-removal== 51191 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #48277: <==negation-removal== 90265 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54561: <==negation-removal== 73970 (pos)
                    (not (Ba_not_msg_p8))

                    ; #55693: <==negation-removal== 66867 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #60973: <==negation-removal== 14675 (pos)
                    (not (Pb_not_msg_p8))

                    ; #63551: <==negation-removal== 45147 (pos)
                    (not (Pd_not_msg_p8))

                    ; #63595: <==negation-removal== 56857 (pos)
                    (not (Bc_not_msg_p8))

                    ; #63905: <==negation-removal== 83693 (pos)
                    (not (Bd_not_msg_p8))

                    ; #66716: <==negation-removal== 13669 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #68664: <==negation-removal== 92202 (pos)
                    (not (not_msg_p8))

                    ; #70499: <==negation-removal== 77991 (pos)
                    (not (Pc_not_msg_p8))

                    ; #75305: <==negation-removal== 36044 (pos)
                    (not (Bb_not_msg_p8))

                    ; #86204: <==negation-removal== 19214 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #86257: <==negation-removal== 51174 (pos)
                    (not (Pa_not_msg_p8))))

    (:action commsurvivor_p8_c_s
        :precondition (and (Pc_survivorat_s_p8)
                           (Bc_survivorat_s_p8)
                           (at_c_p8))
        :effect (and
                    ; #12422: <==closure== 90265 (pos)
                    (Pb_survivorat_s_p8)

                    ; #13669: <==closure== 55235 (pos)
                    (Pd_survivorat_s_p8)

                    ; #14675: <==commonly_known== 92202 (pos)
                    (Bb_msg_p8)

                    ; #19214: origin
                    (Bc_survivorat_s_p8)

                    ; #36044: <==closure== 14675 (pos)
                    (Pb_msg_p8)

                    ; #44331: <==closure== 19214 (pos)
                    (Pc_survivorat_s_p8)

                    ; #45147: <==commonly_known== 92202 (pos)
                    (Bd_msg_p8)

                    ; #51174: <==commonly_known== 92202 (pos)
                    (Ba_msg_p8)

                    ; #51191: <==closure== 66867 (pos)
                    (Pa_survivorat_s_p8)

                    ; #55235: origin
                    (Bd_survivorat_s_p8)

                    ; #56857: <==closure== 77991 (pos)
                    (Pc_msg_p8)

                    ; #66867: origin
                    (Ba_survivorat_s_p8)

                    ; #73970: <==closure== 51174 (pos)
                    (Pa_msg_p8)

                    ; #77991: <==commonly_known== 92202 (pos)
                    (Bc_msg_p8)

                    ; #83693: <==closure== 45147 (pos)
                    (Pd_msg_p8)

                    ; #90265: origin
                    (Bb_survivorat_s_p8)

                    ; #92202: origin
                    (msg_p8)

                    ; #10117: <==negation-removal== 12422 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #10578: <==negation-removal== 55235 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #27483: <==negation-removal== 44331 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #27666: <==negation-removal== 51191 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #48277: <==negation-removal== 90265 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54561: <==negation-removal== 73970 (pos)
                    (not (Ba_not_msg_p8))

                    ; #55693: <==negation-removal== 66867 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #60973: <==negation-removal== 14675 (pos)
                    (not (Pb_not_msg_p8))

                    ; #63551: <==negation-removal== 45147 (pos)
                    (not (Pd_not_msg_p8))

                    ; #63595: <==negation-removal== 56857 (pos)
                    (not (Bc_not_msg_p8))

                    ; #63905: <==negation-removal== 83693 (pos)
                    (not (Bd_not_msg_p8))

                    ; #66716: <==negation-removal== 13669 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #68664: <==negation-removal== 92202 (pos)
                    (not (not_msg_p8))

                    ; #70499: <==negation-removal== 77991 (pos)
                    (not (Pc_not_msg_p8))

                    ; #75305: <==negation-removal== 36044 (pos)
                    (not (Bb_not_msg_p8))

                    ; #86204: <==negation-removal== 19214 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #86257: <==negation-removal== 51174 (pos)
                    (not (Pa_not_msg_p8))))

    (:action commsurvivor_p8_d_s
        :precondition (and (Bd_survivorat_s_p8)
                           (Pd_survivorat_s_p8)
                           (at_d_p8))
        :effect (and
                    ; #12422: <==closure== 90265 (pos)
                    (Pb_survivorat_s_p8)

                    ; #13669: <==closure== 55235 (pos)
                    (Pd_survivorat_s_p8)

                    ; #14675: <==commonly_known== 92202 (pos)
                    (Bb_msg_p8)

                    ; #19214: origin
                    (Bc_survivorat_s_p8)

                    ; #36044: <==closure== 14675 (pos)
                    (Pb_msg_p8)

                    ; #44331: <==closure== 19214 (pos)
                    (Pc_survivorat_s_p8)

                    ; #45147: <==commonly_known== 92202 (pos)
                    (Bd_msg_p8)

                    ; #51174: <==commonly_known== 92202 (pos)
                    (Ba_msg_p8)

                    ; #51191: <==closure== 66867 (pos)
                    (Pa_survivorat_s_p8)

                    ; #55235: origin
                    (Bd_survivorat_s_p8)

                    ; #56857: <==closure== 77991 (pos)
                    (Pc_msg_p8)

                    ; #66867: origin
                    (Ba_survivorat_s_p8)

                    ; #73970: <==closure== 51174 (pos)
                    (Pa_msg_p8)

                    ; #77991: <==commonly_known== 92202 (pos)
                    (Bc_msg_p8)

                    ; #83693: <==closure== 45147 (pos)
                    (Pd_msg_p8)

                    ; #90265: origin
                    (Bb_survivorat_s_p8)

                    ; #92202: origin
                    (msg_p8)

                    ; #10117: <==negation-removal== 12422 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #10578: <==negation-removal== 55235 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #27483: <==negation-removal== 44331 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #27666: <==negation-removal== 51191 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #48277: <==negation-removal== 90265 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #54561: <==negation-removal== 73970 (pos)
                    (not (Ba_not_msg_p8))

                    ; #55693: <==negation-removal== 66867 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #60973: <==negation-removal== 14675 (pos)
                    (not (Pb_not_msg_p8))

                    ; #63551: <==negation-removal== 45147 (pos)
                    (not (Pd_not_msg_p8))

                    ; #63595: <==negation-removal== 56857 (pos)
                    (not (Bc_not_msg_p8))

                    ; #63905: <==negation-removal== 83693 (pos)
                    (not (Bd_not_msg_p8))

                    ; #66716: <==negation-removal== 13669 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #68664: <==negation-removal== 92202 (pos)
                    (not (not_msg_p8))

                    ; #70499: <==negation-removal== 77991 (pos)
                    (not (Pc_not_msg_p8))

                    ; #75305: <==negation-removal== 36044 (pos)
                    (not (Bb_not_msg_p8))

                    ; #86204: <==negation-removal== 19214 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #86257: <==negation-removal== 51174 (pos)
                    (not (Pa_not_msg_p8))))

    (:action commsurvivor_p9_a_s
        :precondition (and (Ba_survivorat_s_p9)
                           (Pa_survivorat_s_p9)
                           (at_a_p9))
        :effect (and
                    ; #11577: <==closure== 73041 (pos)
                    (Pd_survivorat_s_p9)

                    ; #12121: <==closure== 37119 (pos)
                    (Pd_msg_p9)

                    ; #13224: <==closure== 67735 (pos)
                    (Pb_msg_p9)

                    ; #16759: <==closure== 30885 (pos)
                    (Pa_survivorat_s_p9)

                    ; #18680: origin
                    (msg_p9)

                    ; #21198: origin
                    (Bc_survivorat_s_p9)

                    ; #29273: <==closure== 65124 (pos)
                    (Pb_survivorat_s_p9)

                    ; #30885: origin
                    (Ba_survivorat_s_p9)

                    ; #37119: <==commonly_known== 18680 (pos)
                    (Bd_msg_p9)

                    ; #52908: <==commonly_known== 18680 (pos)
                    (Bc_msg_p9)

                    ; #63131: <==commonly_known== 18680 (pos)
                    (Ba_msg_p9)

                    ; #65124: origin
                    (Bb_survivorat_s_p9)

                    ; #66664: <==closure== 52908 (pos)
                    (Pc_msg_p9)

                    ; #67735: <==commonly_known== 18680 (pos)
                    (Bb_msg_p9)

                    ; #73041: origin
                    (Bd_survivorat_s_p9)

                    ; #74915: <==closure== 63131 (pos)
                    (Pa_msg_p9)

                    ; #88424: <==closure== 21198 (pos)
                    (Pc_survivorat_s_p9)

                    ; #18405: <==negation-removal== 30885 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #22016: <==negation-removal== 13224 (pos)
                    (not (Bb_not_msg_p9))

                    ; #29849: <==negation-removal== 11577 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #32689: <==negation-removal== 63131 (pos)
                    (not (Pa_not_msg_p9))

                    ; #44944: <==negation-removal== 52908 (pos)
                    (not (Pc_not_msg_p9))

                    ; #47578: <==negation-removal== 37119 (pos)
                    (not (Pd_not_msg_p9))

                    ; #49832: <==negation-removal== 12121 (pos)
                    (not (Bd_not_msg_p9))

                    ; #51907: <==negation-removal== 18680 (pos)
                    (not (not_msg_p9))

                    ; #54744: <==negation-removal== 66664 (pos)
                    (not (Bc_not_msg_p9))

                    ; #64072: <==negation-removal== 67735 (pos)
                    (not (Pb_not_msg_p9))

                    ; #64652: <==negation-removal== 65124 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #79491: <==negation-removal== 74915 (pos)
                    (not (Ba_not_msg_p9))

                    ; #81680: <==negation-removal== 21198 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #88533: <==negation-removal== 29273 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #89451: <==negation-removal== 16759 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #89699: <==negation-removal== 88424 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #91673: <==negation-removal== 73041 (pos)
                    (not (Pd_not_survivorat_s_p9))))

    (:action commsurvivor_p9_b_s
        :precondition (and (Bb_survivorat_s_p9)
                           (at_b_p9)
                           (Pb_survivorat_s_p9))
        :effect (and
                    ; #11577: <==closure== 73041 (pos)
                    (Pd_survivorat_s_p9)

                    ; #12121: <==closure== 37119 (pos)
                    (Pd_msg_p9)

                    ; #13224: <==closure== 67735 (pos)
                    (Pb_msg_p9)

                    ; #16759: <==closure== 30885 (pos)
                    (Pa_survivorat_s_p9)

                    ; #18680: origin
                    (msg_p9)

                    ; #21198: origin
                    (Bc_survivorat_s_p9)

                    ; #29273: <==closure== 65124 (pos)
                    (Pb_survivorat_s_p9)

                    ; #30885: origin
                    (Ba_survivorat_s_p9)

                    ; #37119: <==commonly_known== 18680 (pos)
                    (Bd_msg_p9)

                    ; #52908: <==commonly_known== 18680 (pos)
                    (Bc_msg_p9)

                    ; #63131: <==commonly_known== 18680 (pos)
                    (Ba_msg_p9)

                    ; #65124: origin
                    (Bb_survivorat_s_p9)

                    ; #66664: <==closure== 52908 (pos)
                    (Pc_msg_p9)

                    ; #67735: <==commonly_known== 18680 (pos)
                    (Bb_msg_p9)

                    ; #73041: origin
                    (Bd_survivorat_s_p9)

                    ; #74915: <==closure== 63131 (pos)
                    (Pa_msg_p9)

                    ; #88424: <==closure== 21198 (pos)
                    (Pc_survivorat_s_p9)

                    ; #18405: <==negation-removal== 30885 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #22016: <==negation-removal== 13224 (pos)
                    (not (Bb_not_msg_p9))

                    ; #29849: <==negation-removal== 11577 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #32689: <==negation-removal== 63131 (pos)
                    (not (Pa_not_msg_p9))

                    ; #44944: <==negation-removal== 52908 (pos)
                    (not (Pc_not_msg_p9))

                    ; #47578: <==negation-removal== 37119 (pos)
                    (not (Pd_not_msg_p9))

                    ; #49832: <==negation-removal== 12121 (pos)
                    (not (Bd_not_msg_p9))

                    ; #51907: <==negation-removal== 18680 (pos)
                    (not (not_msg_p9))

                    ; #54744: <==negation-removal== 66664 (pos)
                    (not (Bc_not_msg_p9))

                    ; #64072: <==negation-removal== 67735 (pos)
                    (not (Pb_not_msg_p9))

                    ; #64652: <==negation-removal== 65124 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #79491: <==negation-removal== 74915 (pos)
                    (not (Ba_not_msg_p9))

                    ; #81680: <==negation-removal== 21198 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #88533: <==negation-removal== 29273 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #89451: <==negation-removal== 16759 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #89699: <==negation-removal== 88424 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #91673: <==negation-removal== 73041 (pos)
                    (not (Pd_not_survivorat_s_p9))))

    (:action commsurvivor_p9_c_s
        :precondition (and (Bc_survivorat_s_p9)
                           (Pc_survivorat_s_p9)
                           (at_c_p9))
        :effect (and
                    ; #11577: <==closure== 73041 (pos)
                    (Pd_survivorat_s_p9)

                    ; #12121: <==closure== 37119 (pos)
                    (Pd_msg_p9)

                    ; #13224: <==closure== 67735 (pos)
                    (Pb_msg_p9)

                    ; #16759: <==closure== 30885 (pos)
                    (Pa_survivorat_s_p9)

                    ; #18680: origin
                    (msg_p9)

                    ; #21198: origin
                    (Bc_survivorat_s_p9)

                    ; #29273: <==closure== 65124 (pos)
                    (Pb_survivorat_s_p9)

                    ; #30885: origin
                    (Ba_survivorat_s_p9)

                    ; #37119: <==commonly_known== 18680 (pos)
                    (Bd_msg_p9)

                    ; #52908: <==commonly_known== 18680 (pos)
                    (Bc_msg_p9)

                    ; #63131: <==commonly_known== 18680 (pos)
                    (Ba_msg_p9)

                    ; #65124: origin
                    (Bb_survivorat_s_p9)

                    ; #66664: <==closure== 52908 (pos)
                    (Pc_msg_p9)

                    ; #67735: <==commonly_known== 18680 (pos)
                    (Bb_msg_p9)

                    ; #73041: origin
                    (Bd_survivorat_s_p9)

                    ; #74915: <==closure== 63131 (pos)
                    (Pa_msg_p9)

                    ; #88424: <==closure== 21198 (pos)
                    (Pc_survivorat_s_p9)

                    ; #18405: <==negation-removal== 30885 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #22016: <==negation-removal== 13224 (pos)
                    (not (Bb_not_msg_p9))

                    ; #29849: <==negation-removal== 11577 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #32689: <==negation-removal== 63131 (pos)
                    (not (Pa_not_msg_p9))

                    ; #44944: <==negation-removal== 52908 (pos)
                    (not (Pc_not_msg_p9))

                    ; #47578: <==negation-removal== 37119 (pos)
                    (not (Pd_not_msg_p9))

                    ; #49832: <==negation-removal== 12121 (pos)
                    (not (Bd_not_msg_p9))

                    ; #51907: <==negation-removal== 18680 (pos)
                    (not (not_msg_p9))

                    ; #54744: <==negation-removal== 66664 (pos)
                    (not (Bc_not_msg_p9))

                    ; #64072: <==negation-removal== 67735 (pos)
                    (not (Pb_not_msg_p9))

                    ; #64652: <==negation-removal== 65124 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #79491: <==negation-removal== 74915 (pos)
                    (not (Ba_not_msg_p9))

                    ; #81680: <==negation-removal== 21198 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #88533: <==negation-removal== 29273 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #89451: <==negation-removal== 16759 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #89699: <==negation-removal== 88424 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #91673: <==negation-removal== 73041 (pos)
                    (not (Pd_not_survivorat_s_p9))))

    (:action commsurvivor_p9_d_s
        :precondition (and (Pd_survivorat_s_p9)
                           (at_d_p9)
                           (Bd_survivorat_s_p9))
        :effect (and
                    ; #11577: <==closure== 73041 (pos)
                    (Pd_survivorat_s_p9)

                    ; #12121: <==closure== 37119 (pos)
                    (Pd_msg_p9)

                    ; #13224: <==closure== 67735 (pos)
                    (Pb_msg_p9)

                    ; #16759: <==closure== 30885 (pos)
                    (Pa_survivorat_s_p9)

                    ; #18680: origin
                    (msg_p9)

                    ; #21198: origin
                    (Bc_survivorat_s_p9)

                    ; #29273: <==closure== 65124 (pos)
                    (Pb_survivorat_s_p9)

                    ; #30885: origin
                    (Ba_survivorat_s_p9)

                    ; #37119: <==commonly_known== 18680 (pos)
                    (Bd_msg_p9)

                    ; #52908: <==commonly_known== 18680 (pos)
                    (Bc_msg_p9)

                    ; #63131: <==commonly_known== 18680 (pos)
                    (Ba_msg_p9)

                    ; #65124: origin
                    (Bb_survivorat_s_p9)

                    ; #66664: <==closure== 52908 (pos)
                    (Pc_msg_p9)

                    ; #67735: <==commonly_known== 18680 (pos)
                    (Bb_msg_p9)

                    ; #73041: origin
                    (Bd_survivorat_s_p9)

                    ; #74915: <==closure== 63131 (pos)
                    (Pa_msg_p9)

                    ; #88424: <==closure== 21198 (pos)
                    (Pc_survivorat_s_p9)

                    ; #18405: <==negation-removal== 30885 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #22016: <==negation-removal== 13224 (pos)
                    (not (Bb_not_msg_p9))

                    ; #29849: <==negation-removal== 11577 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #32689: <==negation-removal== 63131 (pos)
                    (not (Pa_not_msg_p9))

                    ; #44944: <==negation-removal== 52908 (pos)
                    (not (Pc_not_msg_p9))

                    ; #47578: <==negation-removal== 37119 (pos)
                    (not (Pd_not_msg_p9))

                    ; #49832: <==negation-removal== 12121 (pos)
                    (not (Bd_not_msg_p9))

                    ; #51907: <==negation-removal== 18680 (pos)
                    (not (not_msg_p9))

                    ; #54744: <==negation-removal== 66664 (pos)
                    (not (Bc_not_msg_p9))

                    ; #64072: <==negation-removal== 67735 (pos)
                    (not (Pb_not_msg_p9))

                    ; #64652: <==negation-removal== 65124 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #79491: <==negation-removal== 74915 (pos)
                    (not (Ba_not_msg_p9))

                    ; #81680: <==negation-removal== 21198 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #88533: <==negation-removal== 29273 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #89451: <==negation-removal== 16759 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #89699: <==negation-removal== 88424 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #91673: <==negation-removal== 73041 (pos)
                    (not (Pd_not_survivorat_s_p9))))

    (:action communcells_p0011_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (at_a_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p0011_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p0011)
                           (succ_p0011_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p0011_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (at_c_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p0011_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p0011)
                           (succ_p0011_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p0011_p012_a
        :precondition (and (succ_p0011_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p0011)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p0011_p012_b
        :precondition (and (succ_p0011_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p0011)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p0011_p012_c
        :precondition (and (succ_p0011_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p0011)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p0011_p012_d
        :precondition (and (succ_p0011_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p0011)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p0011_p10_a
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p0011)
                           (checked_p10)
                           (succ_p0011_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p10_b
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (succ_p0011_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p10_c
        :precondition (and (Pc_not_blocked_p10)
                           (at_c_p0011)
                           (checked_p10)
                           (succ_p0011_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p0011)
                           (checked_p10)
                           (succ_p0011_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p0011_p1_a
        :precondition (and (succ_p0011_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p0011)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p1_b
        :precondition (and (succ_p0011_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p0011)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p0011_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p0011))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p1_d
        :precondition (and (succ_p0011_p1)
                           (checked_p1)
                           (at_d_p0011)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p0011_p2_a
        :precondition (and (succ_p0011_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p0011)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p0011_p2_b
        :precondition (and (succ_p0011_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p0011)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p0011_p2_c
        :precondition (and (succ_p0011_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p0011)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p0011_p2_d
        :precondition (and (succ_p0011_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p0011)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p0011_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p0011)
                           (succ_p0011_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p0011_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p0011)
                           (Bb_not_blocked_p3)
                           (succ_p0011_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p0011_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p0011)
                           (succ_p0011_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p0011_p3_d
        :precondition (and (at_d_p0011)
                           (checked_p3)
                           (succ_p0011_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p0011_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p0011)
                           (Bb_not_blocked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p4_c
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p0011)
                           (Pc_not_blocked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p0011)
                           (succ_p0011_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p0011_p5_a
        :precondition (and (succ_p0011_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p0011)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p0011_p5_b
        :precondition (and (succ_p0011_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p0011))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p0011_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p0011))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p0011_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (at_d_p0011))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p0011_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p0011)
                           (succ_p0011_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p0011_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p0011)
                           (succ_p0011_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p0011_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p0011)
                           (succ_p0011_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p0011_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p0011)
                           (succ_p0011_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p0011_p7_a
        :precondition (and (Ba_not_blocked_p7)
                           (at_a_p0011)
                           (succ_p0011_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p0011_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p0011)
                           (Pb_not_blocked_p7)
                           (succ_p0011_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p0011_p7_c
        :precondition (and (at_c_p0011)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p0011_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p0011_p7_d
        :precondition (and (at_d_p0011)
                           (Bd_not_blocked_p7)
                           (succ_p0011_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p0011_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p0011_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p0011))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p0011_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p0011_p8)
                           (at_b_p0011)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p0011_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p0011_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p0011))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p0011_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p0011_p8)
                           (at_d_p0011)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p0011_p9_a
        :precondition (and (checked_p9)
                           (succ_p0011_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p0011)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p0011_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p0011_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p0011))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p0011_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p0011_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p0011))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p0011_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p0011_p9)
                           (at_d_p0011)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p012)
                           (Ba_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p012_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p012)
                           (succ_p012_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p012_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p012)
                           (succ_p012_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p012_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (Bd_not_blocked_p0011)
                           (succ_p012_p0011)
                           (at_d_p012)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p012_p012_a
        :precondition (and (at_a_p012)
                           (succ_p012_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p012_p012_b
        :precondition (and (succ_p012_p012)
                           (at_b_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p012_p012_c
        :precondition (and (succ_p012_p012)
                           (at_c_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p012_p012_d
        :precondition (and (succ_p012_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p012_p10_a
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p10)
                           (succ_p012_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p10_b
        :precondition (and (succ_p012_p10)
                           (at_b_p012)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p10_c
        :precondition (and (succ_p012_p10)
                           (at_c_p012)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p012_p10)
                           (checked_p10)
                           (at_d_p012)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p012_p1_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p012_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p1_b
        :precondition (and (at_b_p012)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p012_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p012)
                           (Bc_not_blocked_p1)
                           (succ_p012_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p1_d
        :precondition (and (Pd_not_blocked_p1)
                           (at_d_p012)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (succ_p012_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p012_p2_a
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p2)
                           (succ_p012_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p012_p2_b
        :precondition (and (succ_p012_p2)
                           (at_b_p012)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p012_p2_c
        :precondition (and (succ_p012_p2)
                           (at_c_p012)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p012_p2_d
        :precondition (and (succ_p012_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p012)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p012_p3_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p012_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p012)
                           (Bb_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p012_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p012)
                           (succ_p012_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p012_p3_d
        :precondition (and (checked_p3)
                           (succ_p012_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p012)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p012_p4_a
        :precondition (and (at_a_p012)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p012_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p012)
                           (Bb_not_blocked_p4)
                           (succ_p012_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p4_c
        :precondition (and (checked_p4)
                           (at_c_p012)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p012_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p012_p4)
                           (at_d_p012)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p012_p5_a
        :precondition (and (succ_p012_p5)
                           (at_a_p012)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p012_p5_b
        :precondition (and (succ_p012_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p012)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p012_p5_c
        :precondition (and (succ_p012_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p012)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p012_p5_d
        :precondition (and (succ_p012_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p012))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p012_p6_a
        :precondition (and (at_a_p012)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p012_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p012_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (at_b_p012)
                           (checked_p6)
                           (succ_p012_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p012_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p012)
                           (succ_p012_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p012_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p012)
                           (Bd_not_blocked_p6)
                           (succ_p012_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p012_p7_a
        :precondition (and (at_a_p012)
                           (succ_p012_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p012_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p012_p7)
                           (at_b_p012)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p012_p7_c
        :precondition (and (succ_p012_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p012_p7_d
        :precondition (and (succ_p012_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p012)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p012_p8_a
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (checked_p8)
                           (succ_p012_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p012_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p012)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p012_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p012_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p012)
                           (checked_p8)
                           (succ_p012_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p012_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p012_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p012))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p012_p9_a
        :precondition (and (checked_p9)
                           (at_a_p012)
                           (Pa_not_blocked_p9)
                           (succ_p012_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p012)
                           (succ_p012_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p012)
                           (succ_p012_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p012_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p012_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p012))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p10)
                           (Ba_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p10_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p10_p0011)
                           (at_b_p10)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p10_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p10)
                           (Bc_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p10_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p10_p0011)
                           (at_d_p10)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p10_p012_a
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p10_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p10_p012_b
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p10_p012)
                           (at_b_p10))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p10_p012_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p10_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p10_p012_d
        :precondition (and (Pd_not_blocked_p012)
                           (at_d_p10)
                           (Bd_not_blocked_p012)
                           (succ_p10_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p10_p10_a
        :precondition (and (succ_p10_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p10_b
        :precondition (and (succ_p10_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p10_c
        :precondition (and (at_c_p10)
                           (succ_p10_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p10_d
        :precondition (and (succ_p10_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p10_p1_a
        :precondition (and (at_a_p10)
                           (succ_p10_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p1_b
        :precondition (and (succ_p10_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p10)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p1_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p1)
                           (succ_p10_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p1_d
        :precondition (and (succ_p10_p1)
                           (checked_p1)
                           (at_d_p10)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p10_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p10)
                           (succ_p10_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p10_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p10_p2)
                           (at_b_p10)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p10_p2_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p10_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p10_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p10)
                           (succ_p10_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p10_p3_a
        :precondition (and (succ_p10_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p10)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p10_p3_b
        :precondition (and (succ_p10_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3)
                           (at_b_p10))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p10_p3_c
        :precondition (and (succ_p10_p3)
                           (at_c_p10)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p10_p3_d
        :precondition (and (succ_p10_p3)
                           (at_d_p10)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p10_p4_a
        :precondition (and (checked_p4)
                           (at_a_p10)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p10_p4)
                           (at_b_p10))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p4_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p10)
                           (succ_p10_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p10_p5_a
        :precondition (and (at_a_p10)
                           (succ_p10_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p10_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p10))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p10_p5_c
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p10_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (at_d_p10))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p10_p6_a
        :precondition (and (at_a_p10)
                           (checked_p6)
                           (succ_p10_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p10_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6)
                           (at_b_p10)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p10_p6_c
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p10_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p10_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p10)
                           (succ_p10_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p10_p7_a
        :precondition (and (at_a_p10)
                           (succ_p10_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p10_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p10_p7)
                           (at_b_p10)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p10_p7_c
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p7)
                           (succ_p10_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p10_p7_d
        :precondition (and (at_d_p10)
                           (succ_p10_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p10_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (at_a_p10)
                           (Ba_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p10_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p10))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p10_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p10)
                           (Bc_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p10_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p10)
                           (succ_p10_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p10_p9_a
        :precondition (and (checked_p9)
                           (at_a_p10)
                           (Pa_not_blocked_p9)
                           (succ_p10_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p10_p9)
                           (at_b_p10))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p9_c
        :precondition (and (checked_p9)
                           (at_c_p10)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p10_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p10)
                           (Bd_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p1_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p1)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p1_p0011_b
        :precondition (and (at_b_p1)
                           (succ_p1_p0011)
                           (Pb_not_blocked_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p1_p0011_c
        :precondition (and (at_c_p1)
                           (succ_p1_p0011)
                           (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p1_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p1_p0011)
                           (Bd_not_blocked_p0011)
                           (at_d_p1)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p1_p012_a
        :precondition (and (succ_p1_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p1))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p1_p012_b
        :precondition (and (at_b_p1)
                           (succ_p1_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p1_p012_c
        :precondition (and (at_c_p1)
                           (succ_p1_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p1_p012_d
        :precondition (and (succ_p1_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p1))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p1_p10_a
        :precondition (and (succ_p1_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p1))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p10_b
        :precondition (and (at_b_p1)
                           (succ_p1_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p10_c
        :precondition (and (at_c_p1)
                           (succ_p1_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p10_d
        :precondition (and (succ_p1_p10)
                           (Pd_not_blocked_p10)
                           (checked_p10)
                           (at_d_p1)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p1_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p1_b
        :precondition (and (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p1_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p1_c
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p1_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p1_d
        :precondition (and (checked_p1)
                           (succ_p1_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p1_p2_a
        :precondition (and (at_a_p1)
                           (Ba_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p1_p2_b
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p1_p2_c
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p2)
                           (succ_p1_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p1_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p1_p2)
                           (at_d_p1)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p1_p3_a
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p3)
                           (succ_p1_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p1_p3_b
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p3)
                           (succ_p1_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p1_p3_c
        :precondition (and (at_c_p1)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p1_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p1_p3_d
        :precondition (and (succ_p1_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p1)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p1_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p4_b
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p4_c
        :precondition (and (at_c_p1)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p1_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p1_p4)
                           (at_d_p1)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p1_p5_a
        :precondition (and (checked_p5)
                           (succ_p1_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p1))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p1_p5_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p1_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p1_p5_c
        :precondition (and (at_c_p1)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p1_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p1_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p1_p5)
                           (at_d_p1))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p1_p6_a
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p1_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p1))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p1_p6_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p1_p6_c
        :precondition (and (at_c_p1)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p1_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p1_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p1_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p1)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p1_p7_a
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p1))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p1_p7_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p7)
                           (succ_p1_p7)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p1_p7_c
        :precondition (and (at_c_p1)
                           (succ_p1_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p1_p7_d
        :precondition (and (succ_p1_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p1)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p1_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p8_b
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p8_c
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p9_a
        :precondition (and (at_a_p1)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p1_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p9_b
        :precondition (and (at_b_p1)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p9_c
        :precondition (and (at_c_p1)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p1_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p2_p0011)
                           (at_a_p2)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p2_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p2)
                           (succ_p2_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p2_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p2_p0011)
                           (at_c_p2)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p2_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p2_p0011)
                           (Bd_not_blocked_p0011)
                           (at_d_p2)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p2_p012_a
        :precondition (and (succ_p2_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p2)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p2_p012_b
        :precondition (and (succ_p2_p012)
                           (at_b_p2)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p2_p012_c
        :precondition (and (succ_p2_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p2)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p2_p012_d
        :precondition (and (succ_p2_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p2))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p2_p10_a
        :precondition (and (succ_p2_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p2)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p10_b
        :precondition (and (succ_p2_p10)
                           (at_b_p2)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p10_c
        :precondition (and (succ_p2_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p2)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p10_d
        :precondition (and (succ_p2_p10)
                           (Pd_not_blocked_p10)
                           (checked_p10)
                           (at_d_p2)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p2_p1_a
        :precondition (and (succ_p2_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p2)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p1_b
        :precondition (and (succ_p2_p1)
                           (at_b_p2)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p1_c
        :precondition (and (succ_p2_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p2)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p1_d
        :precondition (and (succ_p2_p1)
                           (at_d_p2)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p2_p2_a
        :precondition (and (succ_p2_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p2_p2_b
        :precondition (and (succ_p2_p2)
                           (at_b_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p2_p2_c
        :precondition (and (succ_p2_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p2_p2_d
        :precondition (and (succ_p2_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p2_p3_a
        :precondition (and (succ_p2_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p2)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p2_p3_b
        :precondition (and (at_b_p2)
                           (succ_p2_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p2_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p2)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p2_p3_d
        :precondition (and (succ_p2_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p2)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p2_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (at_b_p2)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p4_c
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p2)
                           (Pc_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p2_p4)
                           (at_d_p2)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p2_p5_a
        :precondition (and (succ_p2_p5)
                           (checked_p5)
                           (at_a_p2)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p2_p5_b
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p2_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p2))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p2_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (at_d_p2))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p2_p6_a
        :precondition (and (succ_p2_p6)
                           (checked_p6)
                           (at_a_p2)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p2_p6_b
        :precondition (and (at_b_p2)
                           (succ_p2_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p2_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p2)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p2_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p2_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p2)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p2_p7_a
        :precondition (and (succ_p2_p7)
                           (at_a_p2)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p2_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p2_p7)
                           (at_b_p2)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p2_p7_c
        :precondition (and (succ_p2_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p2)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p2_p7_d
        :precondition (and (succ_p2_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p2)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p2_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p2)
                           (succ_p2_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p2_p8)
                           (at_c_p2)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p2))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p9_a
        :precondition (and (checked_p9)
                           (succ_p2_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p2)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p9_b
        :precondition (and (checked_p9)
                           (at_b_p2)
                           (Bb_not_blocked_p9)
                           (succ_p2_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p2_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p2))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p2_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p2_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p2))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p3)
                           (succ_p3_p0011)
                           (Ba_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p3_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p3_p0011)
                           (at_b_p3)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p3_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p3)
                           (succ_p3_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p3_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p3_p0011)
                           (at_d_p3)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p3_p012_a
        :precondition (and (succ_p3_p012)
                           (at_a_p3)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p3_p012_b
        :precondition (and (succ_p3_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p3)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p3_p012_c
        :precondition (and (succ_p3_p012)
                           (at_c_p3)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p3_p012_d
        :precondition (and (succ_p3_p012)
                           (at_d_p3)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p3_p10_a
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p3_p10)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p10_b
        :precondition (and (checked_p10)
                           (Bb_not_blocked_p10)
                           (succ_p3_p10)
                           (at_b_p3)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p10_c
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p10)
                           (succ_p3_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p3)
                           (succ_p3_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p3_p1_a
        :precondition (and (at_a_p3)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p3)
                           (succ_p3_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p3)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p1_d
        :precondition (and (checked_p1)
                           (at_d_p3)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p3_p2_a
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p3_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p3_p2)
                           (at_b_p3)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p3_p2_c
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p3_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p3)
                           (succ_p3_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p3_p3_a
        :precondition (and (at_a_p3)
                           (Pa_not_blocked_p3)
                           (succ_p3_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p3_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p3_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p3_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p3)
                           (succ_p3_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p3_p3_d
        :precondition (and (succ_p3_p3)
                           (at_d_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p3_p4_a
        :precondition (and (at_a_p3)
                           (checked_p4)
                           (succ_p3_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p3_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p3))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p4_c
        :precondition (and (at_c_p3)
                           (succ_p3_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4)
                           (at_d_p3)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p3_p5_a
        :precondition (and (at_a_p3)
                           (succ_p3_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p3_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p3_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p3))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p3_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (at_c_p3)
                           (succ_p3_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p3_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p3_p5)
                           (checked_p5)
                           (at_d_p3))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p3_p6_a
        :precondition (and (at_a_p3)
                           (succ_p3_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p3_p6_b
        :precondition (and (succ_p3_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p3)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p3_p6_c
        :precondition (and (succ_p3_p6)
                           (at_c_p3)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p3_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p3_p6)
                           (at_d_p3)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p3_p7_a
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p3_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p3)
                           (succ_p3_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p3_p7_c
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p3_p7_d
        :precondition (and (at_d_p3)
                           (Bd_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p3_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (at_a_p3)
                           (Ba_not_blocked_p8)
                           (succ_p3_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p3_p8)
                           (checked_p8)
                           (at_b_p3)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p3)
                           (Bc_not_blocked_p8)
                           (succ_p3_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p3)
                           (succ_p3_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p9_a
        :precondition (and (checked_p9)
                           (at_a_p3)
                           (succ_p3_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p3_p9)
                           (at_b_p3))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9)
                           (Bc_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p3_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p3_p9)
                           (at_d_p3)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p4_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p4)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p4_p0011_b
        :precondition (and (succ_p4_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p4)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p4_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p4_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p4)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p4_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p4_p0011)
                           (at_d_p4)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p4_p012_a
        :precondition (and (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p4_p012)
                           (at_a_p4)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p4_p012_b
        :precondition (and (Pb_not_blocked_p012)
                           (succ_p4_p012)
                           (at_b_p4)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p4_p012_c
        :precondition (and (succ_p4_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p4))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p4_p012_d
        :precondition (and (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p4)
                           (succ_p4_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p4_p10_a
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p4)
                           (checked_p10)
                           (succ_p4_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p10_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p10)
                           (succ_p4_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p10_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p4_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p4)
                           (checked_p10)
                           (succ_p4_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p4_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p4_p1)
                           (at_a_p4)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p1_b
        :precondition (and (checked_p1)
                           (succ_p4_p1)
                           (at_b_p4)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p4_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p4))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p1_d
        :precondition (and (checked_p1)
                           (succ_p4_p1)
                           (at_d_p4)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p4_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p4)
                           (succ_p4_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p4_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p4_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p4_p2)
                           (checked_p2)
                           (at_c_p4))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p4_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p4)
                           (succ_p4_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p4_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p4)
                           (checked_p3)
                           (succ_p4_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p4_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p4)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p4_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_c_p4))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p4_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p4)
                           (succ_p4_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p4_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p4_p4)
                           (at_a_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p4)
                           (Bb_not_blocked_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p4_c
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p4)
                           (succ_p4_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p4_p5_a
        :precondition (and (checked_p5)
                           (succ_p4_p5)
                           (at_a_p4)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p4_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p4))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p4_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p4))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p4_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p4_p5)
                           (checked_p5)
                           (at_d_p4))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p4_p6_a
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (at_a_p4)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p4_p6_b
        :precondition (and (succ_p4_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p4)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p4_p6_c
        :precondition (and (succ_p4_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p4))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p4_p6_d
        :precondition (and (succ_p4_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p4)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p4_p7_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p7)
                           (succ_p4_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p4_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p4)
                           (Pb_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p4_p7_c
        :precondition (and (checked_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p4_p7)
                           (at_c_p4))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p4_p7_d
        :precondition (and (at_d_p4)
                           (Bd_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p4_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p4_p8)
                           (at_a_p4)
                           (Ba_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p4_p8)
                           (at_b_p4)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p4_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p4))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p4_p8)
                           (at_d_p4)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p9_a
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p4)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p9_b
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p4))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p9_c
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p4))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p4_p9_d
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p4)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p5_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p5)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p5_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p5_p0011)
                           (at_b_p5)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p5_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p5_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p5)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p5_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p5_p0011)
                           (at_d_p5)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p5_p012_a
        :precondition (and (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p5_p012)
                           (at_a_p5)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p5_p012_b
        :precondition (and (Pb_not_blocked_p012)
                           (succ_p5_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p5))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p5_p012_c
        :precondition (and (Pc_not_blocked_p012)
                           (succ_p5_p012)
                           (at_c_p5)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p5_p012_d
        :precondition (and (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p5)
                           (succ_p5_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p5_p10_a
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p5)
                           (succ_p5_p10)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (succ_p5_p10)
                           (checked_p10)
                           (at_b_p5)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p10_c
        :precondition (and (succ_p5_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p5)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p5)
                           (succ_p5_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p5_p1_a
        :precondition (and (succ_p5_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p5)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p1_b
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p5)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p5_p1)
                           (checked_p1)
                           (at_c_p5)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p1_d
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (at_d_p5)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p5_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p5_p2)
                           (at_a_p5)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p5_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p5_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p5)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p5_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p5_p2)
                           (at_c_p5)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p5_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p5_p2)
                           (at_d_p5)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p5_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p5)
                           (succ_p5_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p5_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (at_b_p5))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p5_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p5)
                           (succ_p5_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p5_p3_d
        :precondition (and (checked_p3)
                           (at_d_p5)
                           (succ_p5_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p5_p4_a
        :precondition (and (succ_p5_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p5))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (succ_p5_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p4_c
        :precondition (and (succ_p5_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p5)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p4_d
        :precondition (and (succ_p5_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p5)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p5_p5_a
        :precondition (and (succ_p5_p5)
                           (checked_p5)
                           (at_a_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p5_p5_b
        :precondition (and (succ_p5_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p5_p5_c
        :precondition (and (succ_p5_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p5_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p5_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p5_p6_a
        :precondition (and (checked_p6)
                           (at_a_p5)
                           (Ba_not_blocked_p6)
                           (succ_p5_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p5_p6_b
        :precondition (and (at_b_p5)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p5_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p5_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p5)
                           (succ_p5_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p5_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p5)
                           (Bd_not_blocked_p6)
                           (succ_p5_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p5_p7_a
        :precondition (and (succ_p5_p7)
                           (at_a_p5)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p5_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p5_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p5)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p5_p7_c
        :precondition (and (succ_p5_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p5)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p5_p7_d
        :precondition (and (succ_p5_p7)
                           (at_d_p5)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p5_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p5_p8)
                           (at_a_p5)
                           (Ba_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p5_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p5))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p5_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p5)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p5_p8)
                           (at_d_p5)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p9_a
        :precondition (and (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p5_p9)
                           (at_a_p5)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p5_p9)
                           (at_b_p5))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p5_p9)
                           (at_c_p5))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p5_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p5_p9)
                           (at_d_p5)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p6_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p6)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p6_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p6_p0011)
                           (at_b_p6)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p6_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p6_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p6)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p6_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p6_p0011)
                           (at_d_p6)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p6_p012_a
        :precondition (and (succ_p6_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p6)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p6_p012_b
        :precondition (and (succ_p6_p012)
                           (at_b_p6)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p6_p012_c
        :precondition (and (succ_p6_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p6))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p6_p012_d
        :precondition (and (succ_p6_p012)
                           (at_d_p6)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p6_p10_a
        :precondition (and (succ_p6_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p6)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p10_b
        :precondition (and (succ_p6_p10)
                           (at_b_p6)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p10_c
        :precondition (and (succ_p6_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p6))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p10_d
        :precondition (and (succ_p6_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p6)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p6_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p6)
                           (succ_p6_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p1_b
        :precondition (and (at_b_p6)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p6_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p1_d
        :precondition (and (at_d_p6)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p6_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p6_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p6_p2)
                           (at_a_p6)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p6_p2_b
        :precondition (and (succ_p6_p2)
                           (at_b_p6)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p6_p2_c
        :precondition (and (succ_p6_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p6)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p6_p2_d
        :precondition (and (succ_p6_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p6)
                           (Bd_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p6_p3_a
        :precondition (and (succ_p6_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p6)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p6_p3_b
        :precondition (and (succ_p6_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p6)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p6_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3)
                           (at_c_p6))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p6_p3_d
        :precondition (and (succ_p6_p3)
                           (at_d_p6)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p6_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p6_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p6))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p6)
                           (succ_p6_p4)
                           (Bb_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p4_c
        :precondition (and (checked_p4)
                           (succ_p6_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p6))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p6)
                           (succ_p6_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p6_p5_a
        :precondition (and (succ_p6_p5)
                           (checked_p5)
                           (at_a_p6)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p6_p5_b
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p6)
                           (succ_p6_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p6_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p6_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p6))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p6_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p6)
                           (succ_p6_p5)
                           (checked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p6_p6_a
        :precondition (and (checked_p6)
                           (at_a_p6)
                           (succ_p6_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p6_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (at_b_p6)
                           (checked_p6)
                           (succ_p6_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p6_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p6_p6)
                           (at_c_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p6_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p6)
                           (succ_p6_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p6_p7_a
        :precondition (and (succ_p6_p7)
                           (at_a_p6)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p6_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p6_p7)
                           (at_b_p6)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p6_p7_c
        :precondition (and (succ_p6_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p6)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p6_p7_d
        :precondition (and (succ_p6_p7)
                           (at_d_p6)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p6_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p6_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p6)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p6)
                           (succ_p6_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p6_p8)
                           (checked_p8)
                           (at_c_p6))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p6)
                           (succ_p6_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p9_a
        :precondition (and (checked_p9)
                           (succ_p6_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p6)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (at_c_p6))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p6_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p6)
                           (succ_p6_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p7_p0011)
                           (at_a_p7))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p7_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p7)
                           (succ_p7_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p7_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p7)
                           (Bc_not_blocked_p0011)
                           (succ_p7_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p7_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (Bd_not_blocked_p0011)
                           (succ_p7_p0011)
                           (at_d_p7)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p7_p012_a
        :precondition (and (succ_p7_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p7))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p7_p012_b
        :precondition (and (succ_p7_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p7))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p7_p012_c
        :precondition (and (at_c_p7)
                           (succ_p7_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p7_p012_d
        :precondition (and (succ_p7_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p7))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p7_p10_a
        :precondition (and (Ba_not_blocked_p10)
                           (succ_p7_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p7))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p10_b
        :precondition (and (succ_p7_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p7)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p10_c
        :precondition (and (at_c_p7)
                           (succ_p7_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p7_p10)
                           (checked_p10)
                           (at_d_p7)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p7_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (succ_p7_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p7))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p1_b
        :precondition (and (checked_p1)
                           (succ_p7_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p7)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p7)
                           (checked_p1)
                           (succ_p7_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p1_d
        :precondition (and (checked_p1)
                           (succ_p7_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p7))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p7_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p7))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p7_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p7_p2_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p7_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (at_d_p7))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p7_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3)
                           (at_a_p7))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p7_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3)
                           (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p7_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p7)
                           (checked_p3)
                           (succ_p7_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p7_p3_d
        :precondition (and (at_d_p7)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p7_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p4_c
        :precondition (and (at_c_p7)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p7_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p7)
                           (succ_p7_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p7_p5_a
        :precondition (and (succ_p7_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p7))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p7_p5_b
        :precondition (and (succ_p7_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p7))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p7_p5_c
        :precondition (and (succ_p7_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p7)
                           (checked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p7_p5_d
        :precondition (and (succ_p7_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p7))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p7_p6_a
        :precondition (and (checked_p6)
                           (succ_p7_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p7))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p7_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p7_p6)
                           (at_b_p7)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p7_p6_c
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p7_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p7_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (checked_p6)
                           (succ_p7_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p7))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p7_p7_a
        :precondition (and (succ_p7_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7)
                           (at_a_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p7_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p7_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p7_p7_c
        :precondition (and (at_c_p7)
                           (succ_p7_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p7_p7_d
        :precondition (and (succ_p7_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p7_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8)
                           (at_a_p7))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p7)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p7)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p9_a
        :precondition (and (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p7_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p7))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p7_p9)
                           (at_b_p7))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p7)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p7_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (succ_p7_p9)
                           (at_d_p7))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p8)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p8_p0011_b
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p8_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p8)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p8_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p8))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p8_p012_a
        :precondition (and (Ba_not_blocked_p012)
                           (succ_p8_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p8)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p8_p012_b
        :precondition (and (at_b_p8)
                           (succ_p8_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p8_p012_c
        :precondition (and (succ_p8_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p8))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p8_p012_d
        :precondition (and (succ_p8_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p8))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p8_p10_a
        :precondition (and (succ_p8_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p8)
                           (checked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p10_b
        :precondition (and (at_b_p8)
                           (succ_p8_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p10_c
        :precondition (and (succ_p8_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p8)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p10_d
        :precondition (and (succ_p8_p10)
                           (at_d_p8)
                           (Pd_not_blocked_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p8_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1)
                           (at_a_p8)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p1_b
        :precondition (and (at_b_p8)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p8_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p8))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p1_d
        :precondition (and (checked_p1)
                           (succ_p8_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p8))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p8_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p8_p2)
                           (at_a_p8)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p8_p2_b
        :precondition (and (at_b_p8)
                           (succ_p8_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p8_p2_c
        :precondition (and (succ_p8_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p8)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p8_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (succ_p8_p2)
                           (Bd_not_blocked_p2)
                           (checked_p2)
                           (at_d_p8))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p8_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p8_p3_b
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (succ_p8_p3)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p8_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p8_p3)
                           (checked_p3)
                           (at_c_p8))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p8_p3_d
        :precondition (and (at_d_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p8_p4_a
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p4_b
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p8_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p4_c
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p8_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p8))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p4_d
        :precondition (and (at_d_p8)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p8_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p8_p5_a
        :precondition (and (succ_p8_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p8)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p8_p5_b
        :precondition (and (at_b_p8)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p8_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p8))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p8_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p8_p5)
                           (checked_p5)
                           (at_d_p8))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p8_p6_a
        :precondition (and (succ_p8_p6)
                           (checked_p6)
                           (at_a_p8)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p8_p6_b
        :precondition (and (at_b_p8)
                           (succ_p8_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p8_p6_c
        :precondition (and (succ_p8_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p8)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p8_p6_d
        :precondition (and (succ_p8_p6)
                           (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p8))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p8_p7_a
        :precondition (and (at_a_p8)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p8_p7_b
        :precondition (and (at_b_p8)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p8_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p8)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p8_p7_d
        :precondition (and (at_d_p8)
                           (succ_p8_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p8_p8_a
        :precondition (and (succ_p8_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p8_b
        :precondition (and (at_b_p8)
                           (succ_p8_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p8_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p8_d
        :precondition (and (succ_p8_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p9_a
        :precondition (and (checked_p9)
                           (succ_p8_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p8)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p9_b
        :precondition (and (at_b_p8)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p8_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p8))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p8_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p8_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p8))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p0011_a
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p9)
                           (Ba_not_blocked_p0011)
                           (succ_p9_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p9_p0011_b
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p9_p0011)
                           (at_b_p9)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p9_p0011_c
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p9)
                           (succ_p9_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p9_p0011_d
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p9)
                           (succ_p9_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #12206: <==commonly_known== 18418 (pos)
                    (Bc_obss_p0011)

                    ; #18418: origin
                    (obss_p0011)

                    ; #29120: <==closure== 12206 (pos)
                    (Pc_obss_p0011)

                    ; #29861: <==closure== 34236 (pos)
                    (Pa_not_blocked_p0011)

                    ; #30259: <==closure== 31726 (pos)
                    (Pb_not_blocked_p0011)

                    ; #31726: origin
                    (Bb_not_blocked_p0011)

                    ; #34236: origin
                    (Ba_not_blocked_p0011)

                    ; #37054: <==commonly_known== 18418 (pos)
                    (Bb_obss_p0011)

                    ; #45820: <==closure== 53124 (pos)
                    (Pa_obss_p0011)

                    ; #47699: <==closure== 64586 (pos)
                    (Pd_obss_p0011)

                    ; #48935: <==closure== 37054 (pos)
                    (Pb_obss_p0011)

                    ; #49581: origin
                    (Bc_not_blocked_p0011)

                    ; #53124: <==commonly_known== 18418 (pos)
                    (Ba_obss_p0011)

                    ; #55995: <==closure== 49581 (pos)
                    (Pc_not_blocked_p0011)

                    ; #64586: <==commonly_known== 18418 (pos)
                    (Bd_obss_p0011)

                    ; #71340: <==closure== 85875 (pos)
                    (Pd_not_blocked_p0011)

                    ; #85875: origin
                    (Bd_not_blocked_p0011)

                    ; #11317: <==negation-removal== 47699 (pos)
                    (not (Bd_not_obss_p0011))

                    ; #11731: <==negation-removal== 53124 (pos)
                    (not (Pa_not_obss_p0011))

                    ; #16461: <==negation-removal== 18418 (pos)
                    (not (not_obss_p0011))

                    ; #19173: <==negation-removal== 71340 (pos)
                    (not (Bd_blocked_p0011))

                    ; #22556: <==negation-removal== 31726 (pos)
                    (not (Pb_blocked_p0011))

                    ; #30867: <==negation-removal== 85875 (pos)
                    (not (Pd_blocked_p0011))

                    ; #33509: <==negation-removal== 37054 (pos)
                    (not (Pb_not_obss_p0011))

                    ; #39222: <==negation-removal== 12206 (pos)
                    (not (Pc_not_obss_p0011))

                    ; #48211: <==negation-removal== 64586 (pos)
                    (not (Pd_not_obss_p0011))

                    ; #58628: <==negation-removal== 45820 (pos)
                    (not (Ba_not_obss_p0011))

                    ; #64694: <==negation-removal== 49581 (pos)
                    (not (Pc_blocked_p0011))

                    ; #69057: <==negation-removal== 34236 (pos)
                    (not (Pa_blocked_p0011))

                    ; #75518: <==negation-removal== 30259 (pos)
                    (not (Bb_blocked_p0011))

                    ; #75548: <==negation-removal== 29120 (pos)
                    (not (Bc_not_obss_p0011))

                    ; #77933: <==negation-removal== 48935 (pos)
                    (not (Bb_not_obss_p0011))

                    ; #78743: <==negation-removal== 29861 (pos)
                    (not (Ba_blocked_p0011))

                    ; #89934: <==negation-removal== 55995 (pos)
                    (not (Bc_blocked_p0011))))

    (:action communcells_p9_p012_a
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p012)
                           (succ_p9_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p9_p012_b
        :precondition (and (succ_p9_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p9)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p9_p012_c
        :precondition (and (succ_p9_p012)
                           (at_c_p9)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p9_p012_d
        :precondition (and (at_d_p9)
                           (succ_p9_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10016: <==closure== 35789 (pos)
                    (Pb_obss_p012)

                    ; #10873: <==closure== 78753 (pos)
                    (Pc_obss_p012)

                    ; #12934: <==closure== 55459 (pos)
                    (Pa_obss_p012)

                    ; #15787: <==closure== 31222 (pos)
                    (Pd_obss_p012)

                    ; #22810: <==closure== 34056 (pos)
                    (Pb_not_blocked_p012)

                    ; #31222: <==commonly_known== 89039 (pos)
                    (Bd_obss_p012)

                    ; #34056: origin
                    (Bb_not_blocked_p012)

                    ; #35789: <==commonly_known== 89039 (pos)
                    (Bb_obss_p012)

                    ; #46265: <==closure== 75853 (pos)
                    (Pa_not_blocked_p012)

                    ; #48571: origin
                    (Bd_not_blocked_p012)

                    ; #55459: <==commonly_known== 89039 (pos)
                    (Ba_obss_p012)

                    ; #75853: origin
                    (Ba_not_blocked_p012)

                    ; #78753: <==commonly_known== 89039 (pos)
                    (Bc_obss_p012)

                    ; #87122: <==closure== 48571 (pos)
                    (Pd_not_blocked_p012)

                    ; #89039: origin
                    (obss_p012)

                    ; #89108: origin
                    (Bc_not_blocked_p012)

                    ; #91707: <==closure== 89108 (pos)
                    (Pc_not_blocked_p012)

                    ; #13702: <==negation-removal== 89108 (pos)
                    (not (Pc_blocked_p012))

                    ; #14193: <==negation-removal== 31222 (pos)
                    (not (Pd_not_obss_p012))

                    ; #16378: <==negation-removal== 91707 (pos)
                    (not (Bc_blocked_p012))

                    ; #24083: <==negation-removal== 22810 (pos)
                    (not (Bb_blocked_p012))

                    ; #24390: <==negation-removal== 78753 (pos)
                    (not (Pc_not_obss_p012))

                    ; #26102: <==negation-removal== 55459 (pos)
                    (not (Pa_not_obss_p012))

                    ; #31629: <==negation-removal== 12934 (pos)
                    (not (Ba_not_obss_p012))

                    ; #33371: <==negation-removal== 34056 (pos)
                    (not (Pb_blocked_p012))

                    ; #39524: <==negation-removal== 46265 (pos)
                    (not (Ba_blocked_p012))

                    ; #42864: <==negation-removal== 35789 (pos)
                    (not (Pb_not_obss_p012))

                    ; #50581: <==negation-removal== 75853 (pos)
                    (not (Pa_blocked_p012))

                    ; #55506: <==negation-removal== 48571 (pos)
                    (not (Pd_blocked_p012))

                    ; #64656: <==negation-removal== 89039 (pos)
                    (not (not_obss_p012))

                    ; #72417: <==negation-removal== 10016 (pos)
                    (not (Bb_not_obss_p012))

                    ; #78379: <==negation-removal== 15787 (pos)
                    (not (Bd_not_obss_p012))

                    ; #78712: <==negation-removal== 87122 (pos)
                    (not (Bd_blocked_p012))

                    ; #89807: <==negation-removal== 10873 (pos)
                    (not (Bc_not_obss_p012))))

    (:action communcells_p9_p10_a
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (succ_p9_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p10_b
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p9)
                           (checked_p10)
                           (succ_p9_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p10_c
        :precondition (and (at_c_p9)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p9_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p10_d
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p9)
                           (checked_p10)
                           (succ_p9_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27037: origin
                    (Bb_not_blocked_p10)

                    ; #27497: <==commonly_known== 45790 (pos)
                    (Bb_obss_p10)

                    ; #35088: <==commonly_known== 45790 (pos)
                    (Bd_obss_p10)

                    ; #35984: origin
                    (Ba_not_blocked_p10)

                    ; #45790: origin
                    (obss_p10)

                    ; #45934: <==closure== 35984 (pos)
                    (Pa_not_blocked_p10)

                    ; #54685: <==closure== 88092 (pos)
                    (Pc_obss_p10)

                    ; #58272: origin
                    (Bc_not_blocked_p10)

                    ; #58346: <==closure== 58272 (pos)
                    (Pc_not_blocked_p10)

                    ; #61722: <==closure== 78853 (pos)
                    (Pd_not_blocked_p10)

                    ; #67934: <==closure== 27497 (pos)
                    (Pb_obss_p10)

                    ; #78853: origin
                    (Bd_not_blocked_p10)

                    ; #79835: <==closure== 27037 (pos)
                    (Pb_not_blocked_p10)

                    ; #82359: <==closure== 35088 (pos)
                    (Pd_obss_p10)

                    ; #86709: <==commonly_known== 45790 (pos)
                    (Ba_obss_p10)

                    ; #86907: <==closure== 86709 (pos)
                    (Pa_obss_p10)

                    ; #88092: <==commonly_known== 45790 (pos)
                    (Bc_obss_p10)

                    ; #10864: <==negation-removal== 67934 (pos)
                    (not (Bb_not_obss_p10))

                    ; #16351: <==negation-removal== 27037 (pos)
                    (not (Pb_blocked_p10))

                    ; #19034: <==negation-removal== 86709 (pos)
                    (not (Pa_not_obss_p10))

                    ; #41307: <==negation-removal== 35088 (pos)
                    (not (Pd_not_obss_p10))

                    ; #43866: <==negation-removal== 54685 (pos)
                    (not (Bc_not_obss_p10))

                    ; #46268: <==negation-removal== 27497 (pos)
                    (not (Pb_not_obss_p10))

                    ; #46328: <==negation-removal== 78853 (pos)
                    (not (Pd_blocked_p10))

                    ; #46338: <==negation-removal== 35984 (pos)
                    (not (Pa_blocked_p10))

                    ; #50844: <==negation-removal== 61722 (pos)
                    (not (Bd_blocked_p10))

                    ; #56255: <==negation-removal== 79835 (pos)
                    (not (Bb_blocked_p10))

                    ; #57907: <==negation-removal== 58272 (pos)
                    (not (Pc_blocked_p10))

                    ; #65882: <==negation-removal== 45790 (pos)
                    (not (not_obss_p10))

                    ; #67969: <==negation-removal== 82359 (pos)
                    (not (Bd_not_obss_p10))

                    ; #76268: <==negation-removal== 58346 (pos)
                    (not (Bc_blocked_p10))

                    ; #76271: <==negation-removal== 86907 (pos)
                    (not (Ba_not_obss_p10))

                    ; #79707: <==negation-removal== 88092 (pos)
                    (not (Pc_not_obss_p10))

                    ; #91383: <==negation-removal== 45934 (pos)
                    (not (Ba_blocked_p10))))

    (:action communcells_p9_p1_a
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p9)
                           (succ_p9_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p9)
                           (Bc_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p1_d
        :precondition (and (at_d_p9)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (succ_p9_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #10537: origin
                    (obss_p1)

                    ; #12342: <==closure== 45623 (pos)
                    (Pd_obss_p1)

                    ; #19229: <==commonly_known== 10537 (pos)
                    (Bb_obss_p1)

                    ; #22377: <==closure== 19229 (pos)
                    (Pb_obss_p1)

                    ; #24179: <==closure== 54591 (pos)
                    (Pb_not_blocked_p1)

                    ; #25474: <==closure== 80881 (pos)
                    (Pc_not_blocked_p1)

                    ; #35345: <==closure== 52420 (pos)
                    (Pd_not_blocked_p1)

                    ; #35361: <==closure== 43077 (pos)
                    (Pa_not_blocked_p1)

                    ; #43077: origin
                    (Ba_not_blocked_p1)

                    ; #45623: <==commonly_known== 10537 (pos)
                    (Bd_obss_p1)

                    ; #52420: origin
                    (Bd_not_blocked_p1)

                    ; #54591: origin
                    (Bb_not_blocked_p1)

                    ; #62891: <==closure== 78952 (pos)
                    (Pc_obss_p1)

                    ; #63631: <==closure== 78430 (pos)
                    (Pa_obss_p1)

                    ; #78430: <==commonly_known== 10537 (pos)
                    (Ba_obss_p1)

                    ; #78952: <==commonly_known== 10537 (pos)
                    (Bc_obss_p1)

                    ; #80881: origin
                    (Bc_not_blocked_p1)

                    ; #10569: <==negation-removal== 80881 (pos)
                    (not (Pc_blocked_p1))

                    ; #25250: <==negation-removal== 22377 (pos)
                    (not (Bb_not_obss_p1))

                    ; #31158: <==negation-removal== 54591 (pos)
                    (not (Pb_blocked_p1))

                    ; #33991: <==negation-removal== 62891 (pos)
                    (not (Bc_not_obss_p1))

                    ; #37384: <==negation-removal== 19229 (pos)
                    (not (Pb_not_obss_p1))

                    ; #39597: <==negation-removal== 10537 (pos)
                    (not (not_obss_p1))

                    ; #57830: <==negation-removal== 35361 (pos)
                    (not (Ba_blocked_p1))

                    ; #59895: <==negation-removal== 78952 (pos)
                    (not (Pc_not_obss_p1))

                    ; #67685: <==negation-removal== 35345 (pos)
                    (not (Bd_blocked_p1))

                    ; #73722: <==negation-removal== 78430 (pos)
                    (not (Pa_not_obss_p1))

                    ; #74165: <==negation-removal== 45623 (pos)
                    (not (Pd_not_obss_p1))

                    ; #78786: <==negation-removal== 52420 (pos)
                    (not (Pd_blocked_p1))

                    ; #78944: <==negation-removal== 63631 (pos)
                    (not (Ba_not_obss_p1))

                    ; #82740: <==negation-removal== 24179 (pos)
                    (not (Bb_blocked_p1))

                    ; #89187: <==negation-removal== 25474 (pos)
                    (not (Bc_blocked_p1))

                    ; #90850: <==negation-removal== 12342 (pos)
                    (not (Bd_not_obss_p1))

                    ; #91913: <==negation-removal== 43077 (pos)
                    (not (Pa_blocked_p1))))

    (:action communcells_p9_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p9)
                           (succ_p9_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p9_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p9_p2_c
        :precondition (and (at_c_p9)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p9_p2_d
        :precondition (and (at_d_p9)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17970: <==commonly_known== 69294 (pos)
                    (Bc_obss_p2)

                    ; #18238: <==commonly_known== 69294 (pos)
                    (Bd_obss_p2)

                    ; #18541: <==commonly_known== 69294 (pos)
                    (Bb_obss_p2)

                    ; #21024: <==closure== 66931 (pos)
                    (Pd_not_blocked_p2)

                    ; #31407: origin
                    (Ba_not_blocked_p2)

                    ; #32268: origin
                    (Bc_not_blocked_p2)

                    ; #38739: <==closure== 61266 (pos)
                    (Pb_not_blocked_p2)

                    ; #57582: <==closure== 32268 (pos)
                    (Pc_not_blocked_p2)

                    ; #59870: <==closure== 18238 (pos)
                    (Pd_obss_p2)

                    ; #61111: <==closure== 31407 (pos)
                    (Pa_not_blocked_p2)

                    ; #61266: origin
                    (Bb_not_blocked_p2)

                    ; #66931: origin
                    (Bd_not_blocked_p2)

                    ; #67852: <==commonly_known== 69294 (pos)
                    (Ba_obss_p2)

                    ; #69294: origin
                    (obss_p2)

                    ; #69402: <==closure== 18541 (pos)
                    (Pb_obss_p2)

                    ; #71810: <==closure== 67852 (pos)
                    (Pa_obss_p2)

                    ; #75684: <==closure== 17970 (pos)
                    (Pc_obss_p2)

                    ; #14089: <==negation-removal== 67852 (pos)
                    (not (Pa_not_obss_p2))

                    ; #21935: <==negation-removal== 69402 (pos)
                    (not (Bb_not_obss_p2))

                    ; #29143: <==negation-removal== 61111 (pos)
                    (not (Ba_blocked_p2))

                    ; #36525: <==negation-removal== 17970 (pos)
                    (not (Pc_not_obss_p2))

                    ; #41019: <==negation-removal== 75684 (pos)
                    (not (Bc_not_obss_p2))

                    ; #61033: <==negation-removal== 66931 (pos)
                    (not (Pd_blocked_p2))

                    ; #63125: <==negation-removal== 59870 (pos)
                    (not (Bd_not_obss_p2))

                    ; #64765: <==negation-removal== 38739 (pos)
                    (not (Bb_blocked_p2))

                    ; #69223: <==negation-removal== 31407 (pos)
                    (not (Pa_blocked_p2))

                    ; #70394: <==negation-removal== 21024 (pos)
                    (not (Bd_blocked_p2))

                    ; #72658: <==negation-removal== 57582 (pos)
                    (not (Bc_blocked_p2))

                    ; #79415: <==negation-removal== 18238 (pos)
                    (not (Pd_not_obss_p2))

                    ; #81510: <==negation-removal== 32268 (pos)
                    (not (Pc_blocked_p2))

                    ; #85441: <==negation-removal== 61266 (pos)
                    (not (Pb_blocked_p2))

                    ; #86509: <==negation-removal== 71810 (pos)
                    (not (Ba_not_obss_p2))

                    ; #87851: <==negation-removal== 69294 (pos)
                    (not (not_obss_p2))

                    ; #88319: <==negation-removal== 18541 (pos)
                    (not (Pb_not_obss_p2))))

    (:action communcells_p9_p3_a
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p3)
                           (succ_p9_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p9_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p9_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p9)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p9_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p9_p3)
                           (at_c_p9)
                           (checked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p9_p3_d
        :precondition (and (at_d_p9)
                           (succ_p9_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #13446: origin
                    (obss_p3)

                    ; #19671: <==closure== 87293 (pos)
                    (Pd_obss_p3)

                    ; #29416: <==closure== 42855 (pos)
                    (Pb_not_blocked_p3)

                    ; #39503: origin
                    (Ba_not_blocked_p3)

                    ; #42855: origin
                    (Bb_not_blocked_p3)

                    ; #49707: <==closure== 39503 (pos)
                    (Pa_not_blocked_p3)

                    ; #50267: origin
                    (Bd_not_blocked_p3)

                    ; #51192: <==commonly_known== 13446 (pos)
                    (Bc_obss_p3)

                    ; #61122: <==closure== 74353 (pos)
                    (Pa_obss_p3)

                    ; #61898: <==closure== 87204 (pos)
                    (Pb_obss_p3)

                    ; #62753: origin
                    (Bc_not_blocked_p3)

                    ; #67199: <==closure== 62753 (pos)
                    (Pc_not_blocked_p3)

                    ; #72316: <==closure== 51192 (pos)
                    (Pc_obss_p3)

                    ; #74353: <==commonly_known== 13446 (pos)
                    (Ba_obss_p3)

                    ; #82739: <==closure== 50267 (pos)
                    (Pd_not_blocked_p3)

                    ; #87204: <==commonly_known== 13446 (pos)
                    (Bb_obss_p3)

                    ; #87293: <==commonly_known== 13446 (pos)
                    (Bd_obss_p3)

                    ; #14372: <==negation-removal== 87293 (pos)
                    (not (Pd_not_obss_p3))

                    ; #15105: <==negation-removal== 39503 (pos)
                    (not (Pa_blocked_p3))

                    ; #24143: <==negation-removal== 61122 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41926: <==negation-removal== 82739 (pos)
                    (not (Bd_blocked_p3))

                    ; #52646: <==negation-removal== 51192 (pos)
                    (not (Pc_not_obss_p3))

                    ; #53193: <==negation-removal== 49707 (pos)
                    (not (Ba_blocked_p3))

                    ; #57446: <==negation-removal== 29416 (pos)
                    (not (Bb_blocked_p3))

                    ; #59841: <==negation-removal== 19671 (pos)
                    (not (Bd_not_obss_p3))

                    ; #63502: <==negation-removal== 42855 (pos)
                    (not (Pb_blocked_p3))

                    ; #66096: <==negation-removal== 67199 (pos)
                    (not (Bc_blocked_p3))

                    ; #68259: <==negation-removal== 72316 (pos)
                    (not (Bc_not_obss_p3))

                    ; #69430: <==negation-removal== 61898 (pos)
                    (not (Bb_not_obss_p3))

                    ; #70354: <==negation-removal== 87204 (pos)
                    (not (Pb_not_obss_p3))

                    ; #72402: <==negation-removal== 50267 (pos)
                    (not (Pd_blocked_p3))

                    ; #77842: <==negation-removal== 62753 (pos)
                    (not (Pc_blocked_p3))

                    ; #84401: <==negation-removal== 13446 (pos)
                    (not (not_obss_p3))

                    ; #90929: <==negation-removal== 74353 (pos)
                    (not (Pa_not_obss_p3))))

    (:action communcells_p9_p4_a
        :precondition (and (at_a_p9)
                           (succ_p9_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p4_b
        :precondition (and (Pb_not_blocked_p4)
                           (succ_p9_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p9))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p4_c
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (at_c_p9)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (at_d_p9)
                           (succ_p9_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #13488: origin
                    (Bc_not_blocked_p4)

                    ; #24359: origin
                    (obss_p4)

                    ; #25675: <==closure== 72609 (pos)
                    (Pd_obss_p4)

                    ; #37299: origin
                    (Ba_not_blocked_p4)

                    ; #39803: <==commonly_known== 24359 (pos)
                    (Ba_obss_p4)

                    ; #41460: <==commonly_known== 24359 (pos)
                    (Bb_obss_p4)

                    ; #42103: <==closure== 48143 (pos)
                    (Pc_obss_p4)

                    ; #46770: <==closure== 41460 (pos)
                    (Pb_obss_p4)

                    ; #48143: <==commonly_known== 24359 (pos)
                    (Bc_obss_p4)

                    ; #49235: <==closure== 13488 (pos)
                    (Pc_not_blocked_p4)

                    ; #53564: <==closure== 39803 (pos)
                    (Pa_obss_p4)

                    ; #56825: <==closure== 37299 (pos)
                    (Pa_not_blocked_p4)

                    ; #60971: <==closure== 63650 (pos)
                    (Pd_not_blocked_p4)

                    ; #63650: origin
                    (Bd_not_blocked_p4)

                    ; #72609: <==commonly_known== 24359 (pos)
                    (Bd_obss_p4)

                    ; #82281: origin
                    (Bb_not_blocked_p4)

                    ; #83726: <==closure== 82281 (pos)
                    (Pb_not_blocked_p4)

                    ; #15265: <==negation-removal== 53564 (pos)
                    (not (Ba_not_obss_p4))

                    ; #15540: <==negation-removal== 82281 (pos)
                    (not (Pb_blocked_p4))

                    ; #22237: <==negation-removal== 41460 (pos)
                    (not (Pb_not_obss_p4))

                    ; #25649: <==negation-removal== 48143 (pos)
                    (not (Pc_not_obss_p4))

                    ; #34832: <==negation-removal== 25675 (pos)
                    (not (Bd_not_obss_p4))

                    ; #35626: <==negation-removal== 37299 (pos)
                    (not (Pa_blocked_p4))

                    ; #48460: <==negation-removal== 60971 (pos)
                    (not (Bd_blocked_p4))

                    ; #57652: <==negation-removal== 49235 (pos)
                    (not (Bc_blocked_p4))

                    ; #67538: <==negation-removal== 39803 (pos)
                    (not (Pa_not_obss_p4))

                    ; #73494: <==negation-removal== 83726 (pos)
                    (not (Bb_blocked_p4))

                    ; #74819: <==negation-removal== 72609 (pos)
                    (not (Pd_not_obss_p4))

                    ; #75381: <==negation-removal== 13488 (pos)
                    (not (Pc_blocked_p4))

                    ; #76864: <==negation-removal== 56825 (pos)
                    (not (Ba_blocked_p4))

                    ; #80817: <==negation-removal== 42103 (pos)
                    (not (Bc_not_obss_p4))

                    ; #87209: <==negation-removal== 24359 (pos)
                    (not (not_obss_p4))

                    ; #87631: <==negation-removal== 63650 (pos)
                    (not (Pd_blocked_p4))

                    ; #91920: <==negation-removal== 46770 (pos)
                    (not (Bb_not_obss_p4))))

    (:action communcells_p9_p5_a
        :precondition (and (succ_p9_p5)
                           (at_a_p9)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p9_p5_b
        :precondition (and (succ_p9_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p9))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p9_p5_c
        :precondition (and (Bc_not_blocked_p5)
                           (succ_p9_p5)
                           (checked_p5)
                           (at_c_p9)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p9_p5_d
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p9_p5)
                           (at_d_p9)
                           (Pd_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #14190: origin
                    (Ba_not_blocked_p5)

                    ; #14974: origin
                    (Bc_not_blocked_p5)

                    ; #17016: <==closure== 37118 (pos)
                    (Pa_obss_p5)

                    ; #17873: <==closure== 55545 (pos)
                    (Pd_obss_p5)

                    ; #21519: <==closure== 25997 (pos)
                    (Pb_obss_p5)

                    ; #25997: <==commonly_known== 33587 (pos)
                    (Bb_obss_p5)

                    ; #27008: <==closure== 14974 (pos)
                    (Pc_not_blocked_p5)

                    ; #33587: origin
                    (obss_p5)

                    ; #37118: <==commonly_known== 33587 (pos)
                    (Ba_obss_p5)

                    ; #37940: <==closure== 40927 (pos)
                    (Pb_not_blocked_p5)

                    ; #40927: origin
                    (Bb_not_blocked_p5)

                    ; #45279: <==commonly_known== 33587 (pos)
                    (Bc_obss_p5)

                    ; #55545: <==commonly_known== 33587 (pos)
                    (Bd_obss_p5)

                    ; #64038: <==closure== 14190 (pos)
                    (Pa_not_blocked_p5)

                    ; #66534: <==closure== 79189 (pos)
                    (Pd_not_blocked_p5)

                    ; #73303: <==closure== 45279 (pos)
                    (Pc_obss_p5)

                    ; #79189: origin
                    (Bd_not_blocked_p5)

                    ; #13017: <==negation-removal== 14974 (pos)
                    (not (Pc_blocked_p5))

                    ; #16373: <==negation-removal== 37940 (pos)
                    (not (Bb_blocked_p5))

                    ; #18962: <==negation-removal== 21519 (pos)
                    (not (Bb_not_obss_p5))

                    ; #25974: <==negation-removal== 27008 (pos)
                    (not (Bc_blocked_p5))

                    ; #26952: <==negation-removal== 66534 (pos)
                    (not (Bd_blocked_p5))

                    ; #33187: <==negation-removal== 64038 (pos)
                    (not (Ba_blocked_p5))

                    ; #35757: <==negation-removal== 17873 (pos)
                    (not (Bd_not_obss_p5))

                    ; #44909: <==negation-removal== 33587 (pos)
                    (not (not_obss_p5))

                    ; #59068: <==negation-removal== 17016 (pos)
                    (not (Ba_not_obss_p5))

                    ; #61585: <==negation-removal== 14190 (pos)
                    (not (Pa_blocked_p5))

                    ; #64819: <==negation-removal== 40927 (pos)
                    (not (Pb_blocked_p5))

                    ; #66206: <==negation-removal== 55545 (pos)
                    (not (Pd_not_obss_p5))

                    ; #80849: <==negation-removal== 45279 (pos)
                    (not (Pc_not_obss_p5))

                    ; #86130: <==negation-removal== 37118 (pos)
                    (not (Pa_not_obss_p5))

                    ; #87932: <==negation-removal== 73303 (pos)
                    (not (Bc_not_obss_p5))

                    ; #92905: <==negation-removal== 79189 (pos)
                    (not (Pd_blocked_p5))

                    ; #94051: <==negation-removal== 25997 (pos)
                    (not (Pb_not_obss_p5))))

    (:action communcells_p9_p6_a
        :precondition (and (at_a_p9)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p9_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p9_p6_b
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p9)
                           (succ_p9_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p9_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p9)
                           (succ_p9_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p9_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p9)
                           (Bd_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6))
        :effect (and
                    ; #19993: <==commonly_known== 76391 (pos)
                    (Bc_obss_p6)

                    ; #23433: origin
                    (Ba_not_blocked_p6)

                    ; #26205: origin
                    (Bb_not_blocked_p6)

                    ; #28891: <==closure== 33209 (pos)
                    (Pd_obss_p6)

                    ; #30019: <==closure== 26205 (pos)
                    (Pb_not_blocked_p6)

                    ; #31249: <==closure== 19993 (pos)
                    (Pc_obss_p6)

                    ; #33209: <==commonly_known== 76391 (pos)
                    (Bd_obss_p6)

                    ; #35110: <==closure== 85322 (pos)
                    (Pc_not_blocked_p6)

                    ; #39670: <==commonly_known== 76391 (pos)
                    (Ba_obss_p6)

                    ; #54471: <==closure== 77118 (pos)
                    (Pd_not_blocked_p6)

                    ; #56505: <==commonly_known== 76391 (pos)
                    (Bb_obss_p6)

                    ; #62086: <==closure== 39670 (pos)
                    (Pa_obss_p6)

                    ; #76391: origin
                    (obss_p6)

                    ; #77118: origin
                    (Bd_not_blocked_p6)

                    ; #85322: origin
                    (Bc_not_blocked_p6)

                    ; #86191: <==closure== 56505 (pos)
                    (Pb_obss_p6)

                    ; #91696: <==closure== 23433 (pos)
                    (Pa_not_blocked_p6)

                    ; #21798: <==negation-removal== 85322 (pos)
                    (not (Pc_blocked_p6))

                    ; #22876: <==negation-removal== 33209 (pos)
                    (not (Pd_not_obss_p6))

                    ; #27641: <==negation-removal== 62086 (pos)
                    (not (Ba_not_obss_p6))

                    ; #34071: <==negation-removal== 31249 (pos)
                    (not (Bc_not_obss_p6))

                    ; #37927: <==negation-removal== 23433 (pos)
                    (not (Pa_blocked_p6))

                    ; #41309: <==negation-removal== 76391 (pos)
                    (not (not_obss_p6))

                    ; #43221: <==negation-removal== 28891 (pos)
                    (not (Bd_not_obss_p6))

                    ; #43256: <==negation-removal== 30019 (pos)
                    (not (Bb_blocked_p6))

                    ; #46578: <==negation-removal== 77118 (pos)
                    (not (Pd_blocked_p6))

                    ; #56279: <==negation-removal== 35110 (pos)
                    (not (Bc_blocked_p6))

                    ; #56981: <==negation-removal== 91696 (pos)
                    (not (Ba_blocked_p6))

                    ; #65146: <==negation-removal== 19993 (pos)
                    (not (Pc_not_obss_p6))

                    ; #65650: <==negation-removal== 39670 (pos)
                    (not (Pa_not_obss_p6))

                    ; #77904: <==negation-removal== 56505 (pos)
                    (not (Pb_not_obss_p6))

                    ; #79620: <==negation-removal== 26205 (pos)
                    (not (Pb_blocked_p6))

                    ; #91151: <==negation-removal== 54471 (pos)
                    (not (Bd_blocked_p6))

                    ; #96928: <==negation-removal== 86191 (pos)
                    (not (Bb_not_obss_p6))))

    (:action communcells_p9_p7_a
        :precondition (and (at_a_p9)
                           (succ_p9_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p9_p7_b
        :precondition (and (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p9_p7)
                           (at_b_p9)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p9_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p9)
                           (succ_p9_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p9_p7_d
        :precondition (and (at_d_p9)
                           (succ_p9_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #12163: <==commonly_known== 80336 (pos)
                    (Bc_obss_p7)

                    ; #15812: origin
                    (Bc_not_blocked_p7)

                    ; #18370: <==closure== 89335 (pos)
                    (Pd_obss_p7)

                    ; #20921: <==closure== 25343 (pos)
                    (Pa_obss_p7)

                    ; #22568: <==closure== 15812 (pos)
                    (Pc_not_blocked_p7)

                    ; #24886: <==closure== 66400 (pos)
                    (Pd_not_blocked_p7)

                    ; #25343: <==commonly_known== 80336 (pos)
                    (Ba_obss_p7)

                    ; #29560: <==closure== 92678 (pos)
                    (Pa_not_blocked_p7)

                    ; #47883: <==closure== 12163 (pos)
                    (Pc_obss_p7)

                    ; #57369: <==commonly_known== 80336 (pos)
                    (Bb_obss_p7)

                    ; #66400: origin
                    (Bd_not_blocked_p7)

                    ; #69807: origin
                    (Bb_not_blocked_p7)

                    ; #79881: <==closure== 69807 (pos)
                    (Pb_not_blocked_p7)

                    ; #80336: origin
                    (obss_p7)

                    ; #87019: <==closure== 57369 (pos)
                    (Pb_obss_p7)

                    ; #89335: <==commonly_known== 80336 (pos)
                    (Bd_obss_p7)

                    ; #92678: origin
                    (Ba_not_blocked_p7)

                    ; #11525: <==negation-removal== 79881 (pos)
                    (not (Bb_blocked_p7))

                    ; #15623: <==negation-removal== 47883 (pos)
                    (not (Bc_not_obss_p7))

                    ; #16272: <==negation-removal== 20921 (pos)
                    (not (Ba_not_obss_p7))

                    ; #17316: <==negation-removal== 24886 (pos)
                    (not (Bd_blocked_p7))

                    ; #19064: <==negation-removal== 12163 (pos)
                    (not (Pc_not_obss_p7))

                    ; #27383: <==negation-removal== 87019 (pos)
                    (not (Bb_not_obss_p7))

                    ; #43550: <==negation-removal== 92678 (pos)
                    (not (Pa_blocked_p7))

                    ; #50986: <==negation-removal== 25343 (pos)
                    (not (Pa_not_obss_p7))

                    ; #55771: <==negation-removal== 66400 (pos)
                    (not (Pd_blocked_p7))

                    ; #69499: <==negation-removal== 29560 (pos)
                    (not (Ba_blocked_p7))

                    ; #71071: <==negation-removal== 80336 (pos)
                    (not (not_obss_p7))

                    ; #72066: <==negation-removal== 18370 (pos)
                    (not (Bd_not_obss_p7))

                    ; #74148: <==negation-removal== 22568 (pos)
                    (not (Bc_blocked_p7))

                    ; #75277: <==negation-removal== 15812 (pos)
                    (not (Pc_blocked_p7))

                    ; #82428: <==negation-removal== 89335 (pos)
                    (not (Pd_not_obss_p7))

                    ; #91560: <==negation-removal== 69807 (pos)
                    (not (Pb_blocked_p7))

                    ; #96874: <==negation-removal== 57369 (pos)
                    (not (Pb_not_obss_p7))))

    (:action communcells_p9_p8_a
        :precondition (and (succ_p9_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p9)
                           (Ba_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p8_b
        :precondition (and (succ_p9_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p9))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p8_c
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p9_p8)
                           (at_c_p9)
                           (Bc_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p8_d
        :precondition (and (succ_p9_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p9)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #20696: <==closure== 33026 (pos)
                    (Pb_not_blocked_p8)

                    ; #23128: <==closure== 72365 (pos)
                    (Pa_obss_p8)

                    ; #25641: <==commonly_known== 53513 (pos)
                    (Bb_obss_p8)

                    ; #31401: <==closure== 66069 (pos)
                    (Pd_obss_p8)

                    ; #32070: origin
                    (Ba_not_blocked_p8)

                    ; #32353: <==closure== 50737 (pos)
                    (Pc_not_blocked_p8)

                    ; #33026: origin
                    (Bb_not_blocked_p8)

                    ; #34149: origin
                    (Bd_not_blocked_p8)

                    ; #39421: <==closure== 25641 (pos)
                    (Pb_obss_p8)

                    ; #41197: <==commonly_known== 53513 (pos)
                    (Bc_obss_p8)

                    ; #45517: <==closure== 32070 (pos)
                    (Pa_not_blocked_p8)

                    ; #49796: <==closure== 41197 (pos)
                    (Pc_obss_p8)

                    ; #50737: origin
                    (Bc_not_blocked_p8)

                    ; #53513: origin
                    (obss_p8)

                    ; #66069: <==commonly_known== 53513 (pos)
                    (Bd_obss_p8)

                    ; #72365: <==commonly_known== 53513 (pos)
                    (Ba_obss_p8)

                    ; #75088: <==closure== 34149 (pos)
                    (Pd_not_blocked_p8)

                    ; #16566: <==negation-removal== 33026 (pos)
                    (not (Pb_blocked_p8))

                    ; #18888: <==negation-removal== 25641 (pos)
                    (not (Pb_not_obss_p8))

                    ; #19128: <==negation-removal== 23128 (pos)
                    (not (Ba_not_obss_p8))

                    ; #20034: <==negation-removal== 72365 (pos)
                    (not (Pa_not_obss_p8))

                    ; #26181: <==negation-removal== 41197 (pos)
                    (not (Pc_not_obss_p8))

                    ; #37873: <==negation-removal== 39421 (pos)
                    (not (Bb_not_obss_p8))

                    ; #40170: <==negation-removal== 32070 (pos)
                    (not (Pa_blocked_p8))

                    ; #45120: <==negation-removal== 53513 (pos)
                    (not (not_obss_p8))

                    ; #46486: <==negation-removal== 31401 (pos)
                    (not (Bd_not_obss_p8))

                    ; #53496: <==negation-removal== 32353 (pos)
                    (not (Bc_blocked_p8))

                    ; #61896: <==negation-removal== 45517 (pos)
                    (not (Ba_blocked_p8))

                    ; #63755: <==negation-removal== 50737 (pos)
                    (not (Pc_blocked_p8))

                    ; #65093: <==negation-removal== 66069 (pos)
                    (not (Pd_not_obss_p8))

                    ; #66584: <==negation-removal== 20696 (pos)
                    (not (Bb_blocked_p8))

                    ; #68254: <==negation-removal== 49796 (pos)
                    (not (Bc_not_obss_p8))

                    ; #71549: <==negation-removal== 75088 (pos)
                    (not (Bd_blocked_p8))

                    ; #90634: <==negation-removal== 34149 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p9_a
        :precondition (and (checked_p9)
                           (at_a_p9)
                           (Pa_not_blocked_p9)
                           (succ_p9_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p9_p9)
                           (at_b_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p9_c
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action communcells_p9_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p9)
                           (succ_p9_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #13154: <==closure== 56650 (pos)
                    (Pb_obss_p9)

                    ; #16678: origin
                    (Ba_not_blocked_p9)

                    ; #17662: origin
                    (Bc_not_blocked_p9)

                    ; #26585: <==closure== 41647 (pos)
                    (Pb_not_blocked_p9)

                    ; #29550: <==commonly_known== 33695 (pos)
                    (Bc_obss_p9)

                    ; #33695: origin
                    (obss_p9)

                    ; #41557: <==closure== 79354 (pos)
                    (Pa_obss_p9)

                    ; #41647: origin
                    (Bb_not_blocked_p9)

                    ; #41762: <==closure== 50503 (pos)
                    (Pd_obss_p9)

                    ; #44249: <==closure== 29550 (pos)
                    (Pc_obss_p9)

                    ; #46851: origin
                    (Bd_not_blocked_p9)

                    ; #50503: <==commonly_known== 33695 (pos)
                    (Bd_obss_p9)

                    ; #56650: <==commonly_known== 33695 (pos)
                    (Bb_obss_p9)

                    ; #66277: <==closure== 16678 (pos)
                    (Pa_not_blocked_p9)

                    ; #69641: <==closure== 46851 (pos)
                    (Pd_not_blocked_p9)

                    ; #79354: <==commonly_known== 33695 (pos)
                    (Ba_obss_p9)

                    ; #88948: <==closure== 17662 (pos)
                    (Pc_not_blocked_p9)

                    ; #16352: <==negation-removal== 13154 (pos)
                    (not (Bb_not_obss_p9))

                    ; #21130: <==negation-removal== 44249 (pos)
                    (not (Bc_not_obss_p9))

                    ; #23811: <==negation-removal== 33695 (pos)
                    (not (not_obss_p9))

                    ; #25904: <==negation-removal== 69641 (pos)
                    (not (Bd_blocked_p9))

                    ; #26318: <==negation-removal== 29550 (pos)
                    (not (Pc_not_obss_p9))

                    ; #27640: <==negation-removal== 16678 (pos)
                    (not (Pa_blocked_p9))

                    ; #44020: <==negation-removal== 26585 (pos)
                    (not (Bb_blocked_p9))

                    ; #53310: <==negation-removal== 50503 (pos)
                    (not (Pd_not_obss_p9))

                    ; #61756: <==negation-removal== 17662 (pos)
                    (not (Pc_blocked_p9))

                    ; #62087: <==negation-removal== 66277 (pos)
                    (not (Ba_blocked_p9))

                    ; #73557: <==negation-removal== 41557 (pos)
                    (not (Ba_not_obss_p9))

                    ; #80552: <==negation-removal== 41762 (pos)
                    (not (Bd_not_obss_p9))

                    ; #81511: <==negation-removal== 79354 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86316: <==negation-removal== 88948 (pos)
                    (not (Bc_blocked_p9))

                    ; #88355: <==negation-removal== 56650 (pos)
                    (not (Pb_not_obss_p9))

                    ; #90725: <==negation-removal== 41647 (pos)
                    (not (Pb_blocked_p9))

                    ; #90941: <==negation-removal== 46851 (pos)
                    (not (Pd_blocked_p9))))

    (:action move_a_p0011_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (at_a_p0011)
                           (checked_p0011))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #26974: origin
                    (at_a_p0011)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #26974: origin
                    (not (at_a_p0011))))

    (:action move_a_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p0011)
                           (checked_p012))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #59416: origin
                    (at_a_p012)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p0011)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #36320: origin
                    (at_a_p1)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p0011_p10
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p0011)
                           (checked_p10)
                           (succ_p0011_p10))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #63688: origin
                    (at_a_p10)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))))

    (:action move_a_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p0011)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #70255: origin
                    (at_a_p2)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p0011_p3
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p0011)
                           (succ_p0011_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #44728: origin
                    (at_a_p3)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p0011_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #67509: origin
                    (at_a_p4)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p0011)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #45365: origin
                    (at_a_p5)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p0011_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p0011)
                           (succ_p0011_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #49556: origin
                    (at_a_p6)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p0011_p7
        :precondition (and (Ba_not_blocked_p7)
                           (at_a_p0011)
                           (succ_p0011_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #86641: origin
                    (at_a_p7)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p0011_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p0011_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p0011))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #37012: origin
                    (at_a_p8)

                    ; #26974: origin
                    (not (at_a_p0011))

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p0011_p9
        :precondition (and (checked_p9)
                           (succ_p0011_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p0011)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #21212: <==commonly_known== 26974 (neg)
                    (not_at_a_p0011)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #26974: origin
                    (not (at_a_p0011))))

    (:action move_a_p012_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p012)
                           (Ba_not_blocked_p0011)
                           (succ_p012_p0011)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #59416: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p012
        :precondition (and (at_a_p012)
                           (succ_p012_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #59416: origin
                    (at_a_p012)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #59416: origin
                    (not (at_a_p012))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p012_p1
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p012_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #59416: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p10
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p10)
                           (succ_p012_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #63688: origin
                    (at_a_p10)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #59416: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p2
        :precondition (and (at_a_p012)
                           (Ba_not_blocked_p2)
                           (succ_p012_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #70255: origin
                    (at_a_p2)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #59416: origin
                    (not (at_a_p012))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p012_p3
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #59416: origin
                    (not (at_a_p012))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p012_p4
        :precondition (and (at_a_p012)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p012_p4))
        :effect (and
                    ; #67509: origin
                    (at_a_p4)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #59416: origin
                    (not (at_a_p012))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_a_p012)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #59416: origin
                    (not (at_a_p012))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p012_p6
        :precondition (and (at_a_p012)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (succ_p012_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #49556: origin
                    (at_a_p6)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #59416: origin
                    (not (at_a_p012))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p012_p7
        :precondition (and (at_a_p012)
                           (succ_p012_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #59416: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p8
        :precondition (and (at_a_p012)
                           (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (checked_p8)
                           (succ_p012_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #59416: origin
                    (not (at_a_p012))))

    (:action move_a_p012_p9
        :precondition (and (checked_p9)
                           (at_a_p012)
                           (Pa_not_blocked_p9)
                           (succ_p012_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #76393: <==commonly_known== 59416 (neg)
                    (not_at_a_p012)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #59416: origin
                    (not (at_a_p012))))

    (:action move_a_p10_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p10)
                           (Ba_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p012
        :precondition (and (at_a_p10)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p10_p012)
                           (checked_p012))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #59416: origin
                    (at_a_p012)

                    ; #63688: origin
                    (not (at_a_p10))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p10_p1
        :precondition (and (at_a_p10)
                           (succ_p10_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #36320: origin
                    (at_a_p1)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p10
        :precondition (and (succ_p10_p10)
                           (Ba_not_blocked_p10)
                           (at_a_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #63688: origin
                    (at_a_p10)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p2
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p10)
                           (succ_p10_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #70255: origin
                    (at_a_p2)

                    ; #63688: origin
                    (not (at_a_p10))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p10_p3
        :precondition (and (succ_p10_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p10)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #44728: origin
                    (at_a_p3)

                    ; #63688: origin
                    (not (at_a_p10))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p10_p4
        :precondition (and (checked_p4)
                           (at_a_p10)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #67509: origin
                    (at_a_p4)

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p5
        :precondition (and (at_a_p10)
                           (succ_p10_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #45365: origin
                    (at_a_p5)

                    ; #63688: origin
                    (not (at_a_p10))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p10_p6
        :precondition (and (at_a_p10)
                           (checked_p6)
                           (succ_p10_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #49556: origin
                    (at_a_p6)

                    ; #63688: origin
                    (not (at_a_p10))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p10_p7
        :precondition (and (at_a_p10)
                           (succ_p10_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p8
        :precondition (and (Pa_not_blocked_p8)
                           (at_a_p10)
                           (Ba_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #37012: origin
                    (at_a_p8)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p10_p9
        :precondition (and (checked_p9)
                           (at_a_p10)
                           (Pa_not_blocked_p9)
                           (succ_p10_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #29066: <==commonly_known== 63688 (neg)
                    (not_at_a_p10)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #63688: origin
                    (not (at_a_p10))))

    (:action move_a_p1_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p1_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p1)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #36320: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p012
        :precondition (and (succ_p1_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #59416: origin
                    (at_a_p012)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p1_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #36320: origin
                    (at_a_p1)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #36320: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p10
        :precondition (and (succ_p1_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #63688: origin
                    (at_a_p10)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #36320: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p2
        :precondition (and (at_a_p1)
                           (Ba_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #70255: origin
                    (at_a_p2)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p1_p3
        :precondition (and (at_a_p1)
                           (Pa_not_blocked_p3)
                           (succ_p1_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #44728: origin
                    (at_a_p3)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p1_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #67509: origin
                    (at_a_p4)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p1_p5
        :precondition (and (checked_p5)
                           (succ_p1_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #45365: origin
                    (at_a_p5)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p1_p6
        :precondition (and (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p1_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #49556: origin
                    (at_a_p6)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #86641: origin
                    (at_a_p7)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p1_p8
        :precondition (and (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #37012: origin
                    (at_a_p8)

                    ; #36320: origin
                    (not (at_a_p1))

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p1_p9
        :precondition (and (at_a_p1)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p1_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #32745: <==commonly_known== 36320 (neg)
                    (not_at_a_p1)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #36320: origin
                    (not (at_a_p1))))

    (:action move_a_p2_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p2_p0011)
                           (at_a_p2)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p012
        :precondition (and (succ_p2_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p2)
                           (checked_p012))
        :effect (and
                    ; #59416: origin
                    (at_a_p012)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #70255: origin
                    (not (at_a_p2))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p2_p1
        :precondition (and (succ_p2_p1)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p2)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p10
        :precondition (and (succ_p2_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p2)
                           (checked_p10))
        :effect (and
                    ; #63688: origin
                    (at_a_p10)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p2
        :precondition (and (succ_p2_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #70255: origin
                    (at_a_p2)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #70255: origin
                    (not (at_a_p2))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p2_p3
        :precondition (and (succ_p2_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p2)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #70255: origin
                    (not (at_a_p2))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p2_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #67509: origin
                    (at_a_p4)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p5
        :precondition (and (succ_p2_p5)
                           (checked_p5)
                           (at_a_p2)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #70255: origin
                    (not (at_a_p2))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p2_p6
        :precondition (and (succ_p2_p6)
                           (checked_p6)
                           (at_a_p2)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #49556: origin
                    (at_a_p6)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #70255: origin
                    (not (at_a_p2))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_a_p2)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p8
        :precondition (and (Pa_not_blocked_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p9
        :precondition (and (checked_p9)
                           (succ_p2_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p2)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #71744: <==commonly_known== 70255 (neg)
                    (not_at_a_p2)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #70255: origin
                    (not (at_a_p2))))

    (:action move_a_p3_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p3)
                           (succ_p3_p0011)
                           (Ba_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #44728: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_a_p3)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #59416: origin
                    (at_a_p012)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p3_p1
        :precondition (and (at_a_p3)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #44728: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p10
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (succ_p3_p10)
                           (checked_p10))
        :effect (and
                    ; #63688: origin
                    (at_a_p10)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #44728: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p2
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #70255: origin
                    (at_a_p2)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p3_p3
        :precondition (and (at_a_p3)
                           (Pa_not_blocked_p3)
                           (succ_p3_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p3_p4
        :precondition (and (at_a_p3)
                           (checked_p4)
                           (succ_p3_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #67509: origin
                    (at_a_p4)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p3_p5
        :precondition (and (at_a_p3)
                           (succ_p3_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p3_p6
        :precondition (and (at_a_p3)
                           (succ_p3_p6)
                           (checked_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #49556: origin
                    (at_a_p6)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p3_p7
        :precondition (and (at_a_p3)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7))
        :effect (and
                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #86641: origin
                    (at_a_p7)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p3_p8
        :precondition (and (Pa_not_blocked_p8)
                           (at_a_p3)
                           (Ba_not_blocked_p8)
                           (succ_p3_p8)
                           (checked_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #44728: origin
                    (not (at_a_p3))

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p3_p9
        :precondition (and (checked_p9)
                           (at_a_p3)
                           (succ_p3_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #86420: <==commonly_known== 44728 (neg)
                    (not_at_a_p3)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #44728: origin
                    (not (at_a_p3))))

    (:action move_a_p4_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p4_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p4)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p012
        :precondition (and (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p4_p012)
                           (at_a_p4)
                           (checked_p012))
        :effect (and
                    ; #59416: origin
                    (at_a_p012)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #67509: origin
                    (not (at_a_p4))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p4_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p4_p1)
                           (at_a_p4)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p10
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p4)
                           (checked_p10)
                           (succ_p4_p10))
        :effect (and
                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #63688: origin
                    (at_a_p10)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p2
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p4)
                           (succ_p4_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #70255: origin
                    (at_a_p2)

                    ; #67509: origin
                    (not (at_a_p4))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p4_p3
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p4)
                           (checked_p3)
                           (succ_p4_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #67509: origin
                    (not (at_a_p4))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p4_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p4_p4)
                           (at_a_p4))
        :effect (and
                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #67509: origin
                    (at_a_p4)

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p5
        :precondition (and (checked_p5)
                           (succ_p4_p5)
                           (at_a_p4)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #67509: origin
                    (not (at_a_p4))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p4_p6
        :precondition (and (succ_p4_p6)
                           (checked_p6)
                           (at_a_p4)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #49556: origin
                    (at_a_p6)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #67509: origin
                    (not (at_a_p4))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p4_p7
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p7)
                           (succ_p4_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p4_p8)
                           (at_a_p4)
                           (Ba_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p9
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p4)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #59928: <==commonly_known== 67509 (neg)
                    (not_at_a_p4)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #67509: origin
                    (not (at_a_p4))))

    (:action move_a_p5_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p5_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p5)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #45365: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p012
        :precondition (and (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (succ_p5_p012)
                           (at_a_p5)
                           (checked_p012))
        :effect (and
                    ; #59416: origin
                    (at_a_p012)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p5)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #45365: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p10
        :precondition (and (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p5)
                           (succ_p5_p10)
                           (checked_p10))
        :effect (and
                    ; #63688: origin
                    (at_a_p10)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #45365: origin
                    (not (at_a_p5))))

    (:action move_a_p5_p2
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p5_p2)
                           (at_a_p5)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #70255: origin
                    (at_a_p2)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p5_p3
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p5)
                           (succ_p5_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p5))
        :effect (and
                    ; #67509: origin
                    (at_a_p4)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p5_p5
        :precondition (and (succ_p5_p5)
                           (checked_p5)
                           (at_a_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p5_p6
        :precondition (and (checked_p6)
                           (at_a_p5)
                           (Ba_not_blocked_p6)
                           (succ_p5_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #49556: origin
                    (at_a_p6)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_a_p5)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #86641: origin
                    (at_a_p7)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p5_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p5_p8)
                           (at_a_p5)
                           (Ba_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #45365: origin
                    (not (at_a_p5))

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p5_p9
        :precondition (and (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p5_p9)
                           (at_a_p5)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #87549: <==commonly_known== 45365 (neg)
                    (not_at_a_p5)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #45365: origin
                    (not (at_a_p5))))

    (:action move_a_p6_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p6_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p6)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #49556: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p012
        :precondition (and (succ_p6_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p6)
                           (checked_p012))
        :effect (and
                    ; #59416: origin
                    (at_a_p012)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #49556: origin
                    (not (at_a_p6))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p6_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (at_a_p6)
                           (succ_p6_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #49556: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p10
        :precondition (and (succ_p6_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p6)
                           (checked_p10))
        :effect (and
                    ; #63688: origin
                    (at_a_p10)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #49556: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p2
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p6_p2)
                           (at_a_p6)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #70255: origin
                    (at_a_p2)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #49556: origin
                    (not (at_a_p6))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p6_p3
        :precondition (and (succ_p6_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p6)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #49556: origin
                    (not (at_a_p6))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p6_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p6_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p6))
        :effect (and
                    ; #67509: origin
                    (at_a_p4)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #49556: origin
                    (not (at_a_p6))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p6_p5
        :precondition (and (succ_p6_p5)
                           (checked_p5)
                           (at_a_p6)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #49556: origin
                    (not (at_a_p6))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p6_p6
        :precondition (and (checked_p6)
                           (at_a_p6)
                           (succ_p6_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #49556: origin
                    (at_a_p6)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #49556: origin
                    (not (at_a_p6))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_a_p6)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #49556: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p6_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p6)
                           (checked_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #49556: origin
                    (not (at_a_p6))))

    (:action move_a_p6_p9
        :precondition (and (checked_p9)
                           (succ_p6_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p6)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #83202: <==commonly_known== 49556 (neg)
                    (not_at_a_p6)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #49556: origin
                    (not (at_a_p6))))

    (:action move_a_p7_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (checked_p0011)
                           (Ba_not_blocked_p0011)
                           (succ_p7_p0011)
                           (at_a_p7))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p012
        :precondition (and (succ_p7_p012)
                           (Ba_not_blocked_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #59416: origin
                    (at_a_p012)

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p1
        :precondition (and (Pa_not_blocked_p1)
                           (succ_p7_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p7))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p10
        :precondition (and (Ba_not_blocked_p10)
                           (succ_p7_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #63688: origin
                    (at_a_p10)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p2
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #70255: origin
                    (at_a_p2)

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p3
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3)
                           (at_a_p7))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #67509: origin
                    (at_a_p4)

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p5
        :precondition (and (succ_p7_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p7))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #86641: origin
                    (not (at_a_p7))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p7_p6
        :precondition (and (checked_p6)
                           (succ_p7_p6)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #49556: origin
                    (at_a_p6)

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p7
        :precondition (and (succ_p7_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p8
        :precondition (and (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8)
                           (at_a_p7))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p9
        :precondition (and (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p7_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p7))
        :effect (and
                    ; #46322: <==commonly_known== 86641 (neg)
                    (not_at_a_p7)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #86641: origin
                    (not (at_a_p7))))

    (:action move_a_p8_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Ba_not_blocked_p0011)
                           (at_a_p8)
                           (checked_p0011))
        :effect (and
                    ; #26974: origin
                    (at_a_p0011)

                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #37012: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p012
        :precondition (and (Ba_not_blocked_p012)
                           (succ_p8_p012)
                           (Pa_not_blocked_p012)
                           (at_a_p8)
                           (checked_p012))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #59416: origin
                    (at_a_p012)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))))

    (:action move_a_p8_p1
        :precondition (and (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1)
                           (at_a_p8)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #36320: origin
                    (at_a_p1)

                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #37012: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p10
        :precondition (and (succ_p8_p10)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (at_a_p8)
                           (checked_p10))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #63688: origin
                    (at_a_p10)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #37012: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p2
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p8_p2)
                           (at_a_p8)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #70255: origin
                    (at_a_p2)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p8_p3
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #44728: origin
                    (at_a_p3)

                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p8_p4
        :precondition (and (checked_p4)
                           (Pa_not_blocked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #67509: origin
                    (at_a_p4)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p8_p5
        :precondition (and (succ_p8_p5)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p8)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #45365: origin
                    (at_a_p5)

                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (checked_p6)
                           (at_a_p8)
                           (Ba_not_blocked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #49556: origin
                    (at_a_p6)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p8_p7
        :precondition (and (at_a_p8)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #86641: origin
                    (at_a_p7)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p8))
        :effect (and
                    ; #37012: origin
                    (at_a_p8)

                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #37012: origin
                    (not (at_a_p8))

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p8_p9
        :precondition (and (checked_p9)
                           (succ_p8_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p8)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #47921: <==commonly_known== 37012 (neg)
                    (not_at_a_p8)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #37012: origin
                    (not (at_a_p8))))

    (:action move_a_p9_p0011
        :precondition (and (Pa_not_blocked_p0011)
                           (at_a_p9)
                           (Ba_not_blocked_p0011)
                           (succ_p9_p0011)
                           (checked_p0011))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #26974: origin
                    (at_a_p0011)

                    ; #21212: <==negation-removal== 26974 (pos)
                    (not (not_at_a_p0011))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p012
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p012)
                           (succ_p9_p012)
                           (Pa_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #59416: origin
                    (at_a_p012)

                    ; #76393: <==negation-removal== 59416 (pos)
                    (not (not_at_a_p012))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p1
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #36320: origin
                    (at_a_p1)

                    ; #32745: <==negation-removal== 36320 (pos)
                    (not (not_at_a_p1))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p10
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p10)
                           (Pa_not_blocked_p10)
                           (checked_p10)
                           (succ_p9_p10))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #63688: origin
                    (at_a_p10)

                    ; #29066: <==negation-removal== 63688 (pos)
                    (not (not_at_a_p10))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p2
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p9)
                           (succ_p9_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #70255: origin
                    (at_a_p2)

                    ; #71744: <==negation-removal== 70255 (pos)
                    (not (not_at_a_p2))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p3
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p3)
                           (succ_p9_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #44728: origin
                    (at_a_p3)

                    ; #86420: <==negation-removal== 44728 (pos)
                    (not (not_at_a_p3))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p4
        :precondition (and (at_a_p9)
                           (succ_p9_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #67509: origin
                    (at_a_p4)

                    ; #59928: <==negation-removal== 67509 (pos)
                    (not (not_at_a_p4))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_a_p9)
                           (checked_p5)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #45365: origin
                    (at_a_p5)

                    ; #87549: <==negation-removal== 45365 (pos)
                    (not (not_at_a_p5))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p6
        :precondition (and (at_a_p9)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (succ_p9_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #49556: origin
                    (at_a_p6)

                    ; #83202: <==negation-removal== 49556 (pos)
                    (not (not_at_a_p6))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p7
        :precondition (and (at_a_p9)
                           (succ_p9_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #86641: origin
                    (at_a_p7)

                    ; #46322: <==negation-removal== 86641 (pos)
                    (not (not_at_a_p7))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p8
        :precondition (and (succ_p9_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p9)
                           (Ba_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #37012: origin
                    (at_a_p8)

                    ; #47921: <==negation-removal== 37012 (pos)
                    (not (not_at_a_p8))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p9
        :precondition (and (checked_p9)
                           (at_a_p9)
                           (Pa_not_blocked_p9)
                           (succ_p9_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #10759: <==commonly_known== 95360 (neg)
                    (not_at_a_p9)

                    ; #95360: origin
                    (at_a_p9)

                    ; #10759: <==negation-removal== 95360 (pos)
                    (not (not_at_a_p9))

                    ; #95360: origin
                    (not (at_a_p9))))

    (:action move_b_p0011_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p0011)
                           (succ_p0011_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p0011)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #61527: origin
                    (at_b_p012)

                    ; #42904: origin
                    (not (at_b_p0011))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p0011)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p10
        :precondition (and (at_b_p0011)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (succ_p0011_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p0011)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p3
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p0011)
                           (Bb_not_blocked_p3)
                           (succ_p0011_p3)
                           (checked_p3))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #51767: origin
                    (at_b_p3)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p0011)
                           (Bb_not_blocked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #39741: origin
                    (at_b_p4)

                    ; #42904: origin
                    (not (at_b_p0011))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p0011))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #78315: origin
                    (at_b_p5)

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p0011_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p0011)
                           (succ_p0011_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #42904: origin
                    (not (at_b_p0011))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p0011_p7
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p0011)
                           (Pb_not_blocked_p7)
                           (succ_p0011_p7)
                           (checked_p7))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #90496: origin
                    (at_b_p7)

                    ; #42904: origin
                    (not (at_b_p0011))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p0011_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p0011_p8)
                           (at_b_p0011)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #32027: origin
                    (at_b_p8)

                    ; #42904: origin
                    (not (at_b_p0011))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p0011_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p0011_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p0011))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #30314: <==commonly_known== 42904 (neg)
                    (not_at_b_p0011)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #42904: origin
                    (not (at_b_p0011))))

    (:action move_b_p012_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p012)
                           (succ_p012_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #42904: origin
                    (at_b_p0011)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_b_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #61527: origin
                    (at_b_p012)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #61527: origin
                    (not (at_b_p012))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p012_p1
        :precondition (and (at_b_p012)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p012_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_b_p012)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_b_p012)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p3
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p012)
                           (Bb_not_blocked_p3)
                           (succ_p012_p3)
                           (checked_p3))
        :effect (and
                    ; #51767: origin
                    (at_b_p3)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p012)
                           (Bb_not_blocked_p4)
                           (succ_p012_p4))
        :effect (and
                    ; #39741: origin
                    (at_b_p4)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #61527: origin
                    (not (at_b_p012))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p012_p5
        :precondition (and (succ_p012_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p012)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #78315: origin
                    (at_b_p5)

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p012_p6
        :precondition (and (Bb_not_blocked_p6)
                           (at_b_p012)
                           (checked_p6)
                           (succ_p012_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #61527: origin
                    (not (at_b_p012))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p012_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p012_p7)
                           (at_b_p012)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #90496: origin
                    (at_b_p7)

                    ; #61527: origin
                    (not (at_b_p012))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p012_p8
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p012)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p012_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #61527: origin
                    (not (at_b_p012))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p012_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p012)
                           (succ_p012_p9))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #77196: <==commonly_known== 61527 (neg)
                    (not_at_b_p012)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #61527: origin
                    (not (at_b_p012))))

    (:action move_b_p10_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p10_p0011)
                           (at_b_p10)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p10_p012
        :precondition (and (checked_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (succ_p10_p012)
                           (at_b_p10))
        :effect (and
                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #61527: origin
                    (at_b_p012)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p10_p1
        :precondition (and (succ_p10_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p10)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p10_p10
        :precondition (and (succ_p10_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p10_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p10_p2)
                           (at_b_p10)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p10_p3
        :precondition (and (succ_p10_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3)
                           (at_b_p10))
        :effect (and
                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #51767: origin
                    (at_b_p3)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p10_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p10_p4)
                           (at_b_p10))
        :effect (and
                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #39741: origin
                    (at_b_p4)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p10_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p10))
        :effect (and
                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #78315: origin
                    (at_b_p5)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p10_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p10_p6)
                           (at_b_p10)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p10_p7
        :precondition (and (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p10_p7)
                           (at_b_p10)
                           (checked_p7))
        :effect (and
                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #90496: origin
                    (at_b_p7)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p10_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p10))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p10_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p10_p9)
                           (at_b_p10))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #35670: <==commonly_known== 10735 (neg)
                    (not_at_b_p10)

                    ; #10735: origin
                    (not (at_b_p10))

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p1_p0011
        :precondition (and (at_b_p1)
                           (succ_p1_p0011)
                           (Pb_not_blocked_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p1_p012
        :precondition (and (at_b_p1)
                           (succ_p1_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #61527: origin
                    (at_b_p012)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p1_p1
        :precondition (and (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p1_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p1_p10
        :precondition (and (at_b_p1)
                           (succ_p1_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p1_p2
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p1_p3
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p3)
                           (succ_p1_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #51767: origin
                    (at_b_p3)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p1_p4
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p1_p4))
        :effect (and
                    ; #39741: origin
                    (at_b_p4)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p1_p5
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p1_p5))
        :effect (and
                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #78315: origin
                    (at_b_p5)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p1_p6
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p1_p7
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p7)
                           (succ_p1_p7)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #90496: origin
                    (at_b_p7)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p1_p8
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p1_p9
        :precondition (and (at_b_p1)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #41071: <==commonly_known== 17402 (neg)
                    (not_at_b_p1)

                    ; #17402: origin
                    (not (at_b_p1))

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p2_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p2)
                           (succ_p2_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_b_p2)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #61527: origin
                    (at_b_p012)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_b_p2)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_b_p2)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_b_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #51767: origin
                    (at_b_p3)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #28913: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p4
        :precondition (and (Pb_not_blocked_p4)
                           (at_b_p2)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #39741: origin
                    (at_b_p4)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p2_p5
        :precondition (and (at_b_p2)
                           (Bb_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #78315: origin
                    (at_b_p5)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p2_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p2_p7)
                           (at_b_p2)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #90496: origin
                    (at_b_p7)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p2_p8
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p2)
                           (succ_p2_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #28913: origin
                    (not (at_b_p2))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p2_p9
        :precondition (and (checked_p9)
                           (at_b_p2)
                           (Bb_not_blocked_p9)
                           (succ_p2_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #36287: <==commonly_known== 28913 (neg)
                    (not_at_b_p2)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #28913: origin
                    (not (at_b_p2))))

    (:action move_b_p3_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p3_p0011)
                           (at_b_p3)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p012
        :precondition (and (succ_p3_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (at_b_p3)
                           (checked_p012))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #61527: origin
                    (at_b_p012)

                    ; #51767: origin
                    (not (at_b_p3))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p3_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p3)
                           (succ_p3_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p10
        :precondition (and (checked_p10)
                           (Bb_not_blocked_p10)
                           (succ_p3_p10)
                           (at_b_p3)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p3_p2)
                           (at_b_p3)
                           (checked_p2))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #28913: origin
                    (at_b_p2)

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p3
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p3_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p3))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #51767: origin
                    (at_b_p3)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (succ_p3_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p3))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #39741: origin
                    (at_b_p4)

                    ; #51767: origin
                    (not (at_b_p3))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p3_p5
        :precondition (and (Bb_not_blocked_p5)
                           (succ_p3_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p3))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #78315: origin
                    (at_b_p5)

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p3)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #51767: origin
                    (not (at_b_p3))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p3_p7
        :precondition (and (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p3)
                           (succ_p3_p7)
                           (checked_p7))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #90496: origin
                    (at_b_p7)

                    ; #51767: origin
                    (not (at_b_p3))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p3_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p3_p8)
                           (checked_p8)
                           (at_b_p3)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #32027: origin
                    (at_b_p8)

                    ; #51767: origin
                    (not (at_b_p3))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p3_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p3_p9)
                           (at_b_p3))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #20775: <==commonly_known== 51767 (neg)
                    (not_at_b_p3)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #51767: origin
                    (not (at_b_p3))))

    (:action move_b_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (Pb_not_blocked_p0011)
                           (at_b_p4)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #42904: origin
                    (at_b_p0011)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #39741: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p012
        :precondition (and (Pb_not_blocked_p012)
                           (succ_p4_p012)
                           (at_b_p4)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #61527: origin
                    (at_b_p012)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #39741: origin
                    (not (at_b_p4))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p4_p1
        :precondition (and (checked_p1)
                           (succ_p4_p1)
                           (at_b_p4)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #39741: origin
                    (not (at_b_p4))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p4_p10
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p10)
                           (succ_p4_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))

                    ; #39741: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))

                    ; #39741: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p3
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p4)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #51767: origin
                    (at_b_p3)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #39741: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p4)
                           (Bb_not_blocked_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #39741: origin
                    (at_b_p4)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #39741: origin
                    (not (at_b_p4))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p4_p5
        :precondition (and (Bb_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p4))
        :effect (and
                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #78315: origin
                    (at_b_p5)

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))

                    ; #39741: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p6
        :precondition (and (succ_p4_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p4)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #39741: origin
                    (not (at_b_p4))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p4_p7
        :precondition (and (Bb_not_blocked_p7)
                           (at_b_p4)
                           (Pb_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7))
        :effect (and
                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #90496: origin
                    (at_b_p7)

                    ; #39741: origin
                    (not (at_b_p4))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p4_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p4_p8)
                           (at_b_p4)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #39741: origin
                    (not (at_b_p4))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p4_p9
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p4))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #62406: <==commonly_known== 39741 (neg)
                    (not_at_b_p4)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #39741: origin
                    (not (at_b_p4))))

    (:action move_b_p5_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p5_p0011)
                           (at_b_p5)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p012
        :precondition (and (Pb_not_blocked_p012)
                           (succ_p5_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p5))
        :effect (and
                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #61527: origin
                    (at_b_p012)

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p1
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p5)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p10
        :precondition (and (Bb_not_blocked_p10)
                           (succ_p5_p10)
                           (checked_p10)
                           (at_b_p5)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p2
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p5_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p5)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p3
        :precondition (and (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (succ_p5_p3)
                           (checked_p3)
                           (at_b_p5))
        :effect (and
                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #51767: origin
                    (at_b_p3)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p4
        :precondition (and (Pb_not_blocked_p4)
                           (succ_p5_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5))
        :effect (and
                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #39741: origin
                    (at_b_p4)

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p5
        :precondition (and (succ_p5_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p5))
        :effect (and
                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #78315: origin
                    (at_b_p5)

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p6
        :precondition (and (at_b_p5)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p5_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #78315: origin
                    (not (at_b_p5))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p5_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p5_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p5)
                           (checked_p7))
        :effect (and
                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #90496: origin
                    (at_b_p7)

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p5_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p5))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p5_p9)
                           (at_b_p5))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #35264: <==commonly_known== 78315 (neg)
                    (not_at_b_p5)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #78315: origin
                    (not (at_b_p5))))

    (:action move_b_p6_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p6_p0011)
                           (at_b_p6)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #42904: origin
                    (at_b_p0011)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_b_p6)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #61527: origin
                    (at_b_p012)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p6_p1
        :precondition (and (at_b_p6)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p6_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_b_p6)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_b_p6)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p6_p3
        :precondition (and (succ_p6_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p6)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #51767: origin
                    (at_b_p3)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p6_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (at_b_p6)
                           (succ_p6_p4)
                           (Bb_not_blocked_p4))
        :effect (and
                    ; #39741: origin
                    (at_b_p4)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p6_p5
        :precondition (and (Bb_not_blocked_p5)
                           (at_b_p6)
                           (succ_p6_p5)
                           (Pb_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #78315: origin
                    (at_b_p5)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p6_p6
        :precondition (and (Bb_not_blocked_p6)
                           (at_b_p6)
                           (checked_p6)
                           (succ_p6_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p6_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p6_p7)
                           (at_b_p6)
                           (Pb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #90496: origin
                    (at_b_p7)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p6_p8
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p6)
                           (succ_p6_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #19080: origin
                    (not (at_b_p6))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p6_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #80227: <==commonly_known== 19080 (neg)
                    (not_at_b_p6)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #19080: origin
                    (not (at_b_p6))))

    (:action move_b_p7_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (at_b_p7)
                           (succ_p7_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #42904: origin
                    (at_b_p0011)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p012
        :precondition (and (succ_p7_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012)
                           (at_b_p7))
        :effect (and
                    ; #61527: origin
                    (at_b_p012)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p1
        :precondition (and (checked_p1)
                           (succ_p7_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p7)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p10
        :precondition (and (succ_p7_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (at_b_p7)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p3
        :precondition (and (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3)
                           (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #51767: origin
                    (at_b_p3)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p4
        :precondition (and (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #39741: origin
                    (at_b_p4)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p5
        :precondition (and (succ_p7_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p7))
        :effect (and
                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #78315: origin
                    (at_b_p5)

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (succ_p7_p6)
                           (at_b_p7)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p7
        :precondition (and (Bb_not_blocked_p7)
                           (succ_p7_p7)
                           (Pb_not_blocked_p7)
                           (at_b_p7)
                           (checked_p7))
        :effect (and
                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #90496: origin
                    (at_b_p7)

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p8
        :precondition (and (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p7_p9)
                           (at_b_p7))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #71637: <==commonly_known== 90496 (neg)
                    (not_at_b_p7)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #90496: origin
                    (not (at_b_p7))))

    (:action move_b_p8_p0011
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #42904: origin
                    (at_b_p0011)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))

                    ; #32027: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p012
        :precondition (and (at_b_p8)
                           (succ_p8_p012)
                           (Pb_not_blocked_p012)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #61527: origin
                    (at_b_p012)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p8_p1
        :precondition (and (at_b_p8)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p8_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p8_p10
        :precondition (and (at_b_p8)
                           (succ_p8_p10)
                           (Bb_not_blocked_p10)
                           (checked_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p8_p2
        :precondition (and (at_b_p8)
                           (succ_p8_p2)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #28913: origin
                    (at_b_p2)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p8_p3
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (succ_p8_p3)
                           (checked_p3))
        :effect (and
                    ; #51767: origin
                    (at_b_p3)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))

                    ; #32027: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p4
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p8_p4))
        :effect (and
                    ; #39741: origin
                    (at_b_p4)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p8_p5
        :precondition (and (at_b_p8)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #78315: origin
                    (at_b_p5)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p8_p6
        :precondition (and (at_b_p8)
                           (succ_p8_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #19080: origin
                    (at_b_p6)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p8_p7
        :precondition (and (at_b_p8)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #90496: origin
                    (at_b_p7)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p8_p8
        :precondition (and (at_b_p8)
                           (succ_p8_p8)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #32027: origin
                    (at_b_p8)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #32027: origin
                    (not (at_b_p8))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p8_p9
        :precondition (and (at_b_p8)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (succ_p8_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #18627: origin
                    (at_b_p9)

                    ; #68146: <==commonly_known== 32027 (neg)
                    (not_at_b_p8)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #32027: origin
                    (not (at_b_p8))))

    (:action move_b_p9_p0011
        :precondition (and (Pb_not_blocked_p0011)
                           (succ_p9_p0011)
                           (at_b_p9)
                           (Bb_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #42904: origin
                    (at_b_p0011)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #30314: <==negation-removal== 42904 (pos)
                    (not (not_at_b_p0011))))

    (:action move_b_p9_p012
        :precondition (and (succ_p9_p012)
                           (Pb_not_blocked_p012)
                           (at_b_p9)
                           (Bb_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #61527: origin
                    (at_b_p012)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #77196: <==negation-removal== 61527 (pos)
                    (not (not_at_b_p012))))

    (:action move_b_p9_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (at_b_p9)
                           (succ_p9_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #17402: origin
                    (at_b_p1)

                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #41071: <==negation-removal== 17402 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p9_p10
        :precondition (and (Bb_not_blocked_p10)
                           (at_b_p9)
                           (checked_p10)
                           (succ_p9_p10)
                           (Pb_not_blocked_p10))
        :effect (and
                    ; #10735: origin
                    (at_b_p10)

                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #35670: <==negation-removal== 10735 (pos)
                    (not (not_at_b_p10))))

    (:action move_b_p9_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #28913: origin
                    (at_b_p2)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #36287: <==negation-removal== 28913 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p9_p3
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p9_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p9)
                           (checked_p3))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #51767: origin
                    (at_b_p3)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #20775: <==negation-removal== 51767 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p9_p4
        :precondition (and (Pb_not_blocked_p4)
                           (succ_p9_p4)
                           (checked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p9))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #39741: origin
                    (at_b_p4)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #62406: <==negation-removal== 39741 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p9_p5
        :precondition (and (succ_p9_p5)
                           (Bb_not_blocked_p5)
                           (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p9))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #78315: origin
                    (at_b_p5)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #35264: <==negation-removal== 78315 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p9_p6
        :precondition (and (Bb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p9)
                           (succ_p9_p6)
                           (Pb_not_blocked_p6))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #19080: origin
                    (at_b_p6)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #80227: <==negation-removal== 19080 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p9_p7
        :precondition (and (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7)
                           (succ_p9_p7)
                           (at_b_p9)
                           (checked_p7))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #90496: origin
                    (at_b_p7)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #71637: <==negation-removal== 90496 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p9_p8
        :precondition (and (succ_p9_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p9))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #32027: origin
                    (at_b_p8)

                    ; #18627: origin
                    (not (at_b_p9))

                    ; #68146: <==negation-removal== 32027 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p9_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p9_p9)
                           (at_b_p9))
        :effect (and
                    ; #17648: <==commonly_known== 18627 (neg)
                    (not_at_b_p9)

                    ; #18627: origin
                    (at_b_p9)

                    ; #17648: <==negation-removal== 18627 (pos)
                    (not (not_at_b_p9))

                    ; #18627: origin
                    (not (at_b_p9))))

    (:action move_c_p0011_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p0011_p0011)
                           (at_c_p0011)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p0011)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #35297: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p1
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p0011_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p0011))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #35297: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p10
        :precondition (and (Pc_not_blocked_p10)
                           (at_c_p0011)
                           (checked_p10)
                           (succ_p0011_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #57259: origin
                    (at_c_p10)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p0011)
                           (checked_p2))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #85291: origin
                    (at_c_p2)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p0011_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p0011)
                           (succ_p0011_p3)
                           (checked_p3))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #91348: origin
                    (at_c_p3)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p0011_p4
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p0011)
                           (Pc_not_blocked_p4)
                           (succ_p0011_p4))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #35297: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p5
        :precondition (and (Bc_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p0011))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #35297: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p6
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p0011)
                           (succ_p0011_p6)
                           (checked_p6))
        :effect (and
                    ; #49258: origin
                    (at_c_p6)

                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p0011_p7
        :precondition (and (at_c_p0011)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p0011_p7)
                           (checked_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #35297: origin
                    (not (at_c_p0011))))

    (:action move_c_p0011_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p0011_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p0011))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #82570: origin
                    (at_c_p8)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p0011_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p0011_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p0011))
        :effect (and
                    ; #54692: <==commonly_known== 35297 (neg)
                    (not_at_c_p0011)

                    ; #70705: origin
                    (at_c_p9)

                    ; #35297: origin
                    (not (at_c_p0011))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p012_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p012)
                           (succ_p012_p0011)
                           (checked_p0011))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #35297: origin
                    (at_c_p0011)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_c_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p012)
                           (Bc_not_blocked_p1)
                           (succ_p012_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_c_p012)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #57259: origin
                    (at_c_p10)

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_c_p012)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p012)
                           (succ_p012_p3)
                           (checked_p3))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #91348: origin
                    (at_c_p3)

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p4
        :precondition (and (checked_p4)
                           (at_c_p012)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p012_p4))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #40526: origin
                    (at_c_p4)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p5
        :precondition (and (succ_p012_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (at_c_p012)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p6
        :precondition (and (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p012)
                           (succ_p012_p6)
                           (checked_p6))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #49258: origin
                    (at_c_p6)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p7
        :precondition (and (succ_p012_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p012)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #23103: origin
                    (at_c_p7)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p8
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p012)
                           (checked_p8)
                           (succ_p012_p8))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #82570: origin
                    (at_c_p8)

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))

                    ; #87605: origin
                    (not (at_c_p012))))

    (:action move_c_p012_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p012)
                           (succ_p012_p9))
        :effect (and
                    ; #22631: <==commonly_known== 87605 (neg)
                    (not_at_c_p012)

                    ; #70705: origin
                    (at_c_p9)

                    ; #87605: origin
                    (not (at_c_p012))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p10_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p10)
                           (Bc_not_blocked_p0011)
                           (succ_p10_p0011)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p012
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (succ_p10_p012)
                           (checked_p012))
        :effect (and
                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p1
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p1)
                           (succ_p10_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p10
        :precondition (and (at_c_p10)
                           (succ_p10_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #57259: origin
                    (at_c_p10)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #57259: origin
                    (not (at_c_p10))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p10_p2
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p10_p2)
                           (checked_p2))
        :effect (and
                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_c_p10)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #91348: origin
                    (at_c_p3)

                    ; #57259: origin
                    (not (at_c_p10))

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p10_p4
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p10_p4))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p5
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #64822: origin
                    (at_c_p5)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p6
        :precondition (and (at_c_p10)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p10_p6)
                           (checked_p6))
        :effect (and
                    ; #49258: origin
                    (at_c_p6)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p7
        :precondition (and (at_c_p10)
                           (Pc_not_blocked_p7)
                           (succ_p10_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #57259: origin
                    (not (at_c_p10))))

    (:action move_c_p10_p8
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p10)
                           (Bc_not_blocked_p8)
                           (succ_p10_p8)
                           (checked_p8))
        :effect (and
                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #82570: origin
                    (at_c_p8)

                    ; #57259: origin
                    (not (at_c_p10))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p10_p9
        :precondition (and (checked_p9)
                           (at_c_p10)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #70705: origin
                    (at_c_p9)

                    ; #75090: <==commonly_known== 57259 (neg)
                    (not_at_c_p10)

                    ; #57259: origin
                    (not (at_c_p10))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p1_p0011
        :precondition (and (at_c_p1)
                           (succ_p1_p0011)
                           (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #35297: origin
                    (at_c_p0011)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p1_p012
        :precondition (and (at_c_p1)
                           (succ_p1_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #87605: origin
                    (at_c_p012)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))))

    (:action move_c_p1_p1
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p1_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p1_p10
        :precondition (and (at_c_p1)
                           (succ_p1_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #57259: origin
                    (at_c_p10)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p1_p2
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p2)
                           (succ_p1_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #85291: origin
                    (at_c_p2)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p1_p3
        :precondition (and (at_c_p1)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p1_p3)
                           (checked_p3))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #91348: origin
                    (at_c_p3)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p1_p4
        :precondition (and (at_c_p1)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p1_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #40526: origin
                    (at_c_p4)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p1_p5
        :precondition (and (at_c_p1)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (succ_p1_p5))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #64822: origin
                    (at_c_p5)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p1_p6
        :precondition (and (at_c_p1)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p1_p6)
                           (checked_p6))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #49258: origin
                    (at_c_p6)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p1_p7
        :precondition (and (at_c_p1)
                           (succ_p1_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #23103: origin
                    (at_c_p7)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #13053: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p8
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #82570: origin
                    (at_c_p8)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p1_p9
        :precondition (and (at_c_p1)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p1_p9))
        :effect (and
                    ; #19632: <==commonly_known== 13053 (neg)
                    (not_at_c_p1)

                    ; #70705: origin
                    (at_c_p9)

                    ; #13053: origin
                    (not (at_c_p1))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p2_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (succ_p2_p0011)
                           (at_c_p2)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p012
        :precondition (and (succ_p2_p012)
                           (Pc_not_blocked_p012)
                           (at_c_p2)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p1
        :precondition (and (succ_p2_p1)
                           (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p2)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p10
        :precondition (and (succ_p2_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p2)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #57259: origin
                    (at_c_p10)

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p2
        :precondition (and (succ_p2_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p2)
                           (checked_p2))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p3
        :precondition (and (Bc_not_blocked_p3)
                           (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p2)
                           (checked_p3))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #91348: origin
                    (at_c_p3)

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p4
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p2)
                           (Pc_not_blocked_p4)
                           (succ_p2_p4))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p5
        :precondition (and (Bc_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p2))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p2)
                           (checked_p6))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #49258: origin
                    (at_c_p6)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p7
        :precondition (and (succ_p2_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p2)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p8
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p2_p8)
                           (at_c_p2)
                           (checked_p8))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #82570: origin
                    (at_c_p8)

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))

                    ; #85291: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p2_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p2))
        :effect (and
                    ; #44456: <==commonly_known== 85291 (neg)
                    (not_at_c_p2)

                    ; #70705: origin
                    (at_c_p9)

                    ; #85291: origin
                    (not (at_c_p2))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p3_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p3)
                           (succ_p3_p0011)
                           (Bc_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_c_p3)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p1
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p3)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p10
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p10)
                           (succ_p3_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #57259: origin
                    (at_c_p10)

                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p2
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2))
        :effect (and
                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p3)
                           (succ_p3_p3)
                           (checked_p3))
        :effect (and
                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #91348: origin
                    (at_c_p3)

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p4
        :precondition (and (at_c_p3)
                           (succ_p3_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p5
        :precondition (and (Bc_not_blocked_p5)
                           (at_c_p3)
                           (succ_p3_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_c_p3)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #49258: origin
                    (at_c_p6)

                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p7
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p8
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p3)
                           (Bc_not_blocked_p8)
                           (succ_p3_p8)
                           (checked_p8))
        :effect (and
                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #82570: origin
                    (at_c_p8)

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9)
                           (Bc_not_blocked_p9))
        :effect (and
                    ; #59041: <==commonly_known== 91348 (neg)
                    (not_at_c_p3)

                    ; #70705: origin
                    (at_c_p9)

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))

                    ; #91348: origin
                    (not (at_c_p3))))

    (:action move_c_p4_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p4_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p4)
                           (checked_p0011))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #35297: origin
                    (at_c_p0011)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p4_p012
        :precondition (and (succ_p4_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #40526: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p4_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p4))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #40526: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p10
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10)
                           (succ_p4_p10))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #57259: origin
                    (at_c_p10)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p4_p2
        :precondition (and (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p4_p2)
                           (checked_p2)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #85291: origin
                    (at_c_p2)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p4_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #91348: origin
                    (at_c_p3)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p4_p4
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #40526: origin
                    (at_c_p4)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #40526: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p5
        :precondition (and (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #40526: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #49258: origin
                    (at_c_p6)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p4_p7
        :precondition (and (checked_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p4_p7)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #23103: origin
                    (at_c_p7)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #40526: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p4_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #82570: origin
                    (at_c_p8)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p4_p9
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p4))
        :effect (and
                    ; #15008: <==commonly_known== 40526 (neg)
                    (not_at_c_p4)

                    ; #70705: origin
                    (at_c_p9)

                    ; #40526: origin
                    (not (at_c_p4))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p5_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p5_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p5)
                           (checked_p0011))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #35297: origin
                    (at_c_p0011)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p012
        :precondition (and (Pc_not_blocked_p012)
                           (succ_p5_p012)
                           (at_c_p5)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p1
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p5_p1)
                           (checked_p1)
                           (at_c_p5)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p10
        :precondition (and (succ_p5_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p5)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #57259: origin
                    (at_c_p10)

                    ; #64822: origin
                    (not (at_c_p5))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p5_p2
        :precondition (and (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p5_p2)
                           (at_c_p5)
                           (checked_p2))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p5)
                           (succ_p5_p3)
                           (checked_p3))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #91348: origin
                    (at_c_p3)

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p4
        :precondition (and (succ_p5_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p5)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #40526: origin
                    (at_c_p4)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p5
        :precondition (and (succ_p5_p5)
                           (Bc_not_blocked_p5)
                           (checked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p5))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p6
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p5)
                           (succ_p5_p6)
                           (checked_p6))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #49258: origin
                    (at_c_p6)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p7
        :precondition (and (succ_p5_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p5)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #23103: origin
                    (at_c_p7)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #64822: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p5_p8)
                           (Bc_not_blocked_p8)
                           (at_c_p5)
                           (checked_p8))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #82570: origin
                    (at_c_p8)

                    ; #64822: origin
                    (not (at_c_p5))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p5_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p5_p9)
                           (at_c_p5))
        :effect (and
                    ; #19134: <==commonly_known== 64822 (neg)
                    (not_at_c_p5)

                    ; #70705: origin
                    (at_c_p9)

                    ; #64822: origin
                    (not (at_c_p5))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p6_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p6_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p6)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #49258: origin
                    (not (at_c_p6))

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p6_p012
        :precondition (and (succ_p6_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p6))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #49258: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #49258: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p10
        :precondition (and (succ_p6_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10)
                           (at_c_p6))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #57259: origin
                    (at_c_p10)

                    ; #49258: origin
                    (not (at_c_p6))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p6_p2
        :precondition (and (succ_p6_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p6)
                           (checked_p2))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #49258: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3)
                           (at_c_p6))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #91348: origin
                    (at_c_p3)

                    ; #49258: origin
                    (not (at_c_p6))

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p6_p4
        :precondition (and (checked_p4)
                           (succ_p6_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p6))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #49258: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p5
        :precondition (and (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p6_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p6))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #49258: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p6
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p6_p6)
                           (at_c_p6)
                           (checked_p6))
        :effect (and
                    ; #49258: origin
                    (at_c_p6)

                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #49258: origin
                    (not (at_c_p6))

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p6_p7
        :precondition (and (succ_p6_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p6)
                           (checked_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #49258: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p8
        :precondition (and (Pc_not_blocked_p8)
                           (Bc_not_blocked_p8)
                           (succ_p6_p8)
                           (checked_p8)
                           (at_c_p6))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #82570: origin
                    (at_c_p8)

                    ; #49258: origin
                    (not (at_c_p6))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p6_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (at_c_p6))
        :effect (and
                    ; #55014: <==commonly_known== 49258 (neg)
                    (not_at_c_p6)

                    ; #70705: origin
                    (at_c_p9)

                    ; #49258: origin
                    (not (at_c_p6))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p7_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (at_c_p7)
                           (Bc_not_blocked_p0011)
                           (succ_p7_p0011)
                           (checked_p0011))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #35297: origin
                    (at_c_p0011)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))))

    (:action move_c_p7_p012
        :precondition (and (at_c_p7)
                           (succ_p7_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #23103: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p1
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p7)
                           (checked_p1)
                           (succ_p7_p1)
                           (Bc_not_blocked_p1))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #13053: origin
                    (at_c_p1)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #23103: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p10
        :precondition (and (at_c_p7)
                           (succ_p7_p10)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #57259: origin
                    (at_c_p10)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p7_p2
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (checked_p2)
                           (succ_p7_p2))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #85291: origin
                    (at_c_p2)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p7_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p7)
                           (checked_p3)
                           (succ_p7_p3))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #91348: origin
                    (at_c_p3)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p7_p4
        :precondition (and (at_c_p7)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p7_p4))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #40526: origin
                    (at_c_p4)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #23103: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p5
        :precondition (and (succ_p7_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p7)
                           (checked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #64822: origin
                    (at_c_p5)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #23103: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p6
        :precondition (and (at_c_p7)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (succ_p7_p6)
                           (checked_p6))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #49258: origin
                    (at_c_p6)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p7_p7
        :precondition (and (at_c_p7)
                           (succ_p7_p7)
                           (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #23103: origin
                    (at_c_p7)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #23103: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p8
        :precondition (and (Pc_not_blocked_p8)
                           (at_c_p7)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #82570: origin
                    (at_c_p8)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p7_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p7)
                           (Bc_not_blocked_p9)
                           (succ_p7_p9))
        :effect (and
                    ; #11276: <==commonly_known== 23103 (neg)
                    (not_at_c_p7)

                    ; #70705: origin
                    (at_c_p9)

                    ; #23103: origin
                    (not (at_c_p7))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p8_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p8)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p012
        :precondition (and (succ_p8_p012)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012)
                           (at_c_p8))
        :effect (and
                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #87605: origin
                    (at_c_p012)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p8))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p10
        :precondition (and (succ_p8_p10)
                           (Pc_not_blocked_p10)
                           (at_c_p8)
                           (checked_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #57259: origin
                    (at_c_p10)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p2
        :precondition (and (succ_p8_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p8)
                           (checked_p2))
        :effect (and
                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #85291: origin
                    (at_c_p2)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p8_p3)
                           (checked_p3)
                           (at_c_p8))
        :effect (and
                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #91348: origin
                    (at_c_p3)

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p4
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p8_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p8))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p5
        :precondition (and (Bc_not_blocked_p5)
                           (checked_p5)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p8))
        :effect (and
                    ; #64822: origin
                    (at_c_p5)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p6
        :precondition (and (succ_p8_p6)
                           (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p8)
                           (checked_p6))
        :effect (and
                    ; #49258: origin
                    (at_c_p6)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p7
        :precondition (and (Pc_not_blocked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p8)
                           (checked_p7)
                           (succ_p8_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #82570: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p8_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p8))
        :effect (and
                    ; #82570: origin
                    (at_c_p8)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #82570: origin
                    (not (at_c_p8))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p8_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p8))
        :effect (and
                    ; #70705: origin
                    (at_c_p9)

                    ; #84177: <==commonly_known== 82570 (neg)
                    (not_at_c_p8)

                    ; #82570: origin
                    (not (at_c_p8))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p9_p0011
        :precondition (and (Pc_not_blocked_p0011)
                           (Bc_not_blocked_p0011)
                           (at_c_p9)
                           (succ_p9_p0011)
                           (checked_p0011))
        :effect (and
                    ; #35297: origin
                    (at_c_p0011)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #54692: <==negation-removal== 35297 (pos)
                    (not (not_at_c_p0011))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_c_p9)
                           (Pc_not_blocked_p012)
                           (Bc_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #87605: origin
                    (at_c_p012)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #22631: <==negation-removal== 87605 (pos)
                    (not (not_at_c_p012))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p9)
                           (Bc_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #13053: origin
                    (at_c_p1)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #19632: <==negation-removal== 13053 (pos)
                    (not (not_at_c_p1))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p10
        :precondition (and (at_c_p9)
                           (Pc_not_blocked_p10)
                           (checked_p10)
                           (succ_p9_p10)
                           (Bc_not_blocked_p10))
        :effect (and
                    ; #57259: origin
                    (at_c_p10)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #70705: origin
                    (not (at_c_p9))

                    ; #75090: <==negation-removal== 57259 (pos)
                    (not (not_at_c_p10))))

    (:action move_c_p9_p2
        :precondition (and (at_c_p9)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #85291: origin
                    (at_c_p2)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #44456: <==negation-removal== 85291 (pos)
                    (not (not_at_c_p2))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (succ_p9_p3)
                           (at_c_p9)
                           (checked_p3))
        :effect (and
                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #91348: origin
                    (at_c_p3)

                    ; #59041: <==negation-removal== 91348 (pos)
                    (not (not_at_c_p3))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (at_c_p9)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #40526: origin
                    (at_c_p4)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #15008: <==negation-removal== 40526 (pos)
                    (not (not_at_c_p4))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p5
        :precondition (and (Bc_not_blocked_p5)
                           (succ_p9_p5)
                           (checked_p5)
                           (at_c_p9)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #64822: origin
                    (at_c_p5)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #19134: <==negation-removal== 64822 (pos)
                    (not (not_at_c_p5))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p6
        :precondition (and (Bc_not_blocked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p9)
                           (succ_p9_p6)
                           (checked_p6))
        :effect (and
                    ; #49258: origin
                    (at_c_p6)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #55014: <==negation-removal== 49258 (pos)
                    (not (not_at_c_p6))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p9)
                           (succ_p9_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #23103: origin
                    (at_c_p7)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #11276: <==negation-removal== 23103 (pos)
                    (not (not_at_c_p7))

                    ; #70705: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p8
        :precondition (and (Pc_not_blocked_p8)
                           (succ_p9_p8)
                           (at_c_p9)
                           (Bc_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #82570: origin
                    (at_c_p8)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #70705: origin
                    (not (at_c_p9))

                    ; #84177: <==negation-removal== 82570 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p9_p9
        :precondition (and (checked_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #70705: origin
                    (at_c_p9)

                    ; #88428: <==commonly_known== 70705 (neg)
                    (not_at_c_p9)

                    ; #70705: origin
                    (not (at_c_p9))

                    ; #88428: <==negation-removal== 70705 (pos)
                    (not (not_at_c_p9))))

    (:action move_d_p0011_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p0011)
                           (succ_p0011_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p0011)
                           (checked_p012))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #77479: origin
                    (not (at_d_p0011))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (checked_p1)
                           (at_d_p0011)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p10
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p0011)
                           (checked_p10)
                           (succ_p0011_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #64709: origin
                    (at_d_p10)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p0011)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p3
        :precondition (and (at_d_p0011)
                           (checked_p3)
                           (succ_p0011_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p0011)
                           (succ_p0011_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p0011_p5)
                           (checked_p5)
                           (at_d_p0011))
        :effect (and
                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #80227: origin
                    (at_d_p5)

                    ; #77479: origin
                    (not (at_d_p0011))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p0011_p6
        :precondition (and (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p0011)
                           (succ_p0011_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p7
        :precondition (and (at_d_p0011)
                           (Bd_not_blocked_p7)
                           (succ_p0011_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p8
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p0011_p8)
                           (at_d_p0011)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p0011_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p0011_p9)
                           (at_d_p0011)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #70325: <==commonly_known== 77479 (neg)
                    (not_at_d_p0011)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #77479: origin
                    (not (at_d_p0011))))

    (:action move_d_p012_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (Bd_not_blocked_p0011)
                           (succ_p012_p0011)
                           (at_d_p012)
                           (checked_p0011))
        :effect (and
                    ; #77479: origin
                    (at_d_p0011)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p012_p012
        :precondition (and (succ_p012_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p012))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p012_p1
        :precondition (and (Pd_not_blocked_p1)
                           (at_d_p012)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (succ_p012_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p012_p10
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p012_p10)
                           (checked_p10)
                           (at_d_p012)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #64709: origin
                    (at_d_p10)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p012_p2
        :precondition (and (succ_p012_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p012)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p012_p3
        :precondition (and (checked_p3)
                           (succ_p012_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p012)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #41224: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p012_p4)
                           (at_d_p012)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p012_p5
        :precondition (and (succ_p012_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p012))
        :effect (and
                    ; #80227: origin
                    (at_d_p5)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p012_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p012)
                           (Bd_not_blocked_p6)
                           (succ_p012_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #41224: origin
                    (not (at_d_p012))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p012_p7
        :precondition (and (succ_p012_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p012)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #72791: origin
                    (at_d_p7)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #41224: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p8
        :precondition (and (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p012_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p012))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #41224: origin
                    (not (at_d_p012))))

    (:action move_d_p012_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p012_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p012))
        :effect (and
                    ; #85265: origin
                    (at_d_p9)

                    ; #86329: <==commonly_known== 41224 (neg)
                    (not_at_d_p012)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #41224: origin
                    (not (at_d_p012))))

    (:action move_d_p10_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p10_p0011)
                           (at_d_p10)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #64709: origin
                    (not (at_d_p10))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p10_p012
        :precondition (and (Pd_not_blocked_p012)
                           (at_d_p10)
                           (Bd_not_blocked_p012)
                           (succ_p10_p012)
                           (checked_p012))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #64709: origin
                    (not (at_d_p10))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p10_p1
        :precondition (and (succ_p10_p1)
                           (checked_p1)
                           (at_d_p10)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p10
        :precondition (and (succ_p10_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #64709: origin
                    (at_d_p10)

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p10)
                           (succ_p10_p2)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #64709: origin
                    (not (at_d_p10))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_d_p10)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p10)
                           (succ_p10_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p10_p5)
                           (at_d_p10))
        :effect (and
                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #80227: origin
                    (at_d_p5)

                    ; #64709: origin
                    (not (at_d_p10))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p10_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p10)
                           (succ_p10_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #64709: origin
                    (not (at_d_p10))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p10_p7
        :precondition (and (at_d_p10)
                           (succ_p10_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p8
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p10)
                           (succ_p10_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #49863: origin
                    (at_d_p8)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p10_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p10)
                           (Bd_not_blocked_p9)
                           (succ_p10_p9))
        :effect (and
                    ; #46698: <==commonly_known== 64709 (neg)
                    (not_at_d_p10)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #64709: origin
                    (not (at_d_p10))))

    (:action move_d_p1_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p1_p0011)
                           (Bd_not_blocked_p0011)
                           (at_d_p1)
                           (checked_p0011))
        :effect (and
                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p1_p012
        :precondition (and (succ_p1_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p1))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p1_p1
        :precondition (and (checked_p1)
                           (succ_p1_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p1_p10
        :precondition (and (succ_p1_p10)
                           (Pd_not_blocked_p10)
                           (checked_p10)
                           (at_d_p1)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #64709: origin
                    (at_d_p10)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p1_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p1_p2)
                           (at_d_p1)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p1_p3
        :precondition (and (succ_p1_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p1)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #45411: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p1_p4)
                           (at_d_p1)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p1_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p1_p5)
                           (at_d_p1))
        :effect (and
                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #80227: origin
                    (at_d_p5)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p1_p6
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p1_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p1)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #45411: origin
                    (not (at_d_p1))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p1_p7
        :precondition (and (succ_p1_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p1)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #45411: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p8
        :precondition (and (Bd_not_blocked_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #45411: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #62480: <==commonly_known== 45411 (neg)
                    (not_at_d_p1)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #45411: origin
                    (not (at_d_p1))))

    (:action move_d_p2_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p2_p0011)
                           (Bd_not_blocked_p0011)
                           (at_d_p2)
                           (checked_p0011))
        :effect (and
                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p2_p012
        :precondition (and (succ_p2_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p2))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_d_p2)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p2_p10
        :precondition (and (succ_p2_p10)
                           (Pd_not_blocked_p10)
                           (checked_p10)
                           (at_d_p2)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #64709: origin
                    (at_d_p10)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p2_p2
        :precondition (and (succ_p2_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p2)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p2_p3
        :precondition (and (succ_p2_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p2)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #42328: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p2_p4)
                           (at_d_p2)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p2_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p2_p5)
                           (checked_p5)
                           (at_d_p2))
        :effect (and
                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #80227: origin
                    (at_d_p5)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p2_p6
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p2_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p2)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #42328: origin
                    (not (at_d_p2))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p2_p7
        :precondition (and (succ_p2_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p2)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #42328: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p8
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p2))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #42328: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p2_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p2))
        :effect (and
                    ; #68981: <==commonly_known== 42328 (neg)
                    (not_at_d_p2)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #42328: origin
                    (not (at_d_p2))))

    (:action move_d_p3_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p3_p0011)
                           (at_d_p3)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_d_p3)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #41224: origin
                    (at_d_p012)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p3_p1
        :precondition (and (checked_p1)
                           (at_d_p3)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #45411: origin
                    (at_d_p1)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p3_p10
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p3)
                           (succ_p3_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #64709: origin
                    (at_d_p10)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p3_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p3)
                           (succ_p3_p2)
                           (checked_p2))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #42328: origin
                    (at_d_p2)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_d_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p3_p4
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4)
                           (at_d_p3)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p3_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p3_p5)
                           (checked_p5)
                           (at_d_p3))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #80227: origin
                    (at_d_p5)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p3_p6
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p3_p6)
                           (at_d_p3)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #18732: origin
                    (at_d_p6)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p3_p7
        :precondition (and (at_d_p3)
                           (Bd_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #12508: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p8
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p3)
                           (succ_p3_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #49863: origin
                    (at_d_p8)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p3_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p3_p9)
                           (at_d_p3)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17092: <==commonly_known== 12508 (neg)
                    (not_at_d_p3)

                    ; #85265: origin
                    (at_d_p9)

                    ; #12508: origin
                    (not (at_d_p3))

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p4_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p4_p0011)
                           (at_d_p4)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p4_p012
        :precondition (and (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p4)
                           (succ_p4_p012)
                           (checked_p012))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p4_p1
        :precondition (and (checked_p1)
                           (succ_p4_p1)
                           (at_d_p4)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p4_p10
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p4)
                           (checked_p10)
                           (succ_p4_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #64709: origin
                    (at_d_p10)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p4_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p4)
                           (succ_p4_p2)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p4_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p4)
                           (succ_p4_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p4_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p4)
                           (succ_p4_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p4_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p4_p5)
                           (checked_p5)
                           (at_d_p4))
        :effect (and
                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #80227: origin
                    (at_d_p5)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p4_p6
        :precondition (and (succ_p4_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p4)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p4_p7
        :precondition (and (at_d_p4)
                           (Bd_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #12253: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p8
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p4_p8)
                           (at_d_p4)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p4_p9
        :precondition (and (checked_p9)
                           (succ_p4_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p4)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #62412: <==commonly_known== 12253 (neg)
                    (not_at_d_p4)

                    ; #85265: origin
                    (at_d_p9)

                    ; #12253: origin
                    (not (at_d_p4))

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p5_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p5_p0011)
                           (at_d_p5)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #77479: origin
                    (at_d_p0011)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p012
        :precondition (and (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (at_d_p5)
                           (succ_p5_p012)
                           (checked_p012))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #80227: origin
                    (not (at_d_p5))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p5_p1
        :precondition (and (succ_p5_p1)
                           (checked_p1)
                           (at_d_p5)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p10
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p5)
                           (succ_p5_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #64709: origin
                    (at_d_p10)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p5_p2)
                           (at_d_p5)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p3
        :precondition (and (checked_p3)
                           (at_d_p5)
                           (succ_p5_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p4
        :precondition (and (succ_p5_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p5)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p5_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p5))
        :effect (and
                    ; #80227: origin
                    (at_d_p5)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #80227: origin
                    (not (at_d_p5))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p5_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p5)
                           (Bd_not_blocked_p6)
                           (succ_p5_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_d_p5)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #72791: origin
                    (at_d_p7)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p8
        :precondition (and (Bd_not_blocked_p8)
                           (succ_p5_p8)
                           (at_d_p5)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p5_p9)
                           (at_d_p5)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #81769: <==commonly_known== 80227 (neg)
                    (not_at_d_p5)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #80227: origin
                    (not (at_d_p5))))

    (:action move_d_p6_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p6_p0011)
                           (at_d_p6)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_d_p6)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #41224: origin
                    (at_d_p012)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p6_p1
        :precondition (and (at_d_p6)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p6_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #45411: origin
                    (at_d_p1)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p6_p10
        :precondition (and (succ_p6_p10)
                           (Pd_not_blocked_p10)
                           (at_d_p6)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #64709: origin
                    (at_d_p10)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))))

    (:action move_d_p6_p2
        :precondition (and (succ_p6_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p6)
                           (Bd_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #42328: origin
                    (at_d_p2)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_d_p6)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #18732: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p6)
                           (succ_p6_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p6_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (at_d_p6)
                           (succ_p6_p5)
                           (checked_p5))
        :effect (and
                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #80227: origin
                    (at_d_p5)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p6_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p6)
                           (succ_p6_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_d_p6)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #18732: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p8
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p6)
                           (succ_p6_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #49863: origin
                    (at_d_p8)

                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p6_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p6)
                           (succ_p6_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #66531: <==commonly_known== 18732 (neg)
                    (not_at_d_p6)

                    ; #85265: origin
                    (at_d_p9)

                    ; #18732: origin
                    (not (at_d_p6))

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p7_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (Bd_not_blocked_p0011)
                           (succ_p7_p0011)
                           (at_d_p7)
                           (checked_p0011))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p012
        :precondition (and (succ_p7_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #41224: origin
                    (at_d_p012)

                    ; #72791: origin
                    (not (at_d_p7))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p7_p1
        :precondition (and (checked_p1)
                           (succ_p7_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #45411: origin
                    (at_d_p1)

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p10
        :precondition (and (Pd_not_blocked_p10)
                           (succ_p7_p10)
                           (checked_p10)
                           (at_d_p7)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #64709: origin
                    (at_d_p10)

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (at_d_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #42328: origin
                    (at_d_p2)

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p3
        :precondition (and (at_d_p7)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #12508: origin
                    (at_d_p3)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p7)
                           (succ_p7_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #12253: origin
                    (at_d_p4)

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p5
        :precondition (and (succ_p7_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #80227: origin
                    (at_d_p5)

                    ; #72791: origin
                    (not (at_d_p7))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p7_p6
        :precondition (and (Pd_not_blocked_p6)
                           (checked_p6)
                           (succ_p7_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #18732: origin
                    (at_d_p6)

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p7
        :precondition (and (succ_p7_p7)
                           (checked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p8
        :precondition (and (Bd_not_blocked_p8)
                           (at_d_p7)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p7_p8))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #49863: origin
                    (at_d_p8)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (succ_p7_p9)
                           (at_d_p7))
        :effect (and
                    ; #10211: <==commonly_known== 72791 (neg)
                    (not_at_d_p7)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #72791: origin
                    (not (at_d_p7))))

    (:action move_d_p8_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (succ_p8_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))))

    (:action move_d_p8_p012
        :precondition (and (succ_p8_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #41224: origin
                    (at_d_p012)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p8_p1
        :precondition (and (checked_p1)
                           (succ_p8_p1)
                           (Bd_not_blocked_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #45411: origin
                    (at_d_p1)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_d_p8)
                           (Pd_not_blocked_p10)
                           (checked_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #64709: origin
                    (at_d_p10)

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))

                    ; #49863: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p2
        :precondition (and (Pd_not_blocked_p2)
                           (succ_p8_p2)
                           (Bd_not_blocked_p2)
                           (checked_p2)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #42328: origin
                    (at_d_p2)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p8_p3
        :precondition (and (at_d_p8)
                           (checked_p3)
                           (succ_p8_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #49863: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p4
        :precondition (and (at_d_p8)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p8_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p8_p5
        :precondition (and (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p8_p5)
                           (checked_p5)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #80227: origin
                    (at_d_p5)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p8_p6
        :precondition (and (succ_p8_p6)
                           (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p8))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #49863: origin
                    (not (at_d_p8))

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p8_p7
        :precondition (and (at_d_p8)
                           (succ_p8_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #49863: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p8
        :precondition (and (succ_p8_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (Pd_not_blocked_p8)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #49863: origin
                    (at_d_p8)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #49863: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (succ_p8_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p8))
        :effect (and
                    ; #27263: <==commonly_known== 49863 (neg)
                    (not_at_d_p8)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #49863: origin
                    (not (at_d_p8))))

    (:action move_d_p9_p0011
        :precondition (and (Pd_not_blocked_p0011)
                           (at_d_p9)
                           (succ_p9_p0011)
                           (Bd_not_blocked_p0011)
                           (checked_p0011))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #77479: origin
                    (at_d_p0011)

                    ; #70325: <==negation-removal== 77479 (pos)
                    (not (not_at_d_p0011))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p012
        :precondition (and (at_d_p9)
                           (succ_p9_p012)
                           (Pd_not_blocked_p012)
                           (Bd_not_blocked_p012)
                           (checked_p012))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #41224: origin
                    (at_d_p012)

                    ; #85265: origin
                    (not (at_d_p9))

                    ; #86329: <==negation-removal== 41224 (pos)
                    (not (not_at_d_p012))))

    (:action move_d_p9_p1
        :precondition (and (at_d_p9)
                           (checked_p1)
                           (Bd_not_blocked_p1)
                           (succ_p9_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #45411: origin
                    (at_d_p1)

                    ; #62480: <==negation-removal== 45411 (pos)
                    (not (not_at_d_p1))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p10
        :precondition (and (Pd_not_blocked_p10)
                           (at_d_p9)
                           (checked_p10)
                           (succ_p9_p10)
                           (Bd_not_blocked_p10))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #64709: origin
                    (at_d_p10)

                    ; #46698: <==negation-removal== 64709 (pos)
                    (not (not_at_d_p10))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p2
        :precondition (and (at_d_p9)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #42328: origin
                    (at_d_p2)

                    ; #68981: <==negation-removal== 42328 (pos)
                    (not (not_at_d_p2))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p3
        :precondition (and (at_d_p9)
                           (succ_p9_p3)
                           (checked_p3)
                           (Pd_not_blocked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #12508: origin
                    (at_d_p3)

                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #17092: <==negation-removal== 12508 (pos)
                    (not (not_at_d_p3))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p4
        :precondition (and (Bd_not_blocked_p4)
                           (at_d_p9)
                           (succ_p9_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12253: origin
                    (at_d_p4)

                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #62412: <==negation-removal== 12253 (pos)
                    (not (not_at_d_p4))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p5
        :precondition (and (Bd_not_blocked_p5)
                           (succ_p9_p5)
                           (at_d_p9)
                           (Pd_not_blocked_p5)
                           (checked_p5))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #80227: origin
                    (at_d_p5)

                    ; #81769: <==negation-removal== 80227 (pos)
                    (not (not_at_d_p5))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p9)
                           (Bd_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6))
        :effect (and
                    ; #18732: origin
                    (at_d_p6)

                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #66531: <==negation-removal== 18732 (pos)
                    (not (not_at_d_p6))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p7
        :precondition (and (at_d_p9)
                           (succ_p9_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #72791: origin
                    (at_d_p7)

                    ; #10211: <==negation-removal== 72791 (pos)
                    (not (not_at_d_p7))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p8
        :precondition (and (succ_p9_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p9)
                           (checked_p8)
                           (Pd_not_blocked_p8))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #49863: origin
                    (at_d_p8)

                    ; #27263: <==negation-removal== 49863 (pos)
                    (not (not_at_d_p8))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p9)
                           (succ_p9_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #29290: <==commonly_known== 85265 (neg)
                    (not_at_d_p9)

                    ; #85265: origin
                    (at_d_p9)

                    ; #29290: <==negation-removal== 85265 (pos)
                    (not (not_at_d_p9))

                    ; #85265: origin
                    (not (at_d_p9))))

    (:action sensecells_a_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_a_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p0011_p012
        :precondition (and (at_a_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p0011_p1
        :precondition (and (at_a_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p0011_p10
        :precondition (and (at_a_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p0011_p2
        :precondition (and (at_a_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p0011_p3
        :precondition (and (at_a_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p0011_p4
        :precondition (and (at_a_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p0011_p5
        :precondition (and (at_a_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p0011_p6
        :precondition (and (at_a_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p0011_p7
        :precondition (and (at_a_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p0011_p8
        :precondition (and (at_a_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p0011_p9
        :precondition (and (at_a_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p012_p0011
        :precondition (and (at_a_p012)
                           (succ_p012_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p012_p012
        :precondition (and (at_a_p012)
                           (succ_p012_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p012_p1
        :precondition (and (at_a_p012)
                           (succ_p012_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p012_p10
        :precondition (and (at_a_p012)
                           (succ_p012_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p012_p2
        :precondition (and (at_a_p012)
                           (succ_p012_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p012_p3
        :precondition (and (at_a_p012)
                           (succ_p012_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p012_p4
        :precondition (and (at_a_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_a_p012))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p012_p6
        :precondition (and (at_a_p012)
                           (succ_p012_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p012_p7
        :precondition (and (at_a_p012)
                           (succ_p012_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p012_p8
        :precondition (and (at_a_p012)
                           (succ_p012_p8))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_a_p012))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p10_p0011
        :precondition (and (at_a_p10)
                           (succ_p10_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p10_p012
        :precondition (and (succ_p10_p012)
                           (at_a_p10))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p10_p1
        :precondition (and (at_a_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_a_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_a_p10))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_a_p10))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p10_p4
        :precondition (and (succ_p10_p4)
                           (at_a_p10))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p10_p5
        :precondition (and (at_a_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p10_p6
        :precondition (and (at_a_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p10_p7
        :precondition (and (succ_p10_p7)
                           (at_a_p10))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_a_p10))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p10_p9
        :precondition (and (succ_p10_p9)
                           (at_a_p10))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p1_p0011
        :precondition (and (succ_p1_p0011)
                           (at_a_p1))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_a_p1))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_a_p1))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_a_p1))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p1_p3
        :precondition (and (at_a_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p1_p5
        :precondition (and (at_a_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_a_p1))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_a_p1))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_a_p1))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p2_p0011
        :precondition (and (at_a_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p2_p012
        :precondition (and (at_a_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p2_p1
        :precondition (and (at_a_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p2_p10
        :precondition (and (at_a_p2)
                           (succ_p2_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p2_p2
        :precondition (and (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p2_p3
        :precondition (and (at_a_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p2_p4
        :precondition (and (at_a_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p2_p5
        :precondition (and (at_a_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p2_p6
        :precondition (and (at_a_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p2_p7
        :precondition (and (at_a_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p2_p8
        :precondition (and (at_a_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p2_p9
        :precondition (and (at_a_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p3_p0011
        :precondition (and (at_a_p3)
                           (succ_p3_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_a_p3))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p3_p1
        :precondition (and (at_a_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p3_p10
        :precondition (and (at_a_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p3_p2
        :precondition (and (at_a_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p3_p3
        :precondition (and (at_a_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p3_p4
        :precondition (and (at_a_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p3_p5
        :precondition (and (at_a_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p3_p6
        :precondition (and (at_a_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p3_p7
        :precondition (and (at_a_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_a_p3))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p3_p9
        :precondition (and (at_a_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (at_a_p4))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p4_p012
        :precondition (and (succ_p4_p012)
                           (at_a_p4))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_a_p4))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_a_p4))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_a_p4))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_a_p4))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_a_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_a_p4))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_a_p4))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_a_p4))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_a_p4))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_a_p4))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_a_p5))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p5_p012
        :precondition (and (succ_p5_p012)
                           (at_a_p5))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_a_p5))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_a_p5))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_a_p5))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_a_p5))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_a_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_a_p5))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_a_p5))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_a_p5))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_a_p5))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p6_p0011
        :precondition (and (at_a_p6)
                           (succ_p6_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p6_p012
        :precondition (and (at_a_p6)
                           (succ_p6_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p6_p1
        :precondition (and (at_a_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p6_p10
        :precondition (and (at_a_p6)
                           (succ_p6_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p6_p2
        :precondition (and (at_a_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p6_p3
        :precondition (and (at_a_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p6_p4
        :precondition (and (at_a_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p6_p5
        :precondition (and (at_a_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p6_p6
        :precondition (and (at_a_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p6_p7
        :precondition (and (at_a_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p6_p8
        :precondition (and (at_a_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p6_p9
        :precondition (and (at_a_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_a_p7))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_a_p7))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_a_p7))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_a_p7))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_a_p7))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p7_p3
        :precondition (and (succ_p7_p3)
                           (at_a_p7))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_a_p7))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_a_p7))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_a_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_a_p7))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_a_p7))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p8_p0011
        :precondition (and (at_a_p8)
                           (succ_p8_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p8_p012
        :precondition (and (at_a_p8)
                           (succ_p8_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p8_p1
        :precondition (and (at_a_p8)
                           (succ_p8_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_a_p8))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p8_p2
        :precondition (and (at_a_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p8_p3
        :precondition (and (at_a_p8)
                           (succ_p8_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p8_p5
        :precondition (and (at_a_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_a_p8))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p8_p7
        :precondition (and (at_a_p8)
                           (succ_p8_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p8_p9
        :precondition (and (at_a_p8)
                           (succ_p8_p9))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_a_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_a_p9))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #29112: <==closure== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pa_blocked_p0011))

                    ; #46714: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Ba_blocked_p0011))

                    ; #48708: <==closure== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pa_not_blocked_p0011))

                    ; #49777: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Ba_not_blocked_p0011))

                    ; #10021: <==negation-removal== 49777 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pa_blocked_p0011)))

                    ; #10266: <==unclosure== 40303 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Ba_not_blocked_p0011)))

                    ; #40303: <==uncertain_firing== 46714 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pa_not_blocked_p0011)))

                    ; #42850: <==negation-removal== 48708 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Ba_blocked_p0011)))

                    ; #49161: <==negation-removal== 29112 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Ba_not_blocked_p0011)))

                    ; #49824: <==negation-removal== 46714 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pa_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))))

    (:action sensecells_a_p9_p012
        :precondition (and (at_a_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #37293: <==closure== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pa_blocked_p012))

                    ; #48498: origin
                    (when (and (hiddenblockedcell_p012))
                          (Ba_blocked_p012))

                    ; #85649: <==closure== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pa_not_blocked_p012))

                    ; #95580: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Ba_not_blocked_p012))

                    ; #18586: <==negation-removal== 95580 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pa_blocked_p012)))

                    ; #41267: <==negation-removal== 85649 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Ba_blocked_p012)))

                    ; #42554: <==negation-removal== 48498 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pa_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #85296: <==negation-removal== 37293 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Ba_not_blocked_p012)))

                    ; #86587: <==uncertain_firing== 48498 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pa_not_blocked_p012)))

                    ; #91919: <==unclosure== 86587 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Ba_not_blocked_p012)))))

    (:action sensecells_a_p9_p1
        :precondition (and (at_a_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #64083: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #66868: <==closure== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #77063: <==closure== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #99229: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #12682: <==unclosure== 19527 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #19527: <==uncertain_firing== 64083 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #52279: <==negation-removal== 64083 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75174: <==negation-removal== 99229 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #77448: <==negation-removal== 77063 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #80435: <==negation-removal== 66868 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p9_p10
        :precondition (and (at_a_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #18317: <==closure== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pa_not_blocked_p10))

                    ; #29234: origin
                    (when (and (hiddenblockedcell_p10))
                          (Ba_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #43107: <==closure== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pa_blocked_p10))

                    ; #43641: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Ba_not_blocked_p10))

                    ; #20974: <==negation-removal== 43107 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Ba_not_blocked_p10)))

                    ; #24261: <==negation-removal== 18317 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Ba_blocked_p10)))

                    ; #38890: <==negation-removal== 43641 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pa_blocked_p10)))

                    ; #50025: <==unclosure== 88961 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Ba_not_blocked_p10)))

                    ; #74088: <==negation-removal== 29234 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pa_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #88961: <==uncertain_firing== 29234 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pa_not_blocked_p10)))))

    (:action sensecells_a_p9_p2
        :precondition (and (at_a_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #26707: <==closure== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #48527: <==closure== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #57435: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #87133: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #10979: <==uncertain_firing== 87133 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #12763: <==negation-removal== 48527 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #17947: <==negation-removal== 87133 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58415: <==unclosure== 10979 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #62834: <==negation-removal== 26707 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #91185: <==negation-removal== 57435 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))))

    (:action sensecells_a_p9_p3
        :precondition (and (at_a_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #33195: <==closure== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #48474: <==closure== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #56345: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #75126: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #30780: <==unclosure== 81350 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #36939: <==negation-removal== 75126 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #39064: <==negation-removal== 48474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #44722: <==negation-removal== 33195 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #81350: <==uncertain_firing== 56345 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #96125: <==negation-removal== 56345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))))

    (:action sensecells_a_p9_p4
        :precondition (and (at_a_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #13823: <==closure== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #32228: origin
                    (checked_p4)

                    ; #32516: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #41243: <==closure== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #60817: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #13803: <==negation-removal== 32516 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #27566: <==uncertain_firing== 60817 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #35183: <==negation-removal== 60817 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #50538: <==negation-removal== 41243 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #57576: <==negation-removal== 13823 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88647: <==unclosure== 27566 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_a_p9))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #50466: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #83484: <==closure== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #91764: <==closure== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #95028: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #13013: <==uncertain_firing== 95028 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #29701: <==negation-removal== 50466 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #44590: <==negation-removal== 83484 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #68072: <==negation-removal== 95028 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #71061: <==negation-removal== 91764 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #81189: <==unclosure== 13013 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))))

    (:action sensecells_a_p9_p6
        :precondition (and (at_a_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #26408: <==closure== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #34623: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #45601: <==closure== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #81027: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #20195: <==negation-removal== 26408 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #39418: <==unclosure== 45480 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #42104: <==negation-removal== 81027 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #43643: <==negation-removal== 45601 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #45480: <==uncertain_firing== 81027 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #67199: <==negation-removal== 34623 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))))

    (:action sensecells_a_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_a_p9))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #15491: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #37048: <==closure== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #49037: <==closure== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #58850: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #11767: <==unclosure== 46308 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #21877: <==negation-removal== 49037 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #31715: <==negation-removal== 58850 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #46308: <==uncertain_firing== 15491 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #53936: <==negation-removal== 15491 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #84713: <==negation-removal== 37048 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_a_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_a_p9))
        :effect (and
                    ; #39328: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #82791: <==closure== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #84007: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #84957: <==closure== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #13629: <==negation-removal== 82791 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #23442: <==unclosure== 26351 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #26351: <==uncertain_firing== 84007 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #47596: <==negation-removal== 84007 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #65446: <==negation-removal== 84957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #78645: <==negation-removal== 39328 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_a_p9))
        :effect (and
                    ; #45515: <==closure== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #55744: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76191: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #85600: <==closure== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #25855: <==negation-removal== 85600 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #26918: <==unclosure== 51235 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #42674: <==negation-removal== 76191 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #51235: <==uncertain_firing== 55744 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #59758: <==negation-removal== 45515 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #68053: <==negation-removal== 55744 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))))

    (:action sensecells_b_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_b_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (at_b_p0011))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_b_p0011))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_b_p0011))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_b_p0011))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (at_b_p0011))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_b_p0011))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_b_p0011))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (at_b_p0011))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_b_p0011))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (at_b_p0011))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_b_p0011))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_b_p012))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_b_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_b_p012))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_b_p012))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_b_p012))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_b_p012))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p012_p4
        :precondition (and (at_b_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_b_p012))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_b_p012))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p012_p7
        :precondition (and (succ_p012_p7)
                           (at_b_p012))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_b_p012))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_b_p012))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p10_p0011
        :precondition (and (at_b_p10)
                           (succ_p10_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p10_p012
        :precondition (and (succ_p10_p012)
                           (at_b_p10))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p10_p1
        :precondition (and (succ_p10_p1)
                           (at_b_p10))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_b_p10))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_b_p10))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_b_p10))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p10_p4
        :precondition (and (succ_p10_p4)
                           (at_b_p10))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p10_p5
        :precondition (and (at_b_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p10_p6
        :precondition (and (at_b_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p10_p7
        :precondition (and (succ_p10_p7)
                           (at_b_p10))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_b_p10))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p10_p9
        :precondition (and (succ_p10_p9)
                           (at_b_p10))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p1_p0011
        :precondition (and (at_b_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p1_p012
        :precondition (and (at_b_p1)
                           (succ_p1_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p1_p1
        :precondition (and (at_b_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p1_p10
        :precondition (and (at_b_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p1_p2
        :precondition (and (at_b_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p1_p3
        :precondition (and (at_b_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p1_p4
        :precondition (and (at_b_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p1_p5
        :precondition (and (at_b_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p1_p6
        :precondition (and (at_b_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p1_p7
        :precondition (and (at_b_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p1_p8
        :precondition (and (at_b_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p1_p9
        :precondition (and (at_b_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p2_p0011
        :precondition (and (at_b_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_b_p2))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_b_p2))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_b_p2))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_b_p2))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p2_p4
        :precondition (and (at_b_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p2_p5
        :precondition (and (at_b_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_b_p2))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_b_p2))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p2_p9
        :precondition (and (at_b_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_b_p3))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_b_p3))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p3_p1
        :precondition (and (at_b_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_b_p3))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_b_p3))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p3_p3
        :precondition (and (at_b_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_b_p3))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p3_p5
        :precondition (and (at_b_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_b_p3))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p3_p7
        :precondition (and (at_b_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_b_p3))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p3_p9
        :precondition (and (at_b_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (at_b_p4))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p4_p012
        :precondition (and (succ_p4_p012)
                           (at_b_p4))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_b_p4))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_b_p4))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_b_p4))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_b_p4))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_b_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_b_p4))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_b_p4))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_b_p4))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_b_p4))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_b_p4))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p5_p0011
        :precondition (and (succ_p5_p0011)
                           (at_b_p5))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p5_p012
        :precondition (and (at_b_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_b_p5))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p5_p10
        :precondition (and (succ_p5_p10)
                           (at_b_p5))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p5_p2
        :precondition (and (at_b_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_b_p5))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_b_p5))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_b_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_b_p5))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_b_p5))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_b_p5))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p5_p9
        :precondition (and (at_b_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_b_p6))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_b_p6))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_b_p6))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_b_p6))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_b_p6))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_b_p6))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p6_p4
        :precondition (and (at_b_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p6_p5
        :precondition (and (at_b_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_b_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_b_p6))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_b_p6))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_b_p7))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_b_p7))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p7_p1
        :precondition (and (at_b_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_b_p7))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p7_p2
        :precondition (and (at_b_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p7_p4
        :precondition (and (at_b_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_b_p7))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p7_p6
        :precondition (and (at_b_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_b_p7))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p7_p8
        :precondition (and (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_b_p7))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p8_p0011
        :precondition (and (at_b_p8)
                           (succ_p8_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p8_p012
        :precondition (and (at_b_p8)
                           (succ_p8_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p8_p1
        :precondition (and (at_b_p8)
                           (succ_p8_p1))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p8_p10
        :precondition (and (at_b_p8)
                           (succ_p8_p10))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p8_p2
        :precondition (and (at_b_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p8_p3
        :precondition (and (at_b_p8)
                           (succ_p8_p3))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p8_p4
        :precondition (and (at_b_p8)
                           (succ_p8_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p8_p5
        :precondition (and (at_b_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p8_p6
        :precondition (and (at_b_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p8_p7
        :precondition (and (at_b_p8)
                           (succ_p8_p7))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p8_p8
        :precondition (and (at_b_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p8_p9
        :precondition (and (at_b_p8)
                           (succ_p8_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_b_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_b_p9))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #26238: <==closure== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pb_blocked_p0011))

                    ; #43945: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bb_not_blocked_p0011))

                    ; #54401: <==closure== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pb_not_blocked_p0011))

                    ; #61501: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bb_blocked_p0011))

                    ; #25000: <==negation-removal== 43945 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pb_blocked_p0011)))

                    ; #31807: <==unclosure== 36536 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bb_not_blocked_p0011)))

                    ; #33650: <==negation-removal== 61501 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pb_not_blocked_p0011)))

                    ; #36536: <==uncertain_firing== 61501 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pb_not_blocked_p0011)))

                    ; #38038: <==negation-removal== 54401 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bb_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #61472: <==negation-removal== 26238 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bb_not_blocked_p0011)))))

    (:action sensecells_b_p9_p012
        :precondition (and (at_b_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #29908: <==closure== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pb_blocked_p012))

                    ; #40422: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bb_not_blocked_p012))

                    ; #75501: <==closure== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pb_not_blocked_p012))

                    ; #87296: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bb_blocked_p012))

                    ; #29944: <==negation-removal== 40422 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pb_blocked_p012)))

                    ; #45732: <==unclosure== 97821 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bb_not_blocked_p012)))

                    ; #46249: <==negation-removal== 75501 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bb_blocked_p012)))

                    ; #46466: <==negation-removal== 29908 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bb_not_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #64129: <==negation-removal== 87296 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pb_not_blocked_p012)))

                    ; #97821: <==uncertain_firing== 87296 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pb_not_blocked_p012)))))

    (:action sensecells_b_p9_p1
        :precondition (and (at_b_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #16192: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #31854: <==closure== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #39717: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #55112: <==closure== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #18484: <==negation-removal== 31854 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #19079: <==negation-removal== 16192 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #24438: <==negation-removal== 39717 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #47240: <==negation-removal== 55112 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #47798: <==uncertain_firing== 39717 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #55184: <==unclosure== 47798 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p9_p10
        :precondition (and (at_b_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #16920: <==closure== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pb_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #70326: <==closure== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pb_blocked_p10))

                    ; #73642: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bb_blocked_p10))

                    ; #77898: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bb_not_blocked_p10))

                    ; #10964: <==negation-removal== 16920 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bb_blocked_p10)))

                    ; #21841: <==unclosure== 34708 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bb_not_blocked_p10)))

                    ; #31966: <==negation-removal== 73642 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pb_not_blocked_p10)))

                    ; #34708: <==uncertain_firing== 73642 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pb_not_blocked_p10)))

                    ; #66443: <==negation-removal== 77898 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pb_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #87995: <==negation-removal== 70326 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bb_not_blocked_p10)))))

    (:action sensecells_b_p9_p2
        :precondition (and (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #18556: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #18768: origin
                    (checked_p2)

                    ; #27992: <==closure== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #67832: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #91293: <==closure== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #15598: <==negation-removal== 27992 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #36813: <==uncertain_firing== 67832 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #54808: <==negation-removal== 18556 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #60310: <==negation-removal== 67832 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #87784: <==unclosure== 36813 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #88956: <==negation-removal== 91293 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))))

    (:action sensecells_b_p9_p3
        :precondition (and (at_b_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #30375: <==closure== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #32738: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #47683: <==closure== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #47972: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #41643: <==negation-removal== 47972 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #47720: <==negation-removal== 47683 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #60008: <==unclosure== 74965 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #70994: <==negation-removal== 32738 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #74965: <==uncertain_firing== 47972 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #82556: <==negation-removal== 30375 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))))

    (:action sensecells_b_p9_p4
        :precondition (and (at_b_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #52154: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #55158: <==closure== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #56888: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #85605: <==closure== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #19951: <==uncertain_firing== 52154 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #36020: <==negation-removal== 56888 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #36342: <==negation-removal== 52154 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #70180: <==negation-removal== 55158 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #87849: <==unclosure== 19951 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #88446: <==negation-removal== 85605 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))))

    (:action sensecells_b_p9_p5
        :precondition (and (at_b_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #13844: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #20478: origin
                    (checked_p5)

                    ; #34178: <==closure== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #36443: <==closure== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #78969: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #30043: <==negation-removal== 13844 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #38936: <==negation-removal== 78969 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #45980: <==negation-removal== 34178 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #69592: <==uncertain_firing== 13844 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #79059: <==negation-removal== 36443 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #87893: <==unclosure== 69592 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p9_p6
        :precondition (and (at_b_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #29340: <==closure== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #64609: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #86904: <==closure== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #95040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #15445: <==uncertain_firing== 64609 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #28374: <==negation-removal== 95040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #41790: <==negation-removal== 64609 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #73282: <==negation-removal== 86904 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #83018: <==negation-removal== 29340 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #90753: <==unclosure== 15445 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))))

    (:action sensecells_b_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_b_p9))
        :effect (and
                    ; #12599: <==closure== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #12843: origin
                    (checked_p7)

                    ; #16351: <==closure== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #17025: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #51027: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #12175: <==negation-removal== 16351 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #25015: <==uncertain_firing== 51027 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #28214: <==negation-removal== 12599 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #42452: <==negation-removal== 51027 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #69584: <==unclosure== 25015 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #75941: <==negation-removal== 17025 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_b_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_b_p9))
        :effect (and
                    ; #28044: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #46521: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #65630: <==closure== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #77088: <==closure== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #31838: <==negation-removal== 46521 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #33586: <==negation-removal== 65630 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #37148: <==negation-removal== 28044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #57918: <==negation-removal== 77088 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #69305: <==uncertain_firing== 46521 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #79357: <==unclosure== 69305 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_b_p9))
        :effect (and
                    ; #25666: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #41249: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #76791: <==closure== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #91318: <==closure== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #20056: <==unclosure== 82765 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #21085: <==negation-removal== 25666 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #28156: <==negation-removal== 91318 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #33977: <==negation-removal== 76791 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #45837: <==negation-removal== 41249 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #82765: <==uncertain_firing== 41249 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))))

    (:action sensecells_c_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_c_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p0011_p012
        :precondition (and (at_c_p0011)
                           (succ_p0011_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p0011_p1
        :precondition (and (at_c_p0011)
                           (succ_p0011_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p0011_p10
        :precondition (and (at_c_p0011)
                           (succ_p0011_p10))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p0011_p2
        :precondition (and (at_c_p0011)
                           (succ_p0011_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p0011_p3
        :precondition (and (at_c_p0011)
                           (succ_p0011_p3))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p0011_p4
        :precondition (and (at_c_p0011)
                           (succ_p0011_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p0011_p5
        :precondition (and (at_c_p0011)
                           (succ_p0011_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p0011_p6
        :precondition (and (at_c_p0011)
                           (succ_p0011_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p0011_p7
        :precondition (and (at_c_p0011)
                           (succ_p0011_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p0011_p8
        :precondition (and (at_c_p0011)
                           (succ_p0011_p8))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p0011_p9
        :precondition (and (at_c_p0011)
                           (succ_p0011_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_c_p012))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_c_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_c_p012))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_c_p012))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_c_p012))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_c_p012))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p012_p4
        :precondition (and (at_c_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_c_p012))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_c_p012))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p012_p7
        :precondition (and (succ_p012_p7)
                           (at_c_p012))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_c_p012))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_c_p012))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p10_p0011
        :precondition (and (at_c_p10)
                           (succ_p10_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p10_p012
        :precondition (and (at_c_p10)
                           (succ_p10_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p10_p1
        :precondition (and (at_c_p10)
                           (succ_p10_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p10_p10
        :precondition (and (at_c_p10)
                           (succ_p10_p10))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p10_p2
        :precondition (and (at_c_p10)
                           (succ_p10_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_c_p10))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p10_p4
        :precondition (and (at_c_p10)
                           (succ_p10_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p10_p5
        :precondition (and (at_c_p10)
                           (succ_p10_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p10_p6
        :precondition (and (at_c_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p10_p7
        :precondition (and (at_c_p10)
                           (succ_p10_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_c_p10))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p10_p9
        :precondition (and (at_c_p10)
                           (succ_p10_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p1_p0011
        :precondition (and (at_c_p1)
                           (succ_p1_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p1_p012
        :precondition (and (at_c_p1)
                           (succ_p1_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p1_p1
        :precondition (and (at_c_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p1_p10
        :precondition (and (at_c_p1)
                           (succ_p1_p10))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p1_p2
        :precondition (and (at_c_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p1_p3
        :precondition (and (at_c_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p1_p4
        :precondition (and (at_c_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p1_p5
        :precondition (and (at_c_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p1_p6
        :precondition (and (at_c_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p1_p7
        :precondition (and (at_c_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p1_p8
        :precondition (and (at_c_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p1_p9
        :precondition (and (at_c_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p2_p0011
        :precondition (and (at_c_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p2_p012
        :precondition (and (at_c_p2)
                           (succ_p2_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_c_p2))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p2_p2
        :precondition (and (at_c_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p2_p3
        :precondition (and (at_c_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p2_p4
        :precondition (and (at_c_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p2_p5
        :precondition (and (at_c_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p2_p6
        :precondition (and (at_c_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p2_p7
        :precondition (and (at_c_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_c_p2))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p2_p9
        :precondition (and (at_c_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p3_p0011
        :precondition (and (at_c_p3)
                           (succ_p3_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_c_p3))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p3_p1
        :precondition (and (at_c_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p3_p10
        :precondition (and (at_c_p3)
                           (succ_p3_p10))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_c_p3))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p3_p3
        :precondition (and (at_c_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p3_p4
        :precondition (and (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p3_p5
        :precondition (and (at_c_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_c_p3))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p3_p7
        :precondition (and (at_c_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_c_p3))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p3_p9
        :precondition (and (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p4_p0011
        :precondition (and (succ_p4_p0011)
                           (at_c_p4))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p4_p012
        :precondition (and (at_c_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p4_p1
        :precondition (and (at_c_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p4_p10
        :precondition (and (succ_p4_p10)
                           (at_c_p4))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_c_p4))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_c_p4))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_c_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_c_p4))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_c_p4))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_c_p4))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_c_p4))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_c_p4))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p5_p0011
        :precondition (and (at_c_p5)
                           (succ_p5_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p5_p012
        :precondition (and (at_c_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p5_p1
        :precondition (and (at_c_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p5_p10
        :precondition (and (at_c_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p5_p2
        :precondition (and (at_c_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p5_p3
        :precondition (and (at_c_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p5_p4
        :precondition (and (at_c_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p5_p5
        :precondition (and (at_c_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p5_p6
        :precondition (and (at_c_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p5_p7
        :precondition (and (at_c_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p5_p8
        :precondition (and (at_c_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p5_p9
        :precondition (and (at_c_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_c_p6))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_c_p6))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_c_p6))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_c_p6))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p6_p4
        :precondition (and (at_c_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p6_p5
        :precondition (and (at_c_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_c_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_c_p6))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_c_p6))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p6_p9
        :precondition (and (at_c_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p7_p0011
        :precondition (and (at_c_p7)
                           (succ_p7_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p7_p012
        :precondition (and (at_c_p7)
                           (succ_p7_p012))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p7_p1
        :precondition (and (at_c_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p7_p10
        :precondition (and (at_c_p7)
                           (succ_p7_p10))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p7_p2
        :precondition (and (at_c_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p7_p3
        :precondition (and (at_c_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p7_p4
        :precondition (and (at_c_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_c_p7))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p7_p6
        :precondition (and (at_c_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p7_p7
        :precondition (and (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p7_p8
        :precondition (and (at_c_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_c_p7))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_c_p8))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_c_p8))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p8_p1
        :precondition (and (at_c_p8)
                           (succ_p8_p1))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_c_p8))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_c_p8))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_c_p8))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p8_p5
        :precondition (and (at_c_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_c_p8))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p8_p7
        :precondition (and (at_c_p8)
                           (succ_p8_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_c_p8))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_c_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_c_p9))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #18524: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bc_not_blocked_p0011))

                    ; #46922: <==closure== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pc_not_blocked_p0011))

                    ; #54109: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bc_blocked_p0011))

                    ; #85849: <==closure== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pc_blocked_p0011))

                    ; #22736: <==negation-removal== 54109 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pc_not_blocked_p0011)))

                    ; #41690: <==negation-removal== 18524 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pc_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #70063: <==unclosure== 80824 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bc_not_blocked_p0011)))

                    ; #80776: <==negation-removal== 46922 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bc_blocked_p0011)))

                    ; #80824: <==uncertain_firing== 54109 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pc_not_blocked_p0011)))

                    ; #88731: <==negation-removal== 85849 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bc_not_blocked_p0011)))))

    (:action sensecells_c_p9_p012
        :precondition (and (succ_p9_p012)
                           (at_c_p9))
        :effect (and
                    ; #24034: origin
                    (checked_p012)

                    ; #25225: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bc_not_blocked_p012))

                    ; #36841: <==closure== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pc_not_blocked_p012))

                    ; #70732: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bc_blocked_p012))

                    ; #94524: <==closure== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pc_blocked_p012))

                    ; #13663: <==uncertain_firing== 70732 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pc_not_blocked_p012)))

                    ; #45701: <==negation-removal== 36841 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bc_blocked_p012)))

                    ; #52642: <==negation-removal== 70732 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pc_not_blocked_p012)))

                    ; #56058: <==negation-removal== 25225 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pc_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #70882: <==unclosure== 13663 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bc_not_blocked_p012)))

                    ; #84981: <==negation-removal== 94524 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bc_not_blocked_p012)))))

    (:action sensecells_c_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #15510: <==closure== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #25619: <==closure== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #26643: origin
                    (checked_p1)

                    ; #27139: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #32751: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #11913: <==unclosure== 28360 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #28360: <==uncertain_firing== 32751 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #56463: <==negation-removal== 27139 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #63086: <==negation-removal== 15510 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #71922: <==negation-removal== 32751 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #83038: <==negation-removal== 25619 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))))

    (:action sensecells_c_p9_p10
        :precondition (and (succ_p9_p10)
                           (at_c_p9))
        :effect (and
                    ; #23297: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bc_not_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #34494: <==closure== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pc_blocked_p10))

                    ; #78902: <==closure== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pc_not_blocked_p10))

                    ; #91866: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bc_blocked_p10))

                    ; #30821: <==uncertain_firing== 91866 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pc_not_blocked_p10)))

                    ; #40172: <==negation-removal== 78902 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bc_blocked_p10)))

                    ; #77587: <==unclosure== 30821 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bc_not_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #80156: <==negation-removal== 34494 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bc_not_blocked_p10)))

                    ; #80576: <==negation-removal== 23297 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pc_blocked_p10)))

                    ; #91704: <==negation-removal== 91866 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pc_not_blocked_p10)))))

    (:action sensecells_c_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_c_p9))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #25157: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34035: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #57904: <==closure== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #69093: <==closure== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #23558: <==negation-removal== 57904 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #58806: <==negation-removal== 25157 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #59007: <==unclosure== 76266 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #73187: <==negation-removal== 69093 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #76266: <==uncertain_firing== 34035 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #80769: <==negation-removal== 34035 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))))

    (:action sensecells_c_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_c_p9))
        :effect (and
                    ; #22134: <==closure== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #52994: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #54276: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #81104: <==closure== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #12131: <==negation-removal== 81104 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #57282: <==negation-removal== 52994 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #59829: <==uncertain_firing== 52994 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #72951: <==negation-removal== 22134 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #74703: <==negation-removal== 54276 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #90929: <==unclosure== 59829 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_c_p9))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #45735: <==closure== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #70923: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #78365: <==closure== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #80563: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #11858: <==negation-removal== 70923 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #19901: <==uncertain_firing== 70923 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #38310: <==negation-removal== 45735 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #52011: <==negation-removal== 80563 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #55520: <==negation-removal== 78365 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #88584: <==unclosure== 19901 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))))

    (:action sensecells_c_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_c_p9))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #24898: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #39347: <==closure== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #48172: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #84880: <==closure== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #16957: <==negation-removal== 24898 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #28722: <==negation-removal== 84880 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #38066: <==negation-removal== 39347 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #62141: <==negation-removal== 48172 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #63567: <==uncertain_firing== 24898 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #67679: <==unclosure== 63567 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_c_p9))
        :effect (and
                    ; #12690: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #13861: <==closure== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #59005: <==closure== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #90272: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #42884: <==uncertain_firing== 90272 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #44269: <==unclosure== 42884 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #52646: <==negation-removal== 59005 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #72492: <==negation-removal== 90272 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #76959: <==negation-removal== 13861 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #89044: <==negation-removal== 12690 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))))

    (:action sensecells_c_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #40791: <==closure== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #63756: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #76090: <==closure== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #84266: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #23038: <==negation-removal== 63756 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #29914: <==negation-removal== 84266 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #53301: <==negation-removal== 76090 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #59638: <==negation-removal== 40791 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #83268: <==uncertain_firing== 63756 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))

                    ; #90292: <==unclosure== 83268 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_c_p9))
        :effect (and
                    ; #14473: <==closure== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #18695: <==closure== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #60496: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #90326: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #11172: <==negation-removal== 60496 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #18273: <==negation-removal== 14473 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #32707: <==negation-removal== 90326 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #47766: <==uncertain_firing== 60496 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #59705: <==unclosure== 47766 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #61186: <==negation-removal== 18695 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))))

    (:action sensecells_c_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #10646: <==closure== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #23730: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #60410: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #64111: <==closure== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #62719: <==unclosure== 83997 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #67508: <==negation-removal== 23730 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #75588: <==negation-removal== 60410 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78776: <==negation-removal== 64111 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #83997: <==uncertain_firing== 60410 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #97084: <==negation-removal== 10646 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))))

    (:action sensecells_d_p0011_p0011
        :precondition (and (succ_p0011_p0011)
                           (at_d_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p0011_p012
        :precondition (and (succ_p0011_p012)
                           (at_d_p0011))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p0011_p1
        :precondition (and (succ_p0011_p1)
                           (at_d_p0011))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p0011_p10
        :precondition (and (succ_p0011_p10)
                           (at_d_p0011))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p0011_p2
        :precondition (and (succ_p0011_p2)
                           (at_d_p0011))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p0011_p3
        :precondition (and (succ_p0011_p3)
                           (at_d_p0011))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p0011_p4
        :precondition (and (succ_p0011_p4)
                           (at_d_p0011))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p0011_p5
        :precondition (and (succ_p0011_p5)
                           (at_d_p0011))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p0011_p6
        :precondition (and (succ_p0011_p6)
                           (at_d_p0011))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p0011_p7
        :precondition (and (succ_p0011_p7)
                           (at_d_p0011))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p0011_p8
        :precondition (and (succ_p0011_p8)
                           (at_d_p0011))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p0011_p9
        :precondition (and (succ_p0011_p9)
                           (at_d_p0011))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p012_p0011
        :precondition (and (succ_p012_p0011)
                           (at_d_p012))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p012_p012
        :precondition (and (succ_p012_p012)
                           (at_d_p012))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p012_p1
        :precondition (and (succ_p012_p1)
                           (at_d_p012))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p012_p10
        :precondition (and (succ_p012_p10)
                           (at_d_p012))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p012_p2
        :precondition (and (succ_p012_p2)
                           (at_d_p012))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p012_p3
        :precondition (and (succ_p012_p3)
                           (at_d_p012))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p012_p4
        :precondition (and (at_d_p012)
                           (succ_p012_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p012_p5
        :precondition (and (succ_p012_p5)
                           (at_d_p012))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p012_p6
        :precondition (and (succ_p012_p6)
                           (at_d_p012))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p012_p7
        :precondition (and (succ_p012_p7)
                           (at_d_p012))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p012_p8
        :precondition (and (succ_p012_p8)
                           (at_d_p012))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p012_p9
        :precondition (and (succ_p012_p9)
                           (at_d_p012))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p10_p0011
        :precondition (and (succ_p10_p0011)
                           (at_d_p10))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p10_p012
        :precondition (and (succ_p10_p012)
                           (at_d_p10))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p10_p1
        :precondition (and (succ_p10_p1)
                           (at_d_p10))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p10_p10
        :precondition (and (succ_p10_p10)
                           (at_d_p10))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p10_p2
        :precondition (and (succ_p10_p2)
                           (at_d_p10))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p10_p3
        :precondition (and (succ_p10_p3)
                           (at_d_p10))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p10_p4
        :precondition (and (succ_p10_p4)
                           (at_d_p10))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p10_p5
        :precondition (and (succ_p10_p5)
                           (at_d_p10))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p10_p6
        :precondition (and (at_d_p10)
                           (succ_p10_p6))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p10_p7
        :precondition (and (succ_p10_p7)
                           (at_d_p10))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p10_p8
        :precondition (and (succ_p10_p8)
                           (at_d_p10))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p10_p9
        :precondition (and (succ_p10_p9)
                           (at_d_p10))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p1_p0011
        :precondition (and (succ_p1_p0011)
                           (at_d_p1))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p1_p012
        :precondition (and (succ_p1_p012)
                           (at_d_p1))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_d_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p1_p10
        :precondition (and (succ_p1_p10)
                           (at_d_p1))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_d_p1))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p1_p3
        :precondition (and (at_d_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_d_p1))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p1_p5
        :precondition (and (at_d_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_d_p1))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_d_p1))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p1_p8
        :precondition (and (at_d_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p1_p9
        :precondition (and (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p2_p0011
        :precondition (and (at_d_p2)
                           (succ_p2_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p2_p012
        :precondition (and (succ_p2_p012)
                           (at_d_p2))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_d_p2))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p2_p10
        :precondition (and (succ_p2_p10)
                           (at_d_p2))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_d_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_d_p2))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_d_p2))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_d_p2))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_d_p2))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_d_p2))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_d_p2))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_d_p2))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p3_p0011
        :precondition (and (succ_p3_p0011)
                           (at_d_p3))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p3_p012
        :precondition (and (succ_p3_p012)
                           (at_d_p3))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_d_p3))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p3_p10
        :precondition (and (succ_p3_p10)
                           (at_d_p3))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_d_p3))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_d_p3))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_d_p3))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_d_p3))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_d_p3))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_d_p3))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_d_p3))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_d_p3))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p4_p0011
        :precondition (and (at_d_p4)
                           (succ_p4_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p4_p012
        :precondition (and (at_d_p4)
                           (succ_p4_p012))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p4_p1
        :precondition (and (at_d_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p4_p10
        :precondition (and (at_d_p4)
                           (succ_p4_p10))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p4_p2
        :precondition (and (at_d_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p4_p3
        :precondition (and (at_d_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p4_p4
        :precondition (and (at_d_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p4_p5
        :precondition (and (at_d_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p4_p6
        :precondition (and (at_d_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p4_p7
        :precondition (and (at_d_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p4_p8
        :precondition (and (at_d_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p4_p9
        :precondition (and (at_d_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p5_p0011
        :precondition (and (at_d_p5)
                           (succ_p5_p0011))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p5_p012
        :precondition (and (at_d_p5)
                           (succ_p5_p012))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p5_p1
        :precondition (and (at_d_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p5_p10
        :precondition (and (at_d_p5)
                           (succ_p5_p10))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p5_p2
        :precondition (and (at_d_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p5_p3
        :precondition (and (at_d_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p5_p4
        :precondition (and (at_d_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p5_p5
        :precondition (and (at_d_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p5_p6
        :precondition (and (at_d_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p5_p7
        :precondition (and (at_d_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p5_p8
        :precondition (and (at_d_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p5_p9
        :precondition (and (at_d_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p6_p0011
        :precondition (and (succ_p6_p0011)
                           (at_d_p6))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p6_p012
        :precondition (and (succ_p6_p012)
                           (at_d_p6))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_d_p6))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p6_p10
        :precondition (and (succ_p6_p10)
                           (at_d_p6))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_d_p6))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_d_p6))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p6_p4
        :precondition (and (at_d_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p6_p5
        :precondition (and (at_d_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_d_p6))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_d_p6))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_d_p6))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p6_p9
        :precondition (and (at_d_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p7_p0011
        :precondition (and (succ_p7_p0011)
                           (at_d_p7))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p7_p012
        :precondition (and (succ_p7_p012)
                           (at_d_p7))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p7_p10
        :precondition (and (succ_p7_p10)
                           (at_d_p7))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p7_p2
        :precondition (and (at_d_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p7_p3
        :precondition (and (succ_p7_p3)
                           (at_d_p7))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_d_p7))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_d_p7))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p7_p6
        :precondition (and (at_d_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_d_p7))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_d_p7))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_d_p7))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p8_p0011
        :precondition (and (succ_p8_p0011)
                           (at_d_p8))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p8_p012
        :precondition (and (succ_p8_p012)
                           (at_d_p8))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_d_p8))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p8_p10
        :precondition (and (succ_p8_p10)
                           (at_d_p8))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_d_p8))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_d_p8))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_d_p8))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_d_p8))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_d_p8))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_d_p8))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_d_p8))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p9_p0011
        :precondition (and (succ_p9_p0011)
                           (at_d_p9))
        :effect (and
                    ; #12409: origin
                    (checked_p0011)

                    ; #22409: origin
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Bd_not_blocked_p0011))

                    ; #34475: origin
                    (when (and (hiddenblockedcell_p0011))
                          (Bd_blocked_p0011))

                    ; #44440: <==closure== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (Pd_blocked_p0011))

                    ; #91747: <==closure== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (Pd_not_blocked_p0011))

                    ; #19591: <==uncertain_firing== 34475 (pos)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Pd_not_blocked_p0011)))

                    ; #22502: <==negation-removal== 91747 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Bd_blocked_p0011)))

                    ; #22745: <==unclosure== 19591 (neg)
                    (when (and (not (not_hiddenblockedcell_p0011)))
                          (not (Bd_not_blocked_p0011)))

                    ; #46432: <==negation-removal== 34475 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Pd_not_blocked_p0011)))

                    ; #50440: <==negation-removal== 44440 (pos)
                    (when (and (hiddenblockedcell_p0011))
                          (not (Bd_not_blocked_p0011)))

                    ; #57050: <==negation-removal== 12409 (pos)
                    (not (not_checked_p0011))

                    ; #60433: <==negation-removal== 22409 (pos)
                    (when (and (not (hiddenblockedcell_p0011)))
                          (not (Pd_blocked_p0011)))))

    (:action sensecells_d_p9_p012
        :precondition (and (at_d_p9)
                           (succ_p9_p012))
        :effect (and
                    ; #11634: <==closure== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (Pd_not_blocked_p012))

                    ; #24034: origin
                    (checked_p012)

                    ; #29660: origin
                    (when (and (not (hiddenblockedcell_p012)))
                          (Bd_not_blocked_p012))

                    ; #30237: origin
                    (when (and (hiddenblockedcell_p012))
                          (Bd_blocked_p012))

                    ; #43427: <==closure== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (Pd_blocked_p012))

                    ; #20851: <==negation-removal== 29660 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Pd_blocked_p012)))

                    ; #22089: <==negation-removal== 30237 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Pd_not_blocked_p012)))

                    ; #23673: <==unclosure== 97260 (neg)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Bd_not_blocked_p012)))

                    ; #53713: <==negation-removal== 11634 (pos)
                    (when (and (not (hiddenblockedcell_p012)))
                          (not (Bd_blocked_p012)))

                    ; #61444: <==negation-removal== 24034 (pos)
                    (not (not_checked_p012))

                    ; #72580: <==negation-removal== 43427 (pos)
                    (when (and (hiddenblockedcell_p012))
                          (not (Bd_not_blocked_p012)))

                    ; #97260: <==uncertain_firing== 30237 (pos)
                    (when (and (not (not_hiddenblockedcell_p012)))
                          (not (Pd_not_blocked_p012)))))

    (:action sensecells_d_p9_p1
        :precondition (and (at_d_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #26643: origin
                    (checked_p1)

                    ; #27120: <==closure== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #32109: <==closure== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #65001: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #77848: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #26032: <==negation-removal== 77848 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #41964: <==negation-removal== 26643 (pos)
                    (not (not_checked_p1))

                    ; #59496: <==negation-removal== 27120 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #60398: <==negation-removal== 32109 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #76408: <==uncertain_firing== 65001 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #90359: <==unclosure== 76408 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #97864: <==negation-removal== 65001 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))))

    (:action sensecells_d_p9_p10
        :precondition (and (at_d_p9)
                           (succ_p9_p10))
        :effect (and
                    ; #13198: origin
                    (when (and (hiddenblockedcell_p10))
                          (Bd_blocked_p10))

                    ; #16425: <==closure== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (Pd_not_blocked_p10))

                    ; #20585: <==closure== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (Pd_blocked_p10))

                    ; #33434: origin
                    (checked_p10)

                    ; #80464: origin
                    (when (and (not (hiddenblockedcell_p10)))
                          (Bd_not_blocked_p10))

                    ; #35987: <==negation-removal== 13198 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Pd_not_blocked_p10)))

                    ; #42775: <==negation-removal== 80464 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Pd_blocked_p10)))

                    ; #44717: <==unclosure== 90329 (neg)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Bd_not_blocked_p10)))

                    ; #65479: <==negation-removal== 20585 (pos)
                    (when (and (hiddenblockedcell_p10))
                          (not (Bd_not_blocked_p10)))

                    ; #75924: <==negation-removal== 16425 (pos)
                    (when (and (not (hiddenblockedcell_p10)))
                          (not (Bd_blocked_p10)))

                    ; #79298: <==negation-removal== 33434 (pos)
                    (not (not_checked_p10))

                    ; #90329: <==uncertain_firing== 13198 (pos)
                    (when (and (not (not_hiddenblockedcell_p10)))
                          (not (Pd_not_blocked_p10)))))

    (:action sensecells_d_p9_p2
        :precondition (and (at_d_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #18768: origin
                    (checked_p2)

                    ; #41228: <==closure== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #70787: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #84945: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #85654: <==closure== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #20166: <==unclosure== 52629 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #48273: <==negation-removal== 41228 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #52060: <==negation-removal== 18768 (pos)
                    (not (not_checked_p2))

                    ; #52629: <==uncertain_firing== 70787 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #60498: <==negation-removal== 85654 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #64251: <==negation-removal== 84945 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #85457: <==negation-removal== 70787 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p9_p3
        :precondition (and (at_d_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #12596: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #15877: <==closure== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #50545: <==closure== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #83598: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #91884: origin
                    (checked_p3)

                    ; #44365: <==negation-removal== 12596 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #69688: <==negation-removal== 50545 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #71787: <==unclosure== 96147 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #76465: <==negation-removal== 15877 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #79118: <==negation-removal== 91884 (pos)
                    (not (not_checked_p3))

                    ; #79345: <==negation-removal== 83598 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #96147: <==uncertain_firing== 83598 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))))

    (:action sensecells_d_p9_p4
        :precondition (and (at_d_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #32228: origin
                    (checked_p4)

                    ; #38200: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #66307: <==closure== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #82865: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #87210: <==closure== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #12727: <==negation-removal== 66307 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #27421: <==uncertain_firing== 38200 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #29409: <==negation-removal== 38200 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76917: <==negation-removal== 32228 (pos)
                    (not (not_checked_p4))

                    ; #82215: <==negation-removal== 82865 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #84170: <==unclosure== 27421 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #94023: <==negation-removal== 87210 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))))

    (:action sensecells_d_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_d_p9))
        :effect (and
                    ; #20478: origin
                    (checked_p5)

                    ; #25603: <==closure== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #33005: <==closure== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #63198: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #69803: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #38758: <==negation-removal== 25603 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #39194: <==negation-removal== 63198 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #40460: <==negation-removal== 33005 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #48877: <==negation-removal== 20478 (pos)
                    (not (not_checked_p5))

                    ; #54626: <==uncertain_firing== 69803 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #56983: <==negation-removal== 69803 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #58970: <==unclosure== 54626 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))))

    (:action sensecells_d_p9_p6
        :precondition (and (at_d_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #35799: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #59519: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #59988: <==closure== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #77812: origin
                    (checked_p6)

                    ; #78951: <==closure== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #23052: <==uncertain_firing== 59519 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #32284: <==negation-removal== 59519 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #38077: <==negation-removal== 77812 (pos)
                    (not (not_checked_p6))

                    ; #61224: <==negation-removal== 78951 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #75950: <==unclosure== 23052 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #81794: <==negation-removal== 59988 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #86403: <==negation-removal== 35799 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))))

    (:action sensecells_d_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #12843: origin
                    (checked_p7)

                    ; #35432: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #48901: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #58150: <==closure== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #69260: <==closure== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #24146: <==negation-removal== 35432 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #24872: <==negation-removal== 58150 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #34507: <==unclosure== 80206 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #49165: <==negation-removal== 48901 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #69641: <==negation-removal== 69260 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #80206: <==uncertain_firing== 48901 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #90008: <==negation-removal== 12843 (pos)
                    (not (not_checked_p7))))

    (:action sensecells_d_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_d_p9))
        :effect (and
                    ; #27957: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #36456: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #75044: origin
                    (checked_p8)

                    ; #78559: <==closure== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #79205: <==closure== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #11400: <==unclosure== 20860 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #15416: <==negation-removal== 78559 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #16976: <==negation-removal== 27957 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #20860: <==uncertain_firing== 36456 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #32573: <==negation-removal== 75044 (pos)
                    (not (not_checked_p8))

                    ; #61814: <==negation-removal== 79205 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #82610: <==negation-removal== 36456 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_d_p9))
        :effect (and
                    ; #14287: <==closure== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #48604: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #64882: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #72521: origin
                    (checked_p9)

                    ; #78333: <==closure== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #12488: <==negation-removal== 48604 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #52113: <==uncertain_firing== 48604 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #68681: <==negation-removal== 72521 (pos)
                    (not (not_checked_p9))

                    ; #78536: <==negation-removal== 64882 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #82083: <==negation-removal== 78333 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #84510: <==unclosure== 52113 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #88295: <==negation-removal== 14287 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensesurvivors_a_p0011_s
        :precondition (and (at_a_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #22135: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Ba_survivorat_s_p0011))

                    ; #25519: <==closure== 70006 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pa_not_survivorat_s_p0011))

                    ; #41536: origin
                    (obs_p0011)

                    ; #70006: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Ba_not_survivorat_s_p0011))

                    ; #88389: <==closure== 22135 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pa_survivorat_s_p0011))

                    ; #20371: <==uncertain_firing== 22135 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #34831: <==negation-removal== 88389 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Ba_not_survivorat_s_p0011)))

                    ; #57772: <==unclosure== 20371 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Ba_not_survivorat_s_p0011)))

                    ; #74308: <==negation-removal== 41536 (pos)
                    (not (not_obs_p0011))

                    ; #76713: <==negation-removal== 70006 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pa_survivorat_s_p0011)))

                    ; #83376: <==negation-removal== 22135 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pa_not_survivorat_s_p0011)))

                    ; #93365: <==negation-removal== 25519 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Ba_survivorat_s_p0011)))))

    (:action sensesurvivors_a_p012_s
        :precondition (and (at_a_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #10859: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Ba_not_survivorat_s_p012))

                    ; #45202: <==closure== 10859 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pa_not_survivorat_s_p012))

                    ; #51450: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Ba_survivorat_s_p012))

                    ; #56216: origin
                    (obs_p012)

                    ; #62619: <==closure== 51450 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pa_survivorat_s_p012))

                    ; #14665: <==negation-removal== 10859 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pa_survivorat_s_p012)))

                    ; #18764: <==negation-removal== 51450 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #67566: <==unclosure== 75143 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Ba_not_survivorat_s_p012)))

                    ; #68639: <==negation-removal== 56216 (pos)
                    (not (not_obs_p012))

                    ; #75143: <==uncertain_firing== 51450 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pa_not_survivorat_s_p012)))

                    ; #84239: <==negation-removal== 62619 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Ba_not_survivorat_s_p012)))

                    ; #91220: <==negation-removal== 45202 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Ba_survivorat_s_p012)))))

    (:action sensesurvivors_a_p10_s
        :precondition (and (at_a_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #70156: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Ba_survivorat_s_p10))

                    ; #78410: origin
                    (obs_p10)

                    ; #84001: <==closure== 70156 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pa_survivorat_s_p10))

                    ; #85826: <==closure== 90744 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pa_not_survivorat_s_p10))

                    ; #90744: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Ba_not_survivorat_s_p10))

                    ; #20734: <==negation-removal== 70156 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #31259: <==negation-removal== 90744 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pa_survivorat_s_p10)))

                    ; #42983: <==unclosure== 66912 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #44705: <==negation-removal== 84001 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Ba_not_survivorat_s_p10)))

                    ; #66912: <==uncertain_firing== 70156 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pa_not_survivorat_s_p10)))

                    ; #74143: <==negation-removal== 85826 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Ba_survivorat_s_p10)))

                    ; #81303: <==negation-removal== 78410 (pos)
                    (not (not_obs_p10))))

    (:action sensesurvivors_a_p1_s
        :precondition (and (at_a_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #25507: <==closure== 84363 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pa_not_survivorat_s_p1))

                    ; #46933: origin
                    (obs_p1)

                    ; #47781: <==closure== 53571 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pa_survivorat_s_p1))

                    ; #53571: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Ba_survivorat_s_p1))

                    ; #84363: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Ba_not_survivorat_s_p1))

                    ; #16860: <==negation-removal== 47781 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #18851: <==uncertain_firing== 53571 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #55130: <==negation-removal== 84363 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #55316: <==unclosure== 18851 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #63790: <==negation-removal== 25507 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #84924: <==negation-removal== 46933 (pos)
                    (not (not_obs_p1))

                    ; #88570: <==negation-removal== 53571 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pa_not_survivorat_s_p1)))))

    (:action sensesurvivors_a_p2_s
        :precondition (and (at_a_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #16605: <==closure== 22263 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pa_survivorat_s_p2))

                    ; #22263: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Ba_survivorat_s_p2))

                    ; #29740: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Ba_not_survivorat_s_p2))

                    ; #64968: <==closure== 29740 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pa_not_survivorat_s_p2))

                    ; #77095: origin
                    (obs_p2)

                    ; #19119: <==uncertain_firing== 22263 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #21733: <==negation-removal== 29740 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #43492: <==negation-removal== 77095 (pos)
                    (not (not_obs_p2))

                    ; #48985: <==negation-removal== 22263 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #50581: <==unclosure== 19119 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #66160: <==negation-removal== 16605 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #72433: <==negation-removal== 64968 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Ba_survivorat_s_p2)))))

    (:action sensesurvivors_a_p3_s
        :precondition (and (at_a_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #27503: <==closure== 89089 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pa_survivorat_s_p3))

                    ; #77567: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Ba_not_survivorat_s_p3))

                    ; #85000: origin
                    (obs_p3)

                    ; #89089: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Ba_survivorat_s_p3))

                    ; #90479: <==closure== 77567 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pa_not_survivorat_s_p3))

                    ; #34528: <==negation-removal== 27503 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #44797: <==uncertain_firing== 89089 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #53322: <==unclosure== 44797 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #67753: <==negation-removal== 77567 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #76046: <==negation-removal== 89089 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #80608: <==negation-removal== 85000 (pos)
                    (not (not_obs_p3))

                    ; #85669: <==negation-removal== 90479 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Ba_survivorat_s_p3)))))

    (:action sensesurvivors_a_p4_s
        :precondition (and (at_a_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #27640: origin
                    (obs_p4)

                    ; #32884: <==closure== 68642 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pa_not_survivorat_s_p4))

                    ; #34864: <==closure== 83240 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pa_survivorat_s_p4))

                    ; #68642: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Ba_not_survivorat_s_p4))

                    ; #83240: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Ba_survivorat_s_p4))

                    ; #24999: <==negation-removal== 32884 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #35151: <==negation-removal== 68642 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #43093: <==negation-removal== 34864 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #61756: <==negation-removal== 27640 (pos)
                    (not (not_obs_p4))

                    ; #73677: <==uncertain_firing== 83240 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #76112: <==unclosure== 73677 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #86165: <==negation-removal== 83240 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pa_not_survivorat_s_p4)))))

    (:action sensesurvivors_a_p5_s
        :precondition (and (at_a_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #22076: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Ba_survivorat_s_p5))

                    ; #28776: origin
                    (obs_p5)

                    ; #49418: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Ba_not_survivorat_s_p5))

                    ; #54036: <==closure== 22076 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pa_survivorat_s_p5))

                    ; #81793: <==closure== 49418 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pa_not_survivorat_s_p5))

                    ; #13543: <==uncertain_firing== 22076 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #30884: <==negation-removal== 54036 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #32881: <==negation-removal== 49418 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #33910: <==negation-removal== 22076 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #38093: <==unclosure== 13543 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #72969: <==negation-removal== 81793 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #78073: <==negation-removal== 28776 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_a_p6_s
        :precondition (and (at_a_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #14544: <==closure== 42456 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pa_survivorat_s_p6))

                    ; #36211: <==closure== 65812 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pa_not_survivorat_s_p6))

                    ; #42456: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Ba_survivorat_s_p6))

                    ; #65812: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Ba_not_survivorat_s_p6))

                    ; #72590: origin
                    (obs_p6)

                    ; #52435: <==negation-removal== 14544 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #61521: <==negation-removal== 72590 (pos)
                    (not (not_obs_p6))

                    ; #66146: <==negation-removal== 42456 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #73479: <==negation-removal== 65812 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #76864: <==negation-removal== 36211 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #88381: <==uncertain_firing== 42456 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #90916: <==unclosure== 88381 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Ba_not_survivorat_s_p6)))))

    (:action sensesurvivors_a_p7_s
        :precondition (and (at_a_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #26930: origin
                    (obs_p7)

                    ; #32720: <==closure== 67813 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pa_survivorat_s_p7))

                    ; #62244: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Ba_not_survivorat_s_p7))

                    ; #67813: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Ba_survivorat_s_p7))

                    ; #76190: <==closure== 62244 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pa_not_survivorat_s_p7))

                    ; #20481: <==negation-removal== 26930 (pos)
                    (not (not_obs_p7))

                    ; #33540: <==unclosure== 36181 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #36181: <==uncertain_firing== 67813 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #49568: <==negation-removal== 67813 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #60346: <==negation-removal== 62244 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #86215: <==negation-removal== 32720 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #89054: <==negation-removal== 76190 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Ba_survivorat_s_p7)))))

    (:action sensesurvivors_a_p8_s
        :precondition (and (at_a_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #29655: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Ba_survivorat_s_p8))

                    ; #34160: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Ba_not_survivorat_s_p8))

                    ; #58221: <==closure== 29655 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pa_survivorat_s_p8))

                    ; #67566: origin
                    (obs_p8)

                    ; #78059: <==closure== 34160 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pa_not_survivorat_s_p8))

                    ; #32824: <==negation-removal== 78059 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #36887: <==negation-removal== 67566 (pos)
                    (not (not_obs_p8))

                    ; #39417: <==negation-removal== 58221 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #52710: <==negation-removal== 29655 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #54452: <==unclosure== 73298 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #65725: <==negation-removal== 34160 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #73298: <==uncertain_firing== 29655 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pa_not_survivorat_s_p8)))))

    (:action sensesurvivors_a_p9_s
        :precondition (and (at_a_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #39736: <==closure== 76479 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pa_not_survivorat_s_p9))

                    ; #65800: origin
                    (obs_p9)

                    ; #71177: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Ba_survivorat_s_p9))

                    ; #73276: <==closure== 71177 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pa_survivorat_s_p9))

                    ; #76479: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Ba_not_survivorat_s_p9))

                    ; #30597: <==negation-removal== 65800 (pos)
                    (not (not_obs_p9))

                    ; #44971: <==uncertain_firing== 71177 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #51637: <==negation-removal== 73276 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #55107: <==negation-removal== 71177 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #58228: <==unclosure== 44971 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #83640: <==negation-removal== 76479 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #84052: <==negation-removal== 39736 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Ba_survivorat_s_p9)))))

    (:action sensesurvivors_b_p0011_s
        :precondition (and (at_b_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #36145: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bb_not_survivorat_s_p0011))

                    ; #38252: <==closure== 47755 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pb_survivorat_s_p0011))

                    ; #41536: origin
                    (obs_p0011)

                    ; #47755: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bb_survivorat_s_p0011))

                    ; #74198: <==closure== 36145 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pb_not_survivorat_s_p0011))

                    ; #39603: <==negation-removal== 47755 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #56599: <==uncertain_firing== 47755 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pb_not_survivorat_s_p0011)))

                    ; #62324: <==negation-removal== 74198 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bb_survivorat_s_p0011)))

                    ; #63862: <==negation-removal== 38252 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #69598: <==unclosure== 56599 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bb_not_survivorat_s_p0011)))

                    ; #74308: <==negation-removal== 41536 (pos)
                    (not (not_obs_p0011))

                    ; #92080: <==negation-removal== 36145 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pb_survivorat_s_p0011)))))

    (:action sensesurvivors_b_p012_s
        :precondition (and (at_b_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #10043: <==closure== 37471 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pb_survivorat_s_p012))

                    ; #17091: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bb_not_survivorat_s_p012))

                    ; #21943: <==closure== 17091 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pb_not_survivorat_s_p012))

                    ; #37471: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bb_survivorat_s_p012))

                    ; #56216: origin
                    (obs_p012)

                    ; #13310: <==unclosure== 44976 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #23107: <==negation-removal== 10043 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bb_not_survivorat_s_p012)))

                    ; #44976: <==uncertain_firing== 37471 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #60077: <==negation-removal== 17091 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pb_survivorat_s_p012)))

                    ; #68639: <==negation-removal== 56216 (pos)
                    (not (not_obs_p012))

                    ; #83823: <==negation-removal== 37471 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pb_not_survivorat_s_p012)))

                    ; #89090: <==negation-removal== 21943 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bb_survivorat_s_p012)))))

    (:action sensesurvivors_b_p10_s
        :precondition (and (at_b_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #13367: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bb_not_survivorat_s_p10))

                    ; #20480: <==closure== 13367 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pb_not_survivorat_s_p10))

                    ; #67000: <==closure== 91704 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pb_survivorat_s_p10))

                    ; #78410: origin
                    (obs_p10)

                    ; #91704: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bb_survivorat_s_p10))

                    ; #21307: <==negation-removal== 20480 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bb_survivorat_s_p10)))

                    ; #22858: <==uncertain_firing== 91704 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pb_not_survivorat_s_p10)))

                    ; #49479: <==negation-removal== 13367 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pb_survivorat_s_p10)))

                    ; #70673: <==negation-removal== 91704 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pb_not_survivorat_s_p10)))

                    ; #78090: <==unclosure== 22858 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bb_not_survivorat_s_p10)))

                    ; #81303: <==negation-removal== 78410 (pos)
                    (not (not_obs_p10))

                    ; #81566: <==negation-removal== 67000 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bb_not_survivorat_s_p10)))))

    (:action sensesurvivors_b_p1_s
        :precondition (and (at_b_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #12635: <==closure== 73424 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pb_not_survivorat_s_p1))

                    ; #37443: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bb_survivorat_s_p1))

                    ; #46933: origin
                    (obs_p1)

                    ; #73424: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bb_not_survivorat_s_p1))

                    ; #83226: <==closure== 37443 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pb_survivorat_s_p1))

                    ; #29447: <==negation-removal== 12635 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #35754: <==negation-removal== 83226 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #51207: <==uncertain_firing== 37443 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #65383: <==negation-removal== 37443 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #68904: <==unclosure== 51207 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #84924: <==negation-removal== 46933 (pos)
                    (not (not_obs_p1))

                    ; #86132: <==negation-removal== 73424 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pb_survivorat_s_p1)))))

    (:action sensesurvivors_b_p2_s
        :precondition (and (at_b_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #20507: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bb_survivorat_s_p2))

                    ; #20783: <==closure== 20507 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pb_survivorat_s_p2))

                    ; #41259: <==closure== 85112 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pb_not_survivorat_s_p2))

                    ; #77095: origin
                    (obs_p2)

                    ; #85112: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bb_not_survivorat_s_p2))

                    ; #41039: <==unclosure== 69231 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #43492: <==negation-removal== 77095 (pos)
                    (not (not_obs_p2))

                    ; #43545: <==negation-removal== 85112 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #57359: <==negation-removal== 20783 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #69231: <==uncertain_firing== 20507 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #85030: <==negation-removal== 41259 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #85399: <==negation-removal== 20507 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pb_not_survivorat_s_p2)))))

    (:action sensesurvivors_b_p3_s
        :precondition (and (at_b_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #63008: <==closure== 95345 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pb_not_survivorat_s_p3))

                    ; #71295: <==closure== 75016 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pb_survivorat_s_p3))

                    ; #75016: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bb_survivorat_s_p3))

                    ; #85000: origin
                    (obs_p3)

                    ; #95345: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bb_not_survivorat_s_p3))

                    ; #13693: <==negation-removal== 95345 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #26733: <==negation-removal== 75016 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #68390: <==negation-removal== 63008 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #75795: <==negation-removal== 71295 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #77383: <==uncertain_firing== 75016 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #80608: <==negation-removal== 85000 (pos)
                    (not (not_obs_p3))

                    ; #89669: <==unclosure== 77383 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bb_not_survivorat_s_p3)))))

    (:action sensesurvivors_b_p4_s
        :precondition (and (at_b_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #27059: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bb_not_survivorat_s_p4))

                    ; #27640: origin
                    (obs_p4)

                    ; #75286: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bb_survivorat_s_p4))

                    ; #76721: <==closure== 27059 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pb_not_survivorat_s_p4))

                    ; #80294: <==closure== 75286 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pb_survivorat_s_p4))

                    ; #21085: <==unclosure== 77602 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #35395: <==negation-removal== 76721 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #44113: <==negation-removal== 27059 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #60716: <==negation-removal== 75286 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #61756: <==negation-removal== 27640 (pos)
                    (not (not_obs_p4))

                    ; #70533: <==negation-removal== 80294 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #77602: <==uncertain_firing== 75286 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pb_not_survivorat_s_p4)))))

    (:action sensesurvivors_b_p5_s
        :precondition (and (at_b_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #28776: origin
                    (obs_p5)

                    ; #30344: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bb_not_survivorat_s_p5))

                    ; #33253: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bb_survivorat_s_p5))

                    ; #47754: <==closure== 30344 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pb_not_survivorat_s_p5))

                    ; #80410: <==closure== 33253 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pb_survivorat_s_p5))

                    ; #35461: <==uncertain_firing== 33253 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #42286: <==unclosure== 35461 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #54793: <==negation-removal== 80410 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #59879: <==negation-removal== 33253 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #63305: <==negation-removal== 30344 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #74962: <==negation-removal== 47754 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #78073: <==negation-removal== 28776 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_b_p6_s
        :precondition (and (at_b_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #26801: <==closure== 79977 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pb_not_survivorat_s_p6))

                    ; #46482: <==closure== 69188 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pb_survivorat_s_p6))

                    ; #69188: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bb_survivorat_s_p6))

                    ; #72590: origin
                    (obs_p6)

                    ; #79977: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bb_not_survivorat_s_p6))

                    ; #40125: <==negation-removal== 69188 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #49432: <==negation-removal== 26801 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #50192: <==unclosure== 77298 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #51284: <==negation-removal== 79977 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #61521: <==negation-removal== 72590 (pos)
                    (not (not_obs_p6))

                    ; #77298: <==uncertain_firing== 69188 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #79562: <==negation-removal== 46482 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bb_not_survivorat_s_p6)))))

    (:action sensesurvivors_b_p7_s
        :precondition (and (at_b_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #26930: origin
                    (obs_p7)

                    ; #30885: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bb_not_survivorat_s_p7))

                    ; #69146: <==closure== 30885 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pb_not_survivorat_s_p7))

                    ; #81001: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bb_survivorat_s_p7))

                    ; #83421: <==closure== 81001 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pb_survivorat_s_p7))

                    ; #20481: <==negation-removal== 26930 (pos)
                    (not (not_obs_p7))

                    ; #22671: <==unclosure== 34701 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #33419: <==negation-removal== 83421 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #34701: <==uncertain_firing== 81001 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #45105: <==negation-removal== 81001 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #68506: <==negation-removal== 30885 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #75389: <==negation-removal== 69146 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bb_survivorat_s_p7)))))

    (:action sensesurvivors_b_p8_s
        :precondition (and (at_b_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #17975: <==closure== 82377 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pb_survivorat_s_p8))

                    ; #67566: origin
                    (obs_p8)

                    ; #79269: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bb_not_survivorat_s_p8))

                    ; #82377: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bb_survivorat_s_p8))

                    ; #89193: <==closure== 79269 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pb_not_survivorat_s_p8))

                    ; #11957: <==uncertain_firing== 82377 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #21946: <==unclosure== 11957 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #36887: <==negation-removal== 67566 (pos)
                    (not (not_obs_p8))

                    ; #52019: <==negation-removal== 79269 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #62676: <==negation-removal== 89193 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #71718: <==negation-removal== 82377 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #84218: <==negation-removal== 17975 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bb_not_survivorat_s_p8)))))

    (:action sensesurvivors_b_p9_s
        :precondition (and (at_b_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #26000: <==closure== 64621 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pb_not_survivorat_s_p9))

                    ; #64621: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bb_not_survivorat_s_p9))

                    ; #65800: origin
                    (obs_p9)

                    ; #74006: <==closure== 86355 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pb_survivorat_s_p9))

                    ; #86355: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bb_survivorat_s_p9))

                    ; #30597: <==negation-removal== 65800 (pos)
                    (not (not_obs_p9))

                    ; #37109: <==negation-removal== 64621 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #39742: <==unclosure== 84994 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #52475: <==negation-removal== 74006 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #70063: <==negation-removal== 86355 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #79392: <==negation-removal== 26000 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #84994: <==uncertain_firing== 86355 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pb_not_survivorat_s_p9)))))

    (:action sensesurvivors_c_p0011_s
        :precondition (and (at_c_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #17354: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bc_not_survivorat_s_p0011))

                    ; #38344: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bc_survivorat_s_p0011))

                    ; #41536: origin
                    (obs_p0011)

                    ; #51735: <==closure== 38344 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pc_survivorat_s_p0011))

                    ; #55707: <==closure== 17354 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pc_not_survivorat_s_p0011))

                    ; #31477: <==negation-removal== 17354 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pc_survivorat_s_p0011)))

                    ; #32069: <==unclosure== 89616 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #61338: <==negation-removal== 38344 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pc_not_survivorat_s_p0011)))

                    ; #74308: <==negation-removal== 41536 (pos)
                    (not (not_obs_p0011))

                    ; #81317: <==negation-removal== 55707 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bc_survivorat_s_p0011)))

                    ; #82446: <==negation-removal== 51735 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bc_not_survivorat_s_p0011)))

                    ; #89616: <==uncertain_firing== 38344 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pc_not_survivorat_s_p0011)))))

    (:action sensesurvivors_c_p012_s
        :precondition (and (at_c_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #23086: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bc_survivorat_s_p012))

                    ; #38780: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bc_not_survivorat_s_p012))

                    ; #45830: <==closure== 38780 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pc_not_survivorat_s_p012))

                    ; #48654: <==closure== 23086 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pc_survivorat_s_p012))

                    ; #56216: origin
                    (obs_p012)

                    ; #24165: <==unclosure== 25996 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #25996: <==uncertain_firing== 23086 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pc_not_survivorat_s_p012)))

                    ; #65437: <==negation-removal== 38780 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pc_survivorat_s_p012)))

                    ; #68639: <==negation-removal== 56216 (pos)
                    (not (not_obs_p012))

                    ; #69188: <==negation-removal== 48654 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bc_not_survivorat_s_p012)))

                    ; #79274: <==negation-removal== 45830 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bc_survivorat_s_p012)))

                    ; #96073: <==negation-removal== 23086 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pc_not_survivorat_s_p012)))))

    (:action sensesurvivors_c_p10_s
        :precondition (and (at_c_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #17673: <==closure== 36602 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pc_not_survivorat_s_p10))

                    ; #30768: <==closure== 55080 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pc_survivorat_s_p10))

                    ; #36602: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bc_not_survivorat_s_p10))

                    ; #55080: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bc_survivorat_s_p10))

                    ; #78410: origin
                    (obs_p10)

                    ; #37914: <==negation-removal== 30768 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #40442: <==negation-removal== 55080 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pc_not_survivorat_s_p10)))

                    ; #62949: <==uncertain_firing== 55080 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pc_not_survivorat_s_p10)))

                    ; #67764: <==negation-removal== 36602 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pc_survivorat_s_p10)))

                    ; #74312: <==unclosure== 62949 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bc_not_survivorat_s_p10)))

                    ; #76143: <==negation-removal== 17673 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bc_survivorat_s_p10)))

                    ; #81303: <==negation-removal== 78410 (pos)
                    (not (not_obs_p10))))

    (:action sensesurvivors_c_p1_s
        :precondition (and (at_c_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #19254: <==closure== 64441 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pc_survivorat_s_p1))

                    ; #39245: <==closure== 79371 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pc_not_survivorat_s_p1))

                    ; #46933: origin
                    (obs_p1)

                    ; #64441: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bc_survivorat_s_p1))

                    ; #79371: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bc_not_survivorat_s_p1))

                    ; #19400: <==negation-removal== 19254 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #32804: <==negation-removal== 79371 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #35699: <==negation-removal== 39245 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #58340: <==uncertain_firing== 64441 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #83219: <==negation-removal== 64441 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #84924: <==negation-removal== 46933 (pos)
                    (not (not_obs_p1))

                    ; #86071: <==unclosure== 58340 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bc_not_survivorat_s_p1)))))

    (:action sensesurvivors_c_p2_s
        :precondition (and (at_c_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #38236: <==closure== 77250 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pc_survivorat_s_p2))

                    ; #77095: origin
                    (obs_p2)

                    ; #77250: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bc_survivorat_s_p2))

                    ; #79244: <==closure== 91326 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pc_not_survivorat_s_p2))

                    ; #91326: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bc_not_survivorat_s_p2))

                    ; #43492: <==negation-removal== 77095 (pos)
                    (not (not_obs_p2))

                    ; #52515: <==negation-removal== 91326 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #54740: <==unclosure== 85035 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #55083: <==negation-removal== 77250 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #70727: <==negation-removal== 79244 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #73168: <==negation-removal== 38236 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #85035: <==uncertain_firing== 77250 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pc_not_survivorat_s_p2)))))

    (:action sensesurvivors_c_p3_s
        :precondition (and (at_c_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #18371: <==closure== 71990 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pc_survivorat_s_p3))

                    ; #32177: <==closure== 77376 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pc_not_survivorat_s_p3))

                    ; #71990: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bc_survivorat_s_p3))

                    ; #77376: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bc_not_survivorat_s_p3))

                    ; #85000: origin
                    (obs_p3)

                    ; #34175: <==unclosure== 55285 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #34609: <==negation-removal== 18371 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #44717: <==negation-removal== 32177 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #55285: <==uncertain_firing== 71990 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #57256: <==negation-removal== 71990 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #80608: <==negation-removal== 85000 (pos)
                    (not (not_obs_p3))

                    ; #92156: <==negation-removal== 77376 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pc_survivorat_s_p3)))))

    (:action sensesurvivors_c_p4_s
        :precondition (and (at_c_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #27640: origin
                    (obs_p4)

                    ; #28852: <==closure== 35963 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pc_not_survivorat_s_p4))

                    ; #35963: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bc_not_survivorat_s_p4))

                    ; #79689: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bc_survivorat_s_p4))

                    ; #87025: <==closure== 79689 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pc_survivorat_s_p4))

                    ; #42485: <==negation-removal== 87025 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #50320: <==uncertain_firing== 79689 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #56956: <==negation-removal== 79689 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #57893: <==unclosure== 50320 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #59042: <==negation-removal== 35963 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #61756: <==negation-removal== 27640 (pos)
                    (not (not_obs_p4))

                    ; #86822: <==negation-removal== 28852 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bc_survivorat_s_p4)))))

    (:action sensesurvivors_c_p5_s
        :precondition (and (at_c_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #28776: origin
                    (obs_p5)

                    ; #34998: <==closure== 73104 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pc_not_survivorat_s_p5))

                    ; #56577: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bc_survivorat_s_p5))

                    ; #59255: <==closure== 56577 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pc_survivorat_s_p5))

                    ; #73104: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bc_not_survivorat_s_p5))

                    ; #20035: <==negation-removal== 34998 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #68234: <==uncertain_firing== 56577 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #71247: <==unclosure== 68234 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #72976: <==negation-removal== 56577 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #78073: <==negation-removal== 28776 (pos)
                    (not (not_obs_p5))

                    ; #78156: <==negation-removal== 73104 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #84670: <==negation-removal== 59255 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bc_not_survivorat_s_p5)))))

    (:action sensesurvivors_c_p6_s
        :precondition (and (at_c_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #28452: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bc_survivorat_s_p6))

                    ; #61867: <==closure== 88898 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pc_not_survivorat_s_p6))

                    ; #65233: <==closure== 28452 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pc_survivorat_s_p6))

                    ; #72590: origin
                    (obs_p6)

                    ; #88898: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bc_not_survivorat_s_p6))

                    ; #40373: <==negation-removal== 88898 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #47288: <==negation-removal== 61867 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #53244: <==negation-removal== 28452 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #54030: <==uncertain_firing== 28452 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #61521: <==negation-removal== 72590 (pos)
                    (not (not_obs_p6))

                    ; #79278: <==unclosure== 54030 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #87791: <==negation-removal== 65233 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bc_not_survivorat_s_p6)))))

    (:action sensesurvivors_c_p7_s
        :precondition (and (at_c_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #15148: <==closure== 73026 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pc_survivorat_s_p7))

                    ; #19607: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bc_not_survivorat_s_p7))

                    ; #26930: origin
                    (obs_p7)

                    ; #58710: <==closure== 19607 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pc_not_survivorat_s_p7))

                    ; #73026: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bc_survivorat_s_p7))

                    ; #17886: <==negation-removal== 19607 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #20481: <==negation-removal== 26930 (pos)
                    (not (not_obs_p7))

                    ; #30508: <==negation-removal== 15148 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #45858: <==unclosure== 74901 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #69352: <==negation-removal== 58710 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #71701: <==negation-removal== 73026 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #74901: <==uncertain_firing== 73026 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pc_not_survivorat_s_p7)))))

    (:action sensesurvivors_c_p8_s
        :precondition (and (at_c_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #34101: <==closure== 42556 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pc_survivorat_s_p8))

                    ; #35661: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bc_not_survivorat_s_p8))

                    ; #42556: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bc_survivorat_s_p8))

                    ; #46438: <==closure== 35661 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pc_not_survivorat_s_p8))

                    ; #67566: origin
                    (obs_p8)

                    ; #19013: <==uncertain_firing== 42556 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #21738: <==unclosure== 19013 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #36887: <==negation-removal== 67566 (pos)
                    (not (not_obs_p8))

                    ; #41491: <==negation-removal== 42556 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #49822: <==negation-removal== 35661 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #59768: <==negation-removal== 34101 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #77938: <==negation-removal== 46438 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bc_survivorat_s_p8)))))

    (:action sensesurvivors_c_p9_s
        :precondition (and (at_c_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #26052: <==closure== 97714 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pc_survivorat_s_p9))

                    ; #26310: <==closure== 56912 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pc_not_survivorat_s_p9))

                    ; #56912: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bc_not_survivorat_s_p9))

                    ; #65800: origin
                    (obs_p9)

                    ; #97714: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bc_survivorat_s_p9))

                    ; #29739: <==unclosure== 89585 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #30597: <==negation-removal== 65800 (pos)
                    (not (not_obs_p9))

                    ; #35178: <==negation-removal== 26052 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #43533: <==negation-removal== 97714 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #44681: <==negation-removal== 26310 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #89585: <==uncertain_firing== 97714 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #98574: <==negation-removal== 56912 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pc_survivorat_s_p9)))))

    (:action sensesurvivors_d_p0011_s
        :precondition (and (at_d_p0011)
                           (not (obs_p0011)))
        :effect (and
                    ; #11551: origin
                    (when (and (hiddensurvivorat_s_p0011))
                          (Bd_survivorat_s_p0011))

                    ; #31021: origin
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Bd_not_survivorat_s_p0011))

                    ; #41536: origin
                    (obs_p0011)

                    ; #45666: <==closure== 11551 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (Pd_survivorat_s_p0011))

                    ; #50142: <==closure== 31021 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (Pd_not_survivorat_s_p0011))

                    ; #41970: <==negation-removal== 31021 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Pd_survivorat_s_p0011)))

                    ; #45714: <==negation-removal== 45666 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Bd_not_survivorat_s_p0011)))

                    ; #51967: <==negation-removal== 50142 (pos)
                    (when (and (not (hiddensurvivorat_s_p0011)))
                          (not (Bd_survivorat_s_p0011)))

                    ; #68926: <==uncertain_firing== 11551 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Pd_not_survivorat_s_p0011)))

                    ; #69029: <==negation-removal== 11551 (pos)
                    (when (and (hiddensurvivorat_s_p0011))
                          (not (Pd_not_survivorat_s_p0011)))

                    ; #74308: <==negation-removal== 41536 (pos)
                    (not (not_obs_p0011))

                    ; #86993: <==unclosure== 68926 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p0011)))
                          (not (Bd_not_survivorat_s_p0011)))))

    (:action sensesurvivors_d_p012_s
        :precondition (and (at_d_p012)
                           (not (obs_p012)))
        :effect (and
                    ; #43603: origin
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Bd_not_survivorat_s_p012))

                    ; #56216: origin
                    (obs_p012)

                    ; #71406: origin
                    (when (and (hiddensurvivorat_s_p012))
                          (Bd_survivorat_s_p012))

                    ; #72981: <==closure== 71406 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (Pd_survivorat_s_p012))

                    ; #90662: <==closure== 43603 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (Pd_not_survivorat_s_p012))

                    ; #41550: <==negation-removal== 72981 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Bd_not_survivorat_s_p012)))

                    ; #47363: <==negation-removal== 71406 (pos)
                    (when (and (hiddensurvivorat_s_p012))
                          (not (Pd_not_survivorat_s_p012)))

                    ; #57044: <==negation-removal== 90662 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Bd_survivorat_s_p012)))

                    ; #68639: <==negation-removal== 56216 (pos)
                    (not (not_obs_p012))

                    ; #75499: <==negation-removal== 43603 (pos)
                    (when (and (not (hiddensurvivorat_s_p012)))
                          (not (Pd_survivorat_s_p012)))

                    ; #83397: <==uncertain_firing== 71406 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Pd_not_survivorat_s_p012)))

                    ; #85315: <==unclosure== 83397 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p012)))
                          (not (Bd_not_survivorat_s_p012)))))

    (:action sensesurvivors_d_p10_s
        :precondition (and (at_d_p10)
                           (not (obs_p10)))
        :effect (and
                    ; #31597: origin
                    (when (and (hiddensurvivorat_s_p10))
                          (Bd_survivorat_s_p10))

                    ; #48671: <==closure== 31597 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (Pd_survivorat_s_p10))

                    ; #54991: origin
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Bd_not_survivorat_s_p10))

                    ; #64671: <==closure== 54991 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (Pd_not_survivorat_s_p10))

                    ; #78410: origin
                    (obs_p10)

                    ; #41550: <==unclosure== 83448 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Bd_not_survivorat_s_p10)))

                    ; #51612: <==negation-removal== 64671 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Bd_survivorat_s_p10)))

                    ; #57816: <==negation-removal== 31597 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Pd_not_survivorat_s_p10)))

                    ; #60715: <==negation-removal== 54991 (pos)
                    (when (and (not (hiddensurvivorat_s_p10)))
                          (not (Pd_survivorat_s_p10)))

                    ; #81303: <==negation-removal== 78410 (pos)
                    (not (not_obs_p10))

                    ; #81541: <==negation-removal== 48671 (pos)
                    (when (and (hiddensurvivorat_s_p10))
                          (not (Bd_not_survivorat_s_p10)))

                    ; #83448: <==uncertain_firing== 31597 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p10)))
                          (not (Pd_not_survivorat_s_p10)))))

    (:action sensesurvivors_d_p1_s
        :precondition (and (at_d_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #17982: <==closure== 29430 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pd_survivorat_s_p1))

                    ; #29430: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bd_survivorat_s_p1))

                    ; #46933: origin
                    (obs_p1)

                    ; #85548: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bd_not_survivorat_s_p1))

                    ; #91722: <==closure== 85548 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pd_not_survivorat_s_p1))

                    ; #10685: <==negation-removal== 85548 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #18246: <==uncertain_firing== 29430 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #22124: <==negation-removal== 29430 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #26278: <==negation-removal== 91722 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #49307: <==negation-removal== 17982 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #74500: <==unclosure== 18246 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #84924: <==negation-removal== 46933 (pos)
                    (not (not_obs_p1))))

    (:action sensesurvivors_d_p2_s
        :precondition (and (at_d_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #10651: <==closure== 48552 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pd_not_survivorat_s_p2))

                    ; #48552: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bd_not_survivorat_s_p2))

                    ; #63571: <==closure== 65306 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pd_survivorat_s_p2))

                    ; #65306: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bd_survivorat_s_p2))

                    ; #77095: origin
                    (obs_p2)

                    ; #11259: <==negation-removal== 63571 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #18967: <==negation-removal== 65306 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #30098: <==negation-removal== 48552 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #43492: <==negation-removal== 77095 (pos)
                    (not (not_obs_p2))

                    ; #44392: <==negation-removal== 10651 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #61412: <==unclosure== 61545 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #61545: <==uncertain_firing== 65306 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pd_not_survivorat_s_p2)))))

    (:action sensesurvivors_d_p3_s
        :precondition (and (at_d_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13911: <==closure== 45304 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pd_not_survivorat_s_p3))

                    ; #45304: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bd_not_survivorat_s_p3))

                    ; #54251: <==closure== 82711 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pd_survivorat_s_p3))

                    ; #82711: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bd_survivorat_s_p3))

                    ; #85000: origin
                    (obs_p3)

                    ; #33397: <==unclosure== 81702 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #41539: <==negation-removal== 82711 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #72769: <==negation-removal== 54251 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #73924: <==negation-removal== 13911 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #75668: <==negation-removal== 45304 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #80608: <==negation-removal== 85000 (pos)
                    (not (not_obs_p3))

                    ; #81702: <==uncertain_firing== 82711 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pd_not_survivorat_s_p3)))))

    (:action sensesurvivors_d_p4_s
        :precondition (and (at_d_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #27640: origin
                    (obs_p4)

                    ; #47868: <==closure== 71870 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pd_survivorat_s_p4))

                    ; #71870: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bd_survivorat_s_p4))

                    ; #73870: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bd_not_survivorat_s_p4))

                    ; #78534: <==closure== 73870 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pd_not_survivorat_s_p4))

                    ; #12176: <==negation-removal== 71870 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #20531: <==uncertain_firing== 71870 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #46885: <==negation-removal== 73870 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #61756: <==negation-removal== 27640 (pos)
                    (not (not_obs_p4))

                    ; #78131: <==unclosure== 20531 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #79941: <==negation-removal== 47868 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #80691: <==negation-removal== 78534 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bd_survivorat_s_p4)))))

    (:action sensesurvivors_d_p5_s
        :precondition (and (at_d_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #28776: origin
                    (obs_p5)

                    ; #49918: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bd_survivorat_s_p5))

                    ; #56069: <==closure== 49918 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pd_survivorat_s_p5))

                    ; #77725: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bd_not_survivorat_s_p5))

                    ; #82434: <==closure== 77725 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pd_not_survivorat_s_p5))

                    ; #11793: <==uncertain_firing== 49918 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #42944: <==negation-removal== 56069 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #44284: <==unclosure== 11793 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #44422: <==negation-removal== 82434 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #66959: <==negation-removal== 49918 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #77925: <==negation-removal== 77725 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #78073: <==negation-removal== 28776 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_d_p6_s
        :precondition (and (at_d_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #15181: <==closure== 69845 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pd_not_survivorat_s_p6))

                    ; #27623: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bd_survivorat_s_p6))

                    ; #69845: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bd_not_survivorat_s_p6))

                    ; #72590: origin
                    (obs_p6)

                    ; #84375: <==closure== 27623 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pd_survivorat_s_p6))

                    ; #18473: <==unclosure== 56342 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #41423: <==negation-removal== 69845 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pd_survivorat_s_p6)))

                    ; #56342: <==uncertain_firing== 27623 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #61521: <==negation-removal== 72590 (pos)
                    (not (not_obs_p6))

                    ; #64359: <==negation-removal== 84375 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #77258: <==negation-removal== 27623 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #88777: <==negation-removal== 15181 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bd_survivorat_s_p6)))))

    (:action sensesurvivors_d_p7_s
        :precondition (and (at_d_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #20615: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bd_survivorat_s_p7))

                    ; #26930: origin
                    (obs_p7)

                    ; #44979: <==closure== 20615 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pd_survivorat_s_p7))

                    ; #58897: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bd_not_survivorat_s_p7))

                    ; #66413: <==closure== 58897 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pd_not_survivorat_s_p7))

                    ; #20481: <==negation-removal== 26930 (pos)
                    (not (not_obs_p7))

                    ; #37250: <==negation-removal== 58897 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #45522: <==negation-removal== 66413 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bd_survivorat_s_p7)))

                    ; #57164: <==uncertain_firing== 20615 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #59533: <==negation-removal== 20615 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #76200: <==unclosure== 57164 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #90103: <==negation-removal== 44979 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bd_not_survivorat_s_p7)))))

    (:action sensesurvivors_d_p8_s
        :precondition (and (at_d_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #32008: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bd_survivorat_s_p8))

                    ; #49862: <==closure== 32008 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pd_survivorat_s_p8))

                    ; #67566: origin
                    (obs_p8)

                    ; #74484: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bd_not_survivorat_s_p8))

                    ; #77831: <==closure== 74484 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pd_not_survivorat_s_p8))

                    ; #13447: <==negation-removal== 32008 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #19950: <==negation-removal== 49862 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #36565: <==negation-removal== 74484 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #36887: <==negation-removal== 67566 (pos)
                    (not (not_obs_p8))

                    ; #51104: <==negation-removal== 77831 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #52492: <==uncertain_firing== 32008 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #57608: <==unclosure== 52492 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bd_not_survivorat_s_p8)))))

    (:action sensesurvivors_d_p9_s
        :precondition (and (at_d_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #25394: <==closure== 79973 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pd_survivorat_s_p9))

                    ; #54022: <==closure== 70385 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pd_not_survivorat_s_p9))

                    ; #65800: origin
                    (obs_p9)

                    ; #70385: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bd_not_survivorat_s_p9))

                    ; #79973: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bd_survivorat_s_p9))

                    ; #10560: <==uncertain_firing== 79973 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #11515: <==unclosure== 10560 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #19047: <==negation-removal== 79973 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #30597: <==negation-removal== 65800 (pos)
                    (not (not_obs_p9))

                    ; #44711: <==negation-removal== 25394 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #64550: <==negation-removal== 54022 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #85719: <==negation-removal== 70385 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pd_survivorat_s_p9)))))

)