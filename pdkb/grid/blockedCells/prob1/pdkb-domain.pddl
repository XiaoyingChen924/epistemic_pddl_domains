(define (domain grid)

    (:requirements :strips :conditional-effects)

    (:predicates
        (not_nothing)
        (not_at_a_p1)
        (not_at_a_p2)
        (not_at_a_p3)
        (not_at_a_p4)
        (not_at_a_p5)
        (not_at_a_p6)
        (not_at_a_p7)
        (not_at_a_p8)
        (not_at_a_p9)
        (not_at_b_p1)
        (not_at_b_p2)
        (not_at_b_p3)
        (not_at_b_p4)
        (not_at_b_p5)
        (not_at_b_p6)
        (not_at_b_p7)
        (not_at_b_p8)
        (not_at_b_p9)
        (not_at_c_p1)
        (not_at_c_p2)
        (not_at_c_p3)
        (not_at_c_p4)
        (not_at_c_p5)
        (not_at_c_p6)
        (not_at_c_p7)
        (not_at_c_p8)
        (not_at_c_p9)
        (not_at_d_p1)
        (not_at_d_p2)
        (not_at_d_p3)
        (not_at_d_p4)
        (not_at_d_p5)
        (not_at_d_p6)
        (not_at_d_p7)
        (not_at_d_p8)
        (not_at_d_p9)
        (not_blocked_p1)
        (not_blocked_p2)
        (not_blocked_p3)
        (not_blocked_p4)
        (not_blocked_p5)
        (not_blocked_p6)
        (not_blocked_p7)
        (not_blocked_p8)
        (not_blocked_p9)
        (not_checked_p1)
        (not_checked_p2)
        (not_checked_p3)
        (not_checked_p4)
        (not_checked_p5)
        (not_checked_p6)
        (not_checked_p7)
        (not_checked_p8)
        (not_checked_p9)
        (not_communicate)
        (not_communicating_a_a)
        (not_communicating_a_b)
        (not_communicating_a_c)
        (not_communicating_a_d)
        (not_communicating_b_a)
        (not_communicating_b_b)
        (not_communicating_b_c)
        (not_communicating_b_d)
        (not_communicating_c_a)
        (not_communicating_c_b)
        (not_communicating_c_c)
        (not_communicating_c_d)
        (not_communicating_d_a)
        (not_communicating_d_b)
        (not_communicating_d_c)
        (not_communicating_d_d)
        (not_force)
        (not_hiddenblockedcell_p1)
        (not_hiddenblockedcell_p2)
        (not_hiddenblockedcell_p3)
        (not_hiddenblockedcell_p4)
        (not_hiddenblockedcell_p5)
        (not_hiddenblockedcell_p6)
        (not_hiddenblockedcell_p7)
        (not_hiddenblockedcell_p8)
        (not_hiddenblockedcell_p9)
        (not_hiddensurvivorat_s_p1)
        (not_hiddensurvivorat_s_p2)
        (not_hiddensurvivorat_s_p3)
        (not_hiddensurvivorat_s_p4)
        (not_hiddensurvivorat_s_p5)
        (not_hiddensurvivorat_s_p6)
        (not_hiddensurvivorat_s_p7)
        (not_hiddensurvivorat_s_p8)
        (not_hiddensurvivorat_s_p9)
        (not_msg_p1)
        (not_msg_p2)
        (not_msg_p3)
        (not_msg_p4)
        (not_msg_p5)
        (not_msg_p6)
        (not_msg_p7)
        (not_msg_p8)
        (not_msg_p9)
        (not_obs_p1)
        (not_obs_p2)
        (not_obs_p3)
        (not_obs_p4)
        (not_obs_p5)
        (not_obs_p6)
        (not_obs_p7)
        (not_obs_p8)
        (not_obs_p9)
        (not_obss_p1)
        (not_obss_p2)
        (not_obss_p3)
        (not_obss_p4)
        (not_obss_p5)
        (not_obss_p6)
        (not_obss_p7)
        (not_obss_p8)
        (not_obss_p9)
        (not_planner)
        (not_succ_p1_p1)
        (not_succ_p1_p2)
        (not_succ_p1_p3)
        (not_succ_p1_p4)
        (not_succ_p1_p5)
        (not_succ_p1_p6)
        (not_succ_p1_p7)
        (not_succ_p1_p8)
        (not_succ_p1_p9)
        (not_succ_p2_p1)
        (not_succ_p2_p2)
        (not_succ_p2_p3)
        (not_succ_p2_p4)
        (not_succ_p2_p5)
        (not_succ_p2_p6)
        (not_succ_p2_p7)
        (not_succ_p2_p8)
        (not_succ_p2_p9)
        (not_succ_p3_p1)
        (not_succ_p3_p2)
        (not_succ_p3_p3)
        (not_succ_p3_p4)
        (not_succ_p3_p5)
        (not_succ_p3_p6)
        (not_succ_p3_p7)
        (not_succ_p3_p8)
        (not_succ_p3_p9)
        (not_succ_p4_p1)
        (not_succ_p4_p2)
        (not_succ_p4_p3)
        (not_succ_p4_p4)
        (not_succ_p4_p5)
        (not_succ_p4_p6)
        (not_succ_p4_p7)
        (not_succ_p4_p8)
        (not_succ_p4_p9)
        (not_succ_p5_p1)
        (not_succ_p5_p2)
        (not_succ_p5_p3)
        (not_succ_p5_p4)
        (not_succ_p5_p5)
        (not_succ_p5_p6)
        (not_succ_p5_p7)
        (not_succ_p5_p8)
        (not_succ_p5_p9)
        (not_succ_p6_p1)
        (not_succ_p6_p2)
        (not_succ_p6_p3)
        (not_succ_p6_p4)
        (not_succ_p6_p5)
        (not_succ_p6_p6)
        (not_succ_p6_p7)
        (not_succ_p6_p8)
        (not_succ_p6_p9)
        (not_succ_p7_p1)
        (not_succ_p7_p2)
        (not_succ_p7_p3)
        (not_succ_p7_p4)
        (not_succ_p7_p5)
        (not_succ_p7_p6)
        (not_succ_p7_p7)
        (not_succ_p7_p8)
        (not_succ_p7_p9)
        (not_succ_p8_p1)
        (not_succ_p8_p2)
        (not_succ_p8_p3)
        (not_succ_p8_p4)
        (not_succ_p8_p5)
        (not_succ_p8_p6)
        (not_succ_p8_p7)
        (not_succ_p8_p8)
        (not_succ_p8_p9)
        (not_succ_p9_p1)
        (not_succ_p9_p2)
        (not_succ_p9_p3)
        (not_succ_p9_p4)
        (not_succ_p9_p5)
        (not_succ_p9_p6)
        (not_succ_p9_p7)
        (not_succ_p9_p8)
        (not_succ_p9_p9)
        (not_survivorat_s_p1)
        (not_survivorat_s_p2)
        (not_survivorat_s_p3)
        (not_survivorat_s_p4)
        (not_survivorat_s_p5)
        (not_survivorat_s_p6)
        (not_survivorat_s_p7)
        (not_survivorat_s_p8)
        (not_survivorat_s_p9)
        (not_to)
        (nothing)
        (Ba_not_nothing)
        (Ba_not_blocked_p1)
        (Ba_not_blocked_p2)
        (Ba_not_blocked_p3)
        (Ba_not_blocked_p4)
        (Ba_not_blocked_p5)
        (Ba_not_blocked_p6)
        (Ba_not_blocked_p7)
        (Ba_not_blocked_p8)
        (Ba_not_blocked_p9)
        (Ba_not_communicate)
        (Ba_not_communicating_a_a)
        (Ba_not_communicating_a_b)
        (Ba_not_communicating_a_c)
        (Ba_not_communicating_a_d)
        (Ba_not_communicating_b_a)
        (Ba_not_communicating_b_b)
        (Ba_not_communicating_b_c)
        (Ba_not_communicating_b_d)
        (Ba_not_communicating_c_a)
        (Ba_not_communicating_c_b)
        (Ba_not_communicating_c_c)
        (Ba_not_communicating_c_d)
        (Ba_not_communicating_d_a)
        (Ba_not_communicating_d_b)
        (Ba_not_communicating_d_c)
        (Ba_not_communicating_d_d)
        (Ba_not_force)
        (Ba_not_hiddenblockedcell_p1)
        (Ba_not_hiddenblockedcell_p2)
        (Ba_not_hiddenblockedcell_p3)
        (Ba_not_hiddenblockedcell_p4)
        (Ba_not_hiddenblockedcell_p5)
        (Ba_not_hiddenblockedcell_p6)
        (Ba_not_hiddenblockedcell_p7)
        (Ba_not_hiddenblockedcell_p8)
        (Ba_not_hiddenblockedcell_p9)
        (Ba_not_hiddensurvivorat_s_p1)
        (Ba_not_hiddensurvivorat_s_p2)
        (Ba_not_hiddensurvivorat_s_p3)
        (Ba_not_hiddensurvivorat_s_p4)
        (Ba_not_hiddensurvivorat_s_p5)
        (Ba_not_hiddensurvivorat_s_p6)
        (Ba_not_hiddensurvivorat_s_p7)
        (Ba_not_hiddensurvivorat_s_p8)
        (Ba_not_hiddensurvivorat_s_p9)
        (Ba_not_msg_p1)
        (Ba_not_msg_p2)
        (Ba_not_msg_p3)
        (Ba_not_msg_p4)
        (Ba_not_msg_p5)
        (Ba_not_msg_p6)
        (Ba_not_msg_p7)
        (Ba_not_msg_p8)
        (Ba_not_msg_p9)
        (Ba_not_obss_p1)
        (Ba_not_obss_p2)
        (Ba_not_obss_p3)
        (Ba_not_obss_p4)
        (Ba_not_obss_p5)
        (Ba_not_obss_p6)
        (Ba_not_obss_p7)
        (Ba_not_obss_p8)
        (Ba_not_obss_p9)
        (Ba_not_planner)
        (Ba_not_survivorat_s_p1)
        (Ba_not_survivorat_s_p2)
        (Ba_not_survivorat_s_p3)
        (Ba_not_survivorat_s_p4)
        (Ba_not_survivorat_s_p5)
        (Ba_not_survivorat_s_p6)
        (Ba_not_survivorat_s_p7)
        (Ba_not_survivorat_s_p8)
        (Ba_not_survivorat_s_p9)
        (Ba_not_to)
        (Ba_nothing)
        (Ba_blocked_p1)
        (Ba_blocked_p2)
        (Ba_blocked_p3)
        (Ba_blocked_p4)
        (Ba_blocked_p5)
        (Ba_blocked_p6)
        (Ba_blocked_p7)
        (Ba_blocked_p8)
        (Ba_blocked_p9)
        (Ba_communicate)
        (Ba_communicating_a_a)
        (Ba_communicating_a_b)
        (Ba_communicating_a_c)
        (Ba_communicating_a_d)
        (Ba_communicating_b_a)
        (Ba_communicating_b_b)
        (Ba_communicating_b_c)
        (Ba_communicating_b_d)
        (Ba_communicating_c_a)
        (Ba_communicating_c_b)
        (Ba_communicating_c_c)
        (Ba_communicating_c_d)
        (Ba_communicating_d_a)
        (Ba_communicating_d_b)
        (Ba_communicating_d_c)
        (Ba_communicating_d_d)
        (Ba_force)
        (Ba_hiddenblockedcell_p1)
        (Ba_hiddenblockedcell_p2)
        (Ba_hiddenblockedcell_p3)
        (Ba_hiddenblockedcell_p4)
        (Ba_hiddenblockedcell_p5)
        (Ba_hiddenblockedcell_p6)
        (Ba_hiddenblockedcell_p7)
        (Ba_hiddenblockedcell_p8)
        (Ba_hiddenblockedcell_p9)
        (Ba_hiddensurvivorat_s_p1)
        (Ba_hiddensurvivorat_s_p2)
        (Ba_hiddensurvivorat_s_p3)
        (Ba_hiddensurvivorat_s_p4)
        (Ba_hiddensurvivorat_s_p5)
        (Ba_hiddensurvivorat_s_p6)
        (Ba_hiddensurvivorat_s_p7)
        (Ba_hiddensurvivorat_s_p8)
        (Ba_hiddensurvivorat_s_p9)
        (Ba_msg_p1)
        (Ba_msg_p2)
        (Ba_msg_p3)
        (Ba_msg_p4)
        (Ba_msg_p5)
        (Ba_msg_p6)
        (Ba_msg_p7)
        (Ba_msg_p8)
        (Ba_msg_p9)
        (Ba_obss_p1)
        (Ba_obss_p2)
        (Ba_obss_p3)
        (Ba_obss_p4)
        (Ba_obss_p5)
        (Ba_obss_p6)
        (Ba_obss_p7)
        (Ba_obss_p8)
        (Ba_obss_p9)
        (Ba_planner)
        (Ba_survivorat_s_p1)
        (Ba_survivorat_s_p2)
        (Ba_survivorat_s_p3)
        (Ba_survivorat_s_p4)
        (Ba_survivorat_s_p5)
        (Ba_survivorat_s_p6)
        (Ba_survivorat_s_p7)
        (Ba_survivorat_s_p8)
        (Ba_survivorat_s_p9)
        (Ba_to)
        (Bb_not_nothing)
        (Bb_not_blocked_p1)
        (Bb_not_blocked_p2)
        (Bb_not_blocked_p3)
        (Bb_not_blocked_p4)
        (Bb_not_blocked_p5)
        (Bb_not_blocked_p6)
        (Bb_not_blocked_p7)
        (Bb_not_blocked_p8)
        (Bb_not_blocked_p9)
        (Bb_not_communicate)
        (Bb_not_communicating_a_a)
        (Bb_not_communicating_a_b)
        (Bb_not_communicating_a_c)
        (Bb_not_communicating_a_d)
        (Bb_not_communicating_b_a)
        (Bb_not_communicating_b_b)
        (Bb_not_communicating_b_c)
        (Bb_not_communicating_b_d)
        (Bb_not_communicating_c_a)
        (Bb_not_communicating_c_b)
        (Bb_not_communicating_c_c)
        (Bb_not_communicating_c_d)
        (Bb_not_communicating_d_a)
        (Bb_not_communicating_d_b)
        (Bb_not_communicating_d_c)
        (Bb_not_communicating_d_d)
        (Bb_not_force)
        (Bb_not_hiddenblockedcell_p1)
        (Bb_not_hiddenblockedcell_p2)
        (Bb_not_hiddenblockedcell_p3)
        (Bb_not_hiddenblockedcell_p4)
        (Bb_not_hiddenblockedcell_p5)
        (Bb_not_hiddenblockedcell_p6)
        (Bb_not_hiddenblockedcell_p7)
        (Bb_not_hiddenblockedcell_p8)
        (Bb_not_hiddenblockedcell_p9)
        (Bb_not_hiddensurvivorat_s_p1)
        (Bb_not_hiddensurvivorat_s_p2)
        (Bb_not_hiddensurvivorat_s_p3)
        (Bb_not_hiddensurvivorat_s_p4)
        (Bb_not_hiddensurvivorat_s_p5)
        (Bb_not_hiddensurvivorat_s_p6)
        (Bb_not_hiddensurvivorat_s_p7)
        (Bb_not_hiddensurvivorat_s_p8)
        (Bb_not_hiddensurvivorat_s_p9)
        (Bb_not_msg_p1)
        (Bb_not_msg_p2)
        (Bb_not_msg_p3)
        (Bb_not_msg_p4)
        (Bb_not_msg_p5)
        (Bb_not_msg_p6)
        (Bb_not_msg_p7)
        (Bb_not_msg_p8)
        (Bb_not_msg_p9)
        (Bb_not_obss_p1)
        (Bb_not_obss_p2)
        (Bb_not_obss_p3)
        (Bb_not_obss_p4)
        (Bb_not_obss_p5)
        (Bb_not_obss_p6)
        (Bb_not_obss_p7)
        (Bb_not_obss_p8)
        (Bb_not_obss_p9)
        (Bb_not_planner)
        (Bb_not_survivorat_s_p1)
        (Bb_not_survivorat_s_p2)
        (Bb_not_survivorat_s_p3)
        (Bb_not_survivorat_s_p4)
        (Bb_not_survivorat_s_p5)
        (Bb_not_survivorat_s_p6)
        (Bb_not_survivorat_s_p7)
        (Bb_not_survivorat_s_p8)
        (Bb_not_survivorat_s_p9)
        (Bb_not_to)
        (Bb_nothing)
        (Bb_blocked_p1)
        (Bb_blocked_p2)
        (Bb_blocked_p3)
        (Bb_blocked_p4)
        (Bb_blocked_p5)
        (Bb_blocked_p6)
        (Bb_blocked_p7)
        (Bb_blocked_p8)
        (Bb_blocked_p9)
        (Bb_communicate)
        (Bb_communicating_a_a)
        (Bb_communicating_a_b)
        (Bb_communicating_a_c)
        (Bb_communicating_a_d)
        (Bb_communicating_b_a)
        (Bb_communicating_b_b)
        (Bb_communicating_b_c)
        (Bb_communicating_b_d)
        (Bb_communicating_c_a)
        (Bb_communicating_c_b)
        (Bb_communicating_c_c)
        (Bb_communicating_c_d)
        (Bb_communicating_d_a)
        (Bb_communicating_d_b)
        (Bb_communicating_d_c)
        (Bb_communicating_d_d)
        (Bb_force)
        (Bb_hiddenblockedcell_p1)
        (Bb_hiddenblockedcell_p2)
        (Bb_hiddenblockedcell_p3)
        (Bb_hiddenblockedcell_p4)
        (Bb_hiddenblockedcell_p5)
        (Bb_hiddenblockedcell_p6)
        (Bb_hiddenblockedcell_p7)
        (Bb_hiddenblockedcell_p8)
        (Bb_hiddenblockedcell_p9)
        (Bb_hiddensurvivorat_s_p1)
        (Bb_hiddensurvivorat_s_p2)
        (Bb_hiddensurvivorat_s_p3)
        (Bb_hiddensurvivorat_s_p4)
        (Bb_hiddensurvivorat_s_p5)
        (Bb_hiddensurvivorat_s_p6)
        (Bb_hiddensurvivorat_s_p7)
        (Bb_hiddensurvivorat_s_p8)
        (Bb_hiddensurvivorat_s_p9)
        (Bb_msg_p1)
        (Bb_msg_p2)
        (Bb_msg_p3)
        (Bb_msg_p4)
        (Bb_msg_p5)
        (Bb_msg_p6)
        (Bb_msg_p7)
        (Bb_msg_p8)
        (Bb_msg_p9)
        (Bb_obss_p1)
        (Bb_obss_p2)
        (Bb_obss_p3)
        (Bb_obss_p4)
        (Bb_obss_p5)
        (Bb_obss_p6)
        (Bb_obss_p7)
        (Bb_obss_p8)
        (Bb_obss_p9)
        (Bb_planner)
        (Bb_survivorat_s_p1)
        (Bb_survivorat_s_p2)
        (Bb_survivorat_s_p3)
        (Bb_survivorat_s_p4)
        (Bb_survivorat_s_p5)
        (Bb_survivorat_s_p6)
        (Bb_survivorat_s_p7)
        (Bb_survivorat_s_p8)
        (Bb_survivorat_s_p9)
        (Bb_to)
        (Bc_not_nothing)
        (Bc_not_blocked_p1)
        (Bc_not_blocked_p2)
        (Bc_not_blocked_p3)
        (Bc_not_blocked_p4)
        (Bc_not_blocked_p5)
        (Bc_not_blocked_p6)
        (Bc_not_blocked_p7)
        (Bc_not_blocked_p8)
        (Bc_not_blocked_p9)
        (Bc_not_communicate)
        (Bc_not_communicating_a_a)
        (Bc_not_communicating_a_b)
        (Bc_not_communicating_a_c)
        (Bc_not_communicating_a_d)
        (Bc_not_communicating_b_a)
        (Bc_not_communicating_b_b)
        (Bc_not_communicating_b_c)
        (Bc_not_communicating_b_d)
        (Bc_not_communicating_c_a)
        (Bc_not_communicating_c_b)
        (Bc_not_communicating_c_c)
        (Bc_not_communicating_c_d)
        (Bc_not_communicating_d_a)
        (Bc_not_communicating_d_b)
        (Bc_not_communicating_d_c)
        (Bc_not_communicating_d_d)
        (Bc_not_force)
        (Bc_not_hiddenblockedcell_p1)
        (Bc_not_hiddenblockedcell_p2)
        (Bc_not_hiddenblockedcell_p3)
        (Bc_not_hiddenblockedcell_p4)
        (Bc_not_hiddenblockedcell_p5)
        (Bc_not_hiddenblockedcell_p6)
        (Bc_not_hiddenblockedcell_p7)
        (Bc_not_hiddenblockedcell_p8)
        (Bc_not_hiddenblockedcell_p9)
        (Bc_not_hiddensurvivorat_s_p1)
        (Bc_not_hiddensurvivorat_s_p2)
        (Bc_not_hiddensurvivorat_s_p3)
        (Bc_not_hiddensurvivorat_s_p4)
        (Bc_not_hiddensurvivorat_s_p5)
        (Bc_not_hiddensurvivorat_s_p6)
        (Bc_not_hiddensurvivorat_s_p7)
        (Bc_not_hiddensurvivorat_s_p8)
        (Bc_not_hiddensurvivorat_s_p9)
        (Bc_not_msg_p1)
        (Bc_not_msg_p2)
        (Bc_not_msg_p3)
        (Bc_not_msg_p4)
        (Bc_not_msg_p5)
        (Bc_not_msg_p6)
        (Bc_not_msg_p7)
        (Bc_not_msg_p8)
        (Bc_not_msg_p9)
        (Bc_not_obss_p1)
        (Bc_not_obss_p2)
        (Bc_not_obss_p3)
        (Bc_not_obss_p4)
        (Bc_not_obss_p5)
        (Bc_not_obss_p6)
        (Bc_not_obss_p7)
        (Bc_not_obss_p8)
        (Bc_not_obss_p9)
        (Bc_not_planner)
        (Bc_not_survivorat_s_p1)
        (Bc_not_survivorat_s_p2)
        (Bc_not_survivorat_s_p3)
        (Bc_not_survivorat_s_p4)
        (Bc_not_survivorat_s_p5)
        (Bc_not_survivorat_s_p6)
        (Bc_not_survivorat_s_p7)
        (Bc_not_survivorat_s_p8)
        (Bc_not_survivorat_s_p9)
        (Bc_not_to)
        (Bc_nothing)
        (Bc_blocked_p1)
        (Bc_blocked_p2)
        (Bc_blocked_p3)
        (Bc_blocked_p4)
        (Bc_blocked_p5)
        (Bc_blocked_p6)
        (Bc_blocked_p7)
        (Bc_blocked_p8)
        (Bc_blocked_p9)
        (Bc_communicate)
        (Bc_communicating_a_a)
        (Bc_communicating_a_b)
        (Bc_communicating_a_c)
        (Bc_communicating_a_d)
        (Bc_communicating_b_a)
        (Bc_communicating_b_b)
        (Bc_communicating_b_c)
        (Bc_communicating_b_d)
        (Bc_communicating_c_a)
        (Bc_communicating_c_b)
        (Bc_communicating_c_c)
        (Bc_communicating_c_d)
        (Bc_communicating_d_a)
        (Bc_communicating_d_b)
        (Bc_communicating_d_c)
        (Bc_communicating_d_d)
        (Bc_force)
        (Bc_hiddenblockedcell_p1)
        (Bc_hiddenblockedcell_p2)
        (Bc_hiddenblockedcell_p3)
        (Bc_hiddenblockedcell_p4)
        (Bc_hiddenblockedcell_p5)
        (Bc_hiddenblockedcell_p6)
        (Bc_hiddenblockedcell_p7)
        (Bc_hiddenblockedcell_p8)
        (Bc_hiddenblockedcell_p9)
        (Bc_hiddensurvivorat_s_p1)
        (Bc_hiddensurvivorat_s_p2)
        (Bc_hiddensurvivorat_s_p3)
        (Bc_hiddensurvivorat_s_p4)
        (Bc_hiddensurvivorat_s_p5)
        (Bc_hiddensurvivorat_s_p6)
        (Bc_hiddensurvivorat_s_p7)
        (Bc_hiddensurvivorat_s_p8)
        (Bc_hiddensurvivorat_s_p9)
        (Bc_msg_p1)
        (Bc_msg_p2)
        (Bc_msg_p3)
        (Bc_msg_p4)
        (Bc_msg_p5)
        (Bc_msg_p6)
        (Bc_msg_p7)
        (Bc_msg_p8)
        (Bc_msg_p9)
        (Bc_obss_p1)
        (Bc_obss_p2)
        (Bc_obss_p3)
        (Bc_obss_p4)
        (Bc_obss_p5)
        (Bc_obss_p6)
        (Bc_obss_p7)
        (Bc_obss_p8)
        (Bc_obss_p9)
        (Bc_planner)
        (Bc_survivorat_s_p1)
        (Bc_survivorat_s_p2)
        (Bc_survivorat_s_p3)
        (Bc_survivorat_s_p4)
        (Bc_survivorat_s_p5)
        (Bc_survivorat_s_p6)
        (Bc_survivorat_s_p7)
        (Bc_survivorat_s_p8)
        (Bc_survivorat_s_p9)
        (Bc_to)
        (Bd_not_nothing)
        (Bd_not_blocked_p1)
        (Bd_not_blocked_p2)
        (Bd_not_blocked_p3)
        (Bd_not_blocked_p4)
        (Bd_not_blocked_p5)
        (Bd_not_blocked_p6)
        (Bd_not_blocked_p7)
        (Bd_not_blocked_p8)
        (Bd_not_blocked_p9)
        (Bd_not_communicate)
        (Bd_not_communicating_a_a)
        (Bd_not_communicating_a_b)
        (Bd_not_communicating_a_c)
        (Bd_not_communicating_a_d)
        (Bd_not_communicating_b_a)
        (Bd_not_communicating_b_b)
        (Bd_not_communicating_b_c)
        (Bd_not_communicating_b_d)
        (Bd_not_communicating_c_a)
        (Bd_not_communicating_c_b)
        (Bd_not_communicating_c_c)
        (Bd_not_communicating_c_d)
        (Bd_not_communicating_d_a)
        (Bd_not_communicating_d_b)
        (Bd_not_communicating_d_c)
        (Bd_not_communicating_d_d)
        (Bd_not_force)
        (Bd_not_hiddenblockedcell_p1)
        (Bd_not_hiddenblockedcell_p2)
        (Bd_not_hiddenblockedcell_p3)
        (Bd_not_hiddenblockedcell_p4)
        (Bd_not_hiddenblockedcell_p5)
        (Bd_not_hiddenblockedcell_p6)
        (Bd_not_hiddenblockedcell_p7)
        (Bd_not_hiddenblockedcell_p8)
        (Bd_not_hiddenblockedcell_p9)
        (Bd_not_hiddensurvivorat_s_p1)
        (Bd_not_hiddensurvivorat_s_p2)
        (Bd_not_hiddensurvivorat_s_p3)
        (Bd_not_hiddensurvivorat_s_p4)
        (Bd_not_hiddensurvivorat_s_p5)
        (Bd_not_hiddensurvivorat_s_p6)
        (Bd_not_hiddensurvivorat_s_p7)
        (Bd_not_hiddensurvivorat_s_p8)
        (Bd_not_hiddensurvivorat_s_p9)
        (Bd_not_msg_p1)
        (Bd_not_msg_p2)
        (Bd_not_msg_p3)
        (Bd_not_msg_p4)
        (Bd_not_msg_p5)
        (Bd_not_msg_p6)
        (Bd_not_msg_p7)
        (Bd_not_msg_p8)
        (Bd_not_msg_p9)
        (Bd_not_obss_p1)
        (Bd_not_obss_p2)
        (Bd_not_obss_p3)
        (Bd_not_obss_p4)
        (Bd_not_obss_p5)
        (Bd_not_obss_p6)
        (Bd_not_obss_p7)
        (Bd_not_obss_p8)
        (Bd_not_obss_p9)
        (Bd_not_planner)
        (Bd_not_survivorat_s_p1)
        (Bd_not_survivorat_s_p2)
        (Bd_not_survivorat_s_p3)
        (Bd_not_survivorat_s_p4)
        (Bd_not_survivorat_s_p5)
        (Bd_not_survivorat_s_p6)
        (Bd_not_survivorat_s_p7)
        (Bd_not_survivorat_s_p8)
        (Bd_not_survivorat_s_p9)
        (Bd_not_to)
        (Bd_nothing)
        (Bd_blocked_p1)
        (Bd_blocked_p2)
        (Bd_blocked_p3)
        (Bd_blocked_p4)
        (Bd_blocked_p5)
        (Bd_blocked_p6)
        (Bd_blocked_p7)
        (Bd_blocked_p8)
        (Bd_blocked_p9)
        (Bd_communicate)
        (Bd_communicating_a_a)
        (Bd_communicating_a_b)
        (Bd_communicating_a_c)
        (Bd_communicating_a_d)
        (Bd_communicating_b_a)
        (Bd_communicating_b_b)
        (Bd_communicating_b_c)
        (Bd_communicating_b_d)
        (Bd_communicating_c_a)
        (Bd_communicating_c_b)
        (Bd_communicating_c_c)
        (Bd_communicating_c_d)
        (Bd_communicating_d_a)
        (Bd_communicating_d_b)
        (Bd_communicating_d_c)
        (Bd_communicating_d_d)
        (Bd_force)
        (Bd_hiddenblockedcell_p1)
        (Bd_hiddenblockedcell_p2)
        (Bd_hiddenblockedcell_p3)
        (Bd_hiddenblockedcell_p4)
        (Bd_hiddenblockedcell_p5)
        (Bd_hiddenblockedcell_p6)
        (Bd_hiddenblockedcell_p7)
        (Bd_hiddenblockedcell_p8)
        (Bd_hiddenblockedcell_p9)
        (Bd_hiddensurvivorat_s_p1)
        (Bd_hiddensurvivorat_s_p2)
        (Bd_hiddensurvivorat_s_p3)
        (Bd_hiddensurvivorat_s_p4)
        (Bd_hiddensurvivorat_s_p5)
        (Bd_hiddensurvivorat_s_p6)
        (Bd_hiddensurvivorat_s_p7)
        (Bd_hiddensurvivorat_s_p8)
        (Bd_hiddensurvivorat_s_p9)
        (Bd_msg_p1)
        (Bd_msg_p2)
        (Bd_msg_p3)
        (Bd_msg_p4)
        (Bd_msg_p5)
        (Bd_msg_p6)
        (Bd_msg_p7)
        (Bd_msg_p8)
        (Bd_msg_p9)
        (Bd_obss_p1)
        (Bd_obss_p2)
        (Bd_obss_p3)
        (Bd_obss_p4)
        (Bd_obss_p5)
        (Bd_obss_p6)
        (Bd_obss_p7)
        (Bd_obss_p8)
        (Bd_obss_p9)
        (Bd_planner)
        (Bd_survivorat_s_p1)
        (Bd_survivorat_s_p2)
        (Bd_survivorat_s_p3)
        (Bd_survivorat_s_p4)
        (Bd_survivorat_s_p5)
        (Bd_survivorat_s_p6)
        (Bd_survivorat_s_p7)
        (Bd_survivorat_s_p8)
        (Bd_survivorat_s_p9)
        (Bd_to)
        (Pa_not_nothing)
        (Pa_not_blocked_p1)
        (Pa_not_blocked_p2)
        (Pa_not_blocked_p3)
        (Pa_not_blocked_p4)
        (Pa_not_blocked_p5)
        (Pa_not_blocked_p6)
        (Pa_not_blocked_p7)
        (Pa_not_blocked_p8)
        (Pa_not_blocked_p9)
        (Pa_not_communicate)
        (Pa_not_communicating_a_a)
        (Pa_not_communicating_a_b)
        (Pa_not_communicating_a_c)
        (Pa_not_communicating_a_d)
        (Pa_not_communicating_b_a)
        (Pa_not_communicating_b_b)
        (Pa_not_communicating_b_c)
        (Pa_not_communicating_b_d)
        (Pa_not_communicating_c_a)
        (Pa_not_communicating_c_b)
        (Pa_not_communicating_c_c)
        (Pa_not_communicating_c_d)
        (Pa_not_communicating_d_a)
        (Pa_not_communicating_d_b)
        (Pa_not_communicating_d_c)
        (Pa_not_communicating_d_d)
        (Pa_not_force)
        (Pa_not_hiddenblockedcell_p1)
        (Pa_not_hiddenblockedcell_p2)
        (Pa_not_hiddenblockedcell_p3)
        (Pa_not_hiddenblockedcell_p4)
        (Pa_not_hiddenblockedcell_p5)
        (Pa_not_hiddenblockedcell_p6)
        (Pa_not_hiddenblockedcell_p7)
        (Pa_not_hiddenblockedcell_p8)
        (Pa_not_hiddenblockedcell_p9)
        (Pa_not_hiddensurvivorat_s_p1)
        (Pa_not_hiddensurvivorat_s_p2)
        (Pa_not_hiddensurvivorat_s_p3)
        (Pa_not_hiddensurvivorat_s_p4)
        (Pa_not_hiddensurvivorat_s_p5)
        (Pa_not_hiddensurvivorat_s_p6)
        (Pa_not_hiddensurvivorat_s_p7)
        (Pa_not_hiddensurvivorat_s_p8)
        (Pa_not_hiddensurvivorat_s_p9)
        (Pa_not_msg_p1)
        (Pa_not_msg_p2)
        (Pa_not_msg_p3)
        (Pa_not_msg_p4)
        (Pa_not_msg_p5)
        (Pa_not_msg_p6)
        (Pa_not_msg_p7)
        (Pa_not_msg_p8)
        (Pa_not_msg_p9)
        (Pa_not_obss_p1)
        (Pa_not_obss_p2)
        (Pa_not_obss_p3)
        (Pa_not_obss_p4)
        (Pa_not_obss_p5)
        (Pa_not_obss_p6)
        (Pa_not_obss_p7)
        (Pa_not_obss_p8)
        (Pa_not_obss_p9)
        (Pa_not_planner)
        (Pa_not_survivorat_s_p1)
        (Pa_not_survivorat_s_p2)
        (Pa_not_survivorat_s_p3)
        (Pa_not_survivorat_s_p4)
        (Pa_not_survivorat_s_p5)
        (Pa_not_survivorat_s_p6)
        (Pa_not_survivorat_s_p7)
        (Pa_not_survivorat_s_p8)
        (Pa_not_survivorat_s_p9)
        (Pa_not_to)
        (Pa_nothing)
        (Pa_blocked_p1)
        (Pa_blocked_p2)
        (Pa_blocked_p3)
        (Pa_blocked_p4)
        (Pa_blocked_p5)
        (Pa_blocked_p6)
        (Pa_blocked_p7)
        (Pa_blocked_p8)
        (Pa_blocked_p9)
        (Pa_communicate)
        (Pa_communicating_a_a)
        (Pa_communicating_a_b)
        (Pa_communicating_a_c)
        (Pa_communicating_a_d)
        (Pa_communicating_b_a)
        (Pa_communicating_b_b)
        (Pa_communicating_b_c)
        (Pa_communicating_b_d)
        (Pa_communicating_c_a)
        (Pa_communicating_c_b)
        (Pa_communicating_c_c)
        (Pa_communicating_c_d)
        (Pa_communicating_d_a)
        (Pa_communicating_d_b)
        (Pa_communicating_d_c)
        (Pa_communicating_d_d)
        (Pa_force)
        (Pa_hiddenblockedcell_p1)
        (Pa_hiddenblockedcell_p2)
        (Pa_hiddenblockedcell_p3)
        (Pa_hiddenblockedcell_p4)
        (Pa_hiddenblockedcell_p5)
        (Pa_hiddenblockedcell_p6)
        (Pa_hiddenblockedcell_p7)
        (Pa_hiddenblockedcell_p8)
        (Pa_hiddenblockedcell_p9)
        (Pa_hiddensurvivorat_s_p1)
        (Pa_hiddensurvivorat_s_p2)
        (Pa_hiddensurvivorat_s_p3)
        (Pa_hiddensurvivorat_s_p4)
        (Pa_hiddensurvivorat_s_p5)
        (Pa_hiddensurvivorat_s_p6)
        (Pa_hiddensurvivorat_s_p7)
        (Pa_hiddensurvivorat_s_p8)
        (Pa_hiddensurvivorat_s_p9)
        (Pa_msg_p1)
        (Pa_msg_p2)
        (Pa_msg_p3)
        (Pa_msg_p4)
        (Pa_msg_p5)
        (Pa_msg_p6)
        (Pa_msg_p7)
        (Pa_msg_p8)
        (Pa_msg_p9)
        (Pa_obss_p1)
        (Pa_obss_p2)
        (Pa_obss_p3)
        (Pa_obss_p4)
        (Pa_obss_p5)
        (Pa_obss_p6)
        (Pa_obss_p7)
        (Pa_obss_p8)
        (Pa_obss_p9)
        (Pa_planner)
        (Pa_survivorat_s_p1)
        (Pa_survivorat_s_p2)
        (Pa_survivorat_s_p3)
        (Pa_survivorat_s_p4)
        (Pa_survivorat_s_p5)
        (Pa_survivorat_s_p6)
        (Pa_survivorat_s_p7)
        (Pa_survivorat_s_p8)
        (Pa_survivorat_s_p9)
        (Pa_to)
        (Pb_not_nothing)
        (Pb_not_blocked_p1)
        (Pb_not_blocked_p2)
        (Pb_not_blocked_p3)
        (Pb_not_blocked_p4)
        (Pb_not_blocked_p5)
        (Pb_not_blocked_p6)
        (Pb_not_blocked_p7)
        (Pb_not_blocked_p8)
        (Pb_not_blocked_p9)
        (Pb_not_communicate)
        (Pb_not_communicating_a_a)
        (Pb_not_communicating_a_b)
        (Pb_not_communicating_a_c)
        (Pb_not_communicating_a_d)
        (Pb_not_communicating_b_a)
        (Pb_not_communicating_b_b)
        (Pb_not_communicating_b_c)
        (Pb_not_communicating_b_d)
        (Pb_not_communicating_c_a)
        (Pb_not_communicating_c_b)
        (Pb_not_communicating_c_c)
        (Pb_not_communicating_c_d)
        (Pb_not_communicating_d_a)
        (Pb_not_communicating_d_b)
        (Pb_not_communicating_d_c)
        (Pb_not_communicating_d_d)
        (Pb_not_force)
        (Pb_not_hiddenblockedcell_p1)
        (Pb_not_hiddenblockedcell_p2)
        (Pb_not_hiddenblockedcell_p3)
        (Pb_not_hiddenblockedcell_p4)
        (Pb_not_hiddenblockedcell_p5)
        (Pb_not_hiddenblockedcell_p6)
        (Pb_not_hiddenblockedcell_p7)
        (Pb_not_hiddenblockedcell_p8)
        (Pb_not_hiddenblockedcell_p9)
        (Pb_not_hiddensurvivorat_s_p1)
        (Pb_not_hiddensurvivorat_s_p2)
        (Pb_not_hiddensurvivorat_s_p3)
        (Pb_not_hiddensurvivorat_s_p4)
        (Pb_not_hiddensurvivorat_s_p5)
        (Pb_not_hiddensurvivorat_s_p6)
        (Pb_not_hiddensurvivorat_s_p7)
        (Pb_not_hiddensurvivorat_s_p8)
        (Pb_not_hiddensurvivorat_s_p9)
        (Pb_not_msg_p1)
        (Pb_not_msg_p2)
        (Pb_not_msg_p3)
        (Pb_not_msg_p4)
        (Pb_not_msg_p5)
        (Pb_not_msg_p6)
        (Pb_not_msg_p7)
        (Pb_not_msg_p8)
        (Pb_not_msg_p9)
        (Pb_not_obss_p1)
        (Pb_not_obss_p2)
        (Pb_not_obss_p3)
        (Pb_not_obss_p4)
        (Pb_not_obss_p5)
        (Pb_not_obss_p6)
        (Pb_not_obss_p7)
        (Pb_not_obss_p8)
        (Pb_not_obss_p9)
        (Pb_not_planner)
        (Pb_not_survivorat_s_p1)
        (Pb_not_survivorat_s_p2)
        (Pb_not_survivorat_s_p3)
        (Pb_not_survivorat_s_p4)
        (Pb_not_survivorat_s_p5)
        (Pb_not_survivorat_s_p6)
        (Pb_not_survivorat_s_p7)
        (Pb_not_survivorat_s_p8)
        (Pb_not_survivorat_s_p9)
        (Pb_not_to)
        (Pb_nothing)
        (Pb_blocked_p1)
        (Pb_blocked_p2)
        (Pb_blocked_p3)
        (Pb_blocked_p4)
        (Pb_blocked_p5)
        (Pb_blocked_p6)
        (Pb_blocked_p7)
        (Pb_blocked_p8)
        (Pb_blocked_p9)
        (Pb_communicate)
        (Pb_communicating_a_a)
        (Pb_communicating_a_b)
        (Pb_communicating_a_c)
        (Pb_communicating_a_d)
        (Pb_communicating_b_a)
        (Pb_communicating_b_b)
        (Pb_communicating_b_c)
        (Pb_communicating_b_d)
        (Pb_communicating_c_a)
        (Pb_communicating_c_b)
        (Pb_communicating_c_c)
        (Pb_communicating_c_d)
        (Pb_communicating_d_a)
        (Pb_communicating_d_b)
        (Pb_communicating_d_c)
        (Pb_communicating_d_d)
        (Pb_force)
        (Pb_hiddenblockedcell_p1)
        (Pb_hiddenblockedcell_p2)
        (Pb_hiddenblockedcell_p3)
        (Pb_hiddenblockedcell_p4)
        (Pb_hiddenblockedcell_p5)
        (Pb_hiddenblockedcell_p6)
        (Pb_hiddenblockedcell_p7)
        (Pb_hiddenblockedcell_p8)
        (Pb_hiddenblockedcell_p9)
        (Pb_hiddensurvivorat_s_p1)
        (Pb_hiddensurvivorat_s_p2)
        (Pb_hiddensurvivorat_s_p3)
        (Pb_hiddensurvivorat_s_p4)
        (Pb_hiddensurvivorat_s_p5)
        (Pb_hiddensurvivorat_s_p6)
        (Pb_hiddensurvivorat_s_p7)
        (Pb_hiddensurvivorat_s_p8)
        (Pb_hiddensurvivorat_s_p9)
        (Pb_msg_p1)
        (Pb_msg_p2)
        (Pb_msg_p3)
        (Pb_msg_p4)
        (Pb_msg_p5)
        (Pb_msg_p6)
        (Pb_msg_p7)
        (Pb_msg_p8)
        (Pb_msg_p9)
        (Pb_obss_p1)
        (Pb_obss_p2)
        (Pb_obss_p3)
        (Pb_obss_p4)
        (Pb_obss_p5)
        (Pb_obss_p6)
        (Pb_obss_p7)
        (Pb_obss_p8)
        (Pb_obss_p9)
        (Pb_planner)
        (Pb_survivorat_s_p1)
        (Pb_survivorat_s_p2)
        (Pb_survivorat_s_p3)
        (Pb_survivorat_s_p4)
        (Pb_survivorat_s_p5)
        (Pb_survivorat_s_p6)
        (Pb_survivorat_s_p7)
        (Pb_survivorat_s_p8)
        (Pb_survivorat_s_p9)
        (Pb_to)
        (Pc_not_nothing)
        (Pc_not_blocked_p1)
        (Pc_not_blocked_p2)
        (Pc_not_blocked_p3)
        (Pc_not_blocked_p4)
        (Pc_not_blocked_p5)
        (Pc_not_blocked_p6)
        (Pc_not_blocked_p7)
        (Pc_not_blocked_p8)
        (Pc_not_blocked_p9)
        (Pc_not_communicate)
        (Pc_not_communicating_a_a)
        (Pc_not_communicating_a_b)
        (Pc_not_communicating_a_c)
        (Pc_not_communicating_a_d)
        (Pc_not_communicating_b_a)
        (Pc_not_communicating_b_b)
        (Pc_not_communicating_b_c)
        (Pc_not_communicating_b_d)
        (Pc_not_communicating_c_a)
        (Pc_not_communicating_c_b)
        (Pc_not_communicating_c_c)
        (Pc_not_communicating_c_d)
        (Pc_not_communicating_d_a)
        (Pc_not_communicating_d_b)
        (Pc_not_communicating_d_c)
        (Pc_not_communicating_d_d)
        (Pc_not_force)
        (Pc_not_hiddenblockedcell_p1)
        (Pc_not_hiddenblockedcell_p2)
        (Pc_not_hiddenblockedcell_p3)
        (Pc_not_hiddenblockedcell_p4)
        (Pc_not_hiddenblockedcell_p5)
        (Pc_not_hiddenblockedcell_p6)
        (Pc_not_hiddenblockedcell_p7)
        (Pc_not_hiddenblockedcell_p8)
        (Pc_not_hiddenblockedcell_p9)
        (Pc_not_hiddensurvivorat_s_p1)
        (Pc_not_hiddensurvivorat_s_p2)
        (Pc_not_hiddensurvivorat_s_p3)
        (Pc_not_hiddensurvivorat_s_p4)
        (Pc_not_hiddensurvivorat_s_p5)
        (Pc_not_hiddensurvivorat_s_p6)
        (Pc_not_hiddensurvivorat_s_p7)
        (Pc_not_hiddensurvivorat_s_p8)
        (Pc_not_hiddensurvivorat_s_p9)
        (Pc_not_msg_p1)
        (Pc_not_msg_p2)
        (Pc_not_msg_p3)
        (Pc_not_msg_p4)
        (Pc_not_msg_p5)
        (Pc_not_msg_p6)
        (Pc_not_msg_p7)
        (Pc_not_msg_p8)
        (Pc_not_msg_p9)
        (Pc_not_obss_p1)
        (Pc_not_obss_p2)
        (Pc_not_obss_p3)
        (Pc_not_obss_p4)
        (Pc_not_obss_p5)
        (Pc_not_obss_p6)
        (Pc_not_obss_p7)
        (Pc_not_obss_p8)
        (Pc_not_obss_p9)
        (Pc_not_planner)
        (Pc_not_survivorat_s_p1)
        (Pc_not_survivorat_s_p2)
        (Pc_not_survivorat_s_p3)
        (Pc_not_survivorat_s_p4)
        (Pc_not_survivorat_s_p5)
        (Pc_not_survivorat_s_p6)
        (Pc_not_survivorat_s_p7)
        (Pc_not_survivorat_s_p8)
        (Pc_not_survivorat_s_p9)
        (Pc_not_to)
        (Pc_nothing)
        (Pc_blocked_p1)
        (Pc_blocked_p2)
        (Pc_blocked_p3)
        (Pc_blocked_p4)
        (Pc_blocked_p5)
        (Pc_blocked_p6)
        (Pc_blocked_p7)
        (Pc_blocked_p8)
        (Pc_blocked_p9)
        (Pc_communicate)
        (Pc_communicating_a_a)
        (Pc_communicating_a_b)
        (Pc_communicating_a_c)
        (Pc_communicating_a_d)
        (Pc_communicating_b_a)
        (Pc_communicating_b_b)
        (Pc_communicating_b_c)
        (Pc_communicating_b_d)
        (Pc_communicating_c_a)
        (Pc_communicating_c_b)
        (Pc_communicating_c_c)
        (Pc_communicating_c_d)
        (Pc_communicating_d_a)
        (Pc_communicating_d_b)
        (Pc_communicating_d_c)
        (Pc_communicating_d_d)
        (Pc_force)
        (Pc_hiddenblockedcell_p1)
        (Pc_hiddenblockedcell_p2)
        (Pc_hiddenblockedcell_p3)
        (Pc_hiddenblockedcell_p4)
        (Pc_hiddenblockedcell_p5)
        (Pc_hiddenblockedcell_p6)
        (Pc_hiddenblockedcell_p7)
        (Pc_hiddenblockedcell_p8)
        (Pc_hiddenblockedcell_p9)
        (Pc_hiddensurvivorat_s_p1)
        (Pc_hiddensurvivorat_s_p2)
        (Pc_hiddensurvivorat_s_p3)
        (Pc_hiddensurvivorat_s_p4)
        (Pc_hiddensurvivorat_s_p5)
        (Pc_hiddensurvivorat_s_p6)
        (Pc_hiddensurvivorat_s_p7)
        (Pc_hiddensurvivorat_s_p8)
        (Pc_hiddensurvivorat_s_p9)
        (Pc_msg_p1)
        (Pc_msg_p2)
        (Pc_msg_p3)
        (Pc_msg_p4)
        (Pc_msg_p5)
        (Pc_msg_p6)
        (Pc_msg_p7)
        (Pc_msg_p8)
        (Pc_msg_p9)
        (Pc_obss_p1)
        (Pc_obss_p2)
        (Pc_obss_p3)
        (Pc_obss_p4)
        (Pc_obss_p5)
        (Pc_obss_p6)
        (Pc_obss_p7)
        (Pc_obss_p8)
        (Pc_obss_p9)
        (Pc_planner)
        (Pc_survivorat_s_p1)
        (Pc_survivorat_s_p2)
        (Pc_survivorat_s_p3)
        (Pc_survivorat_s_p4)
        (Pc_survivorat_s_p5)
        (Pc_survivorat_s_p6)
        (Pc_survivorat_s_p7)
        (Pc_survivorat_s_p8)
        (Pc_survivorat_s_p9)
        (Pc_to)
        (Pd_not_nothing)
        (Pd_not_blocked_p1)
        (Pd_not_blocked_p2)
        (Pd_not_blocked_p3)
        (Pd_not_blocked_p4)
        (Pd_not_blocked_p5)
        (Pd_not_blocked_p6)
        (Pd_not_blocked_p7)
        (Pd_not_blocked_p8)
        (Pd_not_blocked_p9)
        (Pd_not_communicate)
        (Pd_not_communicating_a_a)
        (Pd_not_communicating_a_b)
        (Pd_not_communicating_a_c)
        (Pd_not_communicating_a_d)
        (Pd_not_communicating_b_a)
        (Pd_not_communicating_b_b)
        (Pd_not_communicating_b_c)
        (Pd_not_communicating_b_d)
        (Pd_not_communicating_c_a)
        (Pd_not_communicating_c_b)
        (Pd_not_communicating_c_c)
        (Pd_not_communicating_c_d)
        (Pd_not_communicating_d_a)
        (Pd_not_communicating_d_b)
        (Pd_not_communicating_d_c)
        (Pd_not_communicating_d_d)
        (Pd_not_force)
        (Pd_not_hiddenblockedcell_p1)
        (Pd_not_hiddenblockedcell_p2)
        (Pd_not_hiddenblockedcell_p3)
        (Pd_not_hiddenblockedcell_p4)
        (Pd_not_hiddenblockedcell_p5)
        (Pd_not_hiddenblockedcell_p6)
        (Pd_not_hiddenblockedcell_p7)
        (Pd_not_hiddenblockedcell_p8)
        (Pd_not_hiddenblockedcell_p9)
        (Pd_not_hiddensurvivorat_s_p1)
        (Pd_not_hiddensurvivorat_s_p2)
        (Pd_not_hiddensurvivorat_s_p3)
        (Pd_not_hiddensurvivorat_s_p4)
        (Pd_not_hiddensurvivorat_s_p5)
        (Pd_not_hiddensurvivorat_s_p6)
        (Pd_not_hiddensurvivorat_s_p7)
        (Pd_not_hiddensurvivorat_s_p8)
        (Pd_not_hiddensurvivorat_s_p9)
        (Pd_not_msg_p1)
        (Pd_not_msg_p2)
        (Pd_not_msg_p3)
        (Pd_not_msg_p4)
        (Pd_not_msg_p5)
        (Pd_not_msg_p6)
        (Pd_not_msg_p7)
        (Pd_not_msg_p8)
        (Pd_not_msg_p9)
        (Pd_not_obss_p1)
        (Pd_not_obss_p2)
        (Pd_not_obss_p3)
        (Pd_not_obss_p4)
        (Pd_not_obss_p5)
        (Pd_not_obss_p6)
        (Pd_not_obss_p7)
        (Pd_not_obss_p8)
        (Pd_not_obss_p9)
        (Pd_not_planner)
        (Pd_not_survivorat_s_p1)
        (Pd_not_survivorat_s_p2)
        (Pd_not_survivorat_s_p3)
        (Pd_not_survivorat_s_p4)
        (Pd_not_survivorat_s_p5)
        (Pd_not_survivorat_s_p6)
        (Pd_not_survivorat_s_p7)
        (Pd_not_survivorat_s_p8)
        (Pd_not_survivorat_s_p9)
        (Pd_not_to)
        (Pd_nothing)
        (Pd_blocked_p1)
        (Pd_blocked_p2)
        (Pd_blocked_p3)
        (Pd_blocked_p4)
        (Pd_blocked_p5)
        (Pd_blocked_p6)
        (Pd_blocked_p7)
        (Pd_blocked_p8)
        (Pd_blocked_p9)
        (Pd_communicate)
        (Pd_communicating_a_a)
        (Pd_communicating_a_b)
        (Pd_communicating_a_c)
        (Pd_communicating_a_d)
        (Pd_communicating_b_a)
        (Pd_communicating_b_b)
        (Pd_communicating_b_c)
        (Pd_communicating_b_d)
        (Pd_communicating_c_a)
        (Pd_communicating_c_b)
        (Pd_communicating_c_c)
        (Pd_communicating_c_d)
        (Pd_communicating_d_a)
        (Pd_communicating_d_b)
        (Pd_communicating_d_c)
        (Pd_communicating_d_d)
        (Pd_force)
        (Pd_hiddenblockedcell_p1)
        (Pd_hiddenblockedcell_p2)
        (Pd_hiddenblockedcell_p3)
        (Pd_hiddenblockedcell_p4)
        (Pd_hiddenblockedcell_p5)
        (Pd_hiddenblockedcell_p6)
        (Pd_hiddenblockedcell_p7)
        (Pd_hiddenblockedcell_p8)
        (Pd_hiddenblockedcell_p9)
        (Pd_hiddensurvivorat_s_p1)
        (Pd_hiddensurvivorat_s_p2)
        (Pd_hiddensurvivorat_s_p3)
        (Pd_hiddensurvivorat_s_p4)
        (Pd_hiddensurvivorat_s_p5)
        (Pd_hiddensurvivorat_s_p6)
        (Pd_hiddensurvivorat_s_p7)
        (Pd_hiddensurvivorat_s_p8)
        (Pd_hiddensurvivorat_s_p9)
        (Pd_msg_p1)
        (Pd_msg_p2)
        (Pd_msg_p3)
        (Pd_msg_p4)
        (Pd_msg_p5)
        (Pd_msg_p6)
        (Pd_msg_p7)
        (Pd_msg_p8)
        (Pd_msg_p9)
        (Pd_obss_p1)
        (Pd_obss_p2)
        (Pd_obss_p3)
        (Pd_obss_p4)
        (Pd_obss_p5)
        (Pd_obss_p6)
        (Pd_obss_p7)
        (Pd_obss_p8)
        (Pd_obss_p9)
        (Pd_planner)
        (Pd_survivorat_s_p1)
        (Pd_survivorat_s_p2)
        (Pd_survivorat_s_p3)
        (Pd_survivorat_s_p4)
        (Pd_survivorat_s_p5)
        (Pd_survivorat_s_p6)
        (Pd_survivorat_s_p7)
        (Pd_survivorat_s_p8)
        (Pd_survivorat_s_p9)
        (Pd_to)
        (at_a_p1)
        (at_a_p2)
        (at_a_p3)
        (at_a_p4)
        (at_a_p5)
        (at_a_p6)
        (at_a_p7)
        (at_a_p8)
        (at_a_p9)
        (at_b_p1)
        (at_b_p2)
        (at_b_p3)
        (at_b_p4)
        (at_b_p5)
        (at_b_p6)
        (at_b_p7)
        (at_b_p8)
        (at_b_p9)
        (at_c_p1)
        (at_c_p2)
        (at_c_p3)
        (at_c_p4)
        (at_c_p5)
        (at_c_p6)
        (at_c_p7)
        (at_c_p8)
        (at_c_p9)
        (at_d_p1)
        (at_d_p2)
        (at_d_p3)
        (at_d_p4)
        (at_d_p5)
        (at_d_p6)
        (at_d_p7)
        (at_d_p8)
        (at_d_p9)
        (blocked_p1)
        (blocked_p2)
        (blocked_p3)
        (blocked_p4)
        (blocked_p5)
        (blocked_p6)
        (blocked_p7)
        (blocked_p8)
        (blocked_p9)
        (checked_p1)
        (checked_p2)
        (checked_p3)
        (checked_p4)
        (checked_p5)
        (checked_p6)
        (checked_p7)
        (checked_p8)
        (checked_p9)
        (communicate)
        (communicating_a_a)
        (communicating_a_b)
        (communicating_a_c)
        (communicating_a_d)
        (communicating_b_a)
        (communicating_b_b)
        (communicating_b_c)
        (communicating_b_d)
        (communicating_c_a)
        (communicating_c_b)
        (communicating_c_c)
        (communicating_c_d)
        (communicating_d_a)
        (communicating_d_b)
        (communicating_d_c)
        (communicating_d_d)
        (force)
        (hiddenblockedcell_p1)
        (hiddenblockedcell_p2)
        (hiddenblockedcell_p3)
        (hiddenblockedcell_p4)
        (hiddenblockedcell_p5)
        (hiddenblockedcell_p6)
        (hiddenblockedcell_p7)
        (hiddenblockedcell_p8)
        (hiddenblockedcell_p9)
        (hiddensurvivorat_s_p1)
        (hiddensurvivorat_s_p2)
        (hiddensurvivorat_s_p3)
        (hiddensurvivorat_s_p4)
        (hiddensurvivorat_s_p5)
        (hiddensurvivorat_s_p6)
        (hiddensurvivorat_s_p7)
        (hiddensurvivorat_s_p8)
        (hiddensurvivorat_s_p9)
        (msg_p1)
        (msg_p2)
        (msg_p3)
        (msg_p4)
        (msg_p5)
        (msg_p6)
        (msg_p7)
        (msg_p8)
        (msg_p9)
        (obs_p1)
        (obs_p2)
        (obs_p3)
        (obs_p4)
        (obs_p5)
        (obs_p6)
        (obs_p7)
        (obs_p8)
        (obs_p9)
        (obss_p1)
        (obss_p2)
        (obss_p3)
        (obss_p4)
        (obss_p5)
        (obss_p6)
        (obss_p7)
        (obss_p8)
        (obss_p9)
        (planner)
        (succ_p1_p1)
        (succ_p1_p2)
        (succ_p1_p3)
        (succ_p1_p4)
        (succ_p1_p5)
        (succ_p1_p6)
        (succ_p1_p7)
        (succ_p1_p8)
        (succ_p1_p9)
        (succ_p2_p1)
        (succ_p2_p2)
        (succ_p2_p3)
        (succ_p2_p4)
        (succ_p2_p5)
        (succ_p2_p6)
        (succ_p2_p7)
        (succ_p2_p8)
        (succ_p2_p9)
        (succ_p3_p1)
        (succ_p3_p2)
        (succ_p3_p3)
        (succ_p3_p4)
        (succ_p3_p5)
        (succ_p3_p6)
        (succ_p3_p7)
        (succ_p3_p8)
        (succ_p3_p9)
        (succ_p4_p1)
        (succ_p4_p2)
        (succ_p4_p3)
        (succ_p4_p4)
        (succ_p4_p5)
        (succ_p4_p6)
        (succ_p4_p7)
        (succ_p4_p8)
        (succ_p4_p9)
        (succ_p5_p1)
        (succ_p5_p2)
        (succ_p5_p3)
        (succ_p5_p4)
        (succ_p5_p5)
        (succ_p5_p6)
        (succ_p5_p7)
        (succ_p5_p8)
        (succ_p5_p9)
        (succ_p6_p1)
        (succ_p6_p2)
        (succ_p6_p3)
        (succ_p6_p4)
        (succ_p6_p5)
        (succ_p6_p6)
        (succ_p6_p7)
        (succ_p6_p8)
        (succ_p6_p9)
        (succ_p7_p1)
        (succ_p7_p2)
        (succ_p7_p3)
        (succ_p7_p4)
        (succ_p7_p5)
        (succ_p7_p6)
        (succ_p7_p7)
        (succ_p7_p8)
        (succ_p7_p9)
        (succ_p8_p1)
        (succ_p8_p2)
        (succ_p8_p3)
        (succ_p8_p4)
        (succ_p8_p5)
        (succ_p8_p6)
        (succ_p8_p7)
        (succ_p8_p8)
        (succ_p8_p9)
        (succ_p9_p1)
        (succ_p9_p2)
        (succ_p9_p3)
        (succ_p9_p4)
        (succ_p9_p5)
        (succ_p9_p6)
        (succ_p9_p7)
        (succ_p9_p8)
        (succ_p9_p9)
        (survivorat_s_p1)
        (survivorat_s_p2)
        (survivorat_s_p3)
        (survivorat_s_p4)
        (survivorat_s_p5)
        (survivorat_s_p6)
        (survivorat_s_p7)
        (survivorat_s_p8)
        (survivorat_s_p9)
        (to)
    )

    (:action commsurvivor_p1_a_s
        :precondition (and (Ba_survivorat_s_p1)
                           (Pa_survivorat_s_p1)
                           (at_a_p1))
        :effect (and
                    ; #19701: <==closure== 21457 (pos)
                    (Pa_msg_p1)

                    ; #21457: <==commonly_known== 81791 (pos)
                    (Ba_msg_p1)

                    ; #24760: origin
                    (Bc_survivorat_s_p1)

                    ; #25096: <==closure== 80111 (pos)
                    (Pb_survivorat_s_p1)

                    ; #25327: <==closure== 36295 (pos)
                    (Pd_survivorat_s_p1)

                    ; #28721: <==commonly_known== 81791 (pos)
                    (Bc_msg_p1)

                    ; #36295: origin
                    (Bd_survivorat_s_p1)

                    ; #50304: <==closure== 61342 (pos)
                    (Pd_msg_p1)

                    ; #54188: <==closure== 55366 (pos)
                    (Pb_msg_p1)

                    ; #54852: origin
                    (Ba_survivorat_s_p1)

                    ; #55366: <==commonly_known== 81791 (pos)
                    (Bb_msg_p1)

                    ; #60086: <==closure== 24760 (pos)
                    (Pc_survivorat_s_p1)

                    ; #61342: <==commonly_known== 81791 (pos)
                    (Bd_msg_p1)

                    ; #80111: origin
                    (Bb_survivorat_s_p1)

                    ; #81791: origin
                    (msg_p1)

                    ; #82174: <==closure== 28721 (pos)
                    (Pc_msg_p1)

                    ; #97095: <==closure== 54852 (pos)
                    (Pa_survivorat_s_p1)

                    ; #12156: <==negation-removal== 36295 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #23594: <==negation-removal== 54188 (pos)
                    (not (Bb_not_msg_p1))

                    ; #24052: <==negation-removal== 97095 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #26224: <==negation-removal== 81791 (pos)
                    (not (not_msg_p1))

                    ; #27668: <==negation-removal== 61342 (pos)
                    (not (Pd_not_msg_p1))

                    ; #30877: <==negation-removal== 82174 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41670: <==negation-removal== 19701 (pos)
                    (not (Ba_not_msg_p1))

                    ; #43359: <==negation-removal== 50304 (pos)
                    (not (Bd_not_msg_p1))

                    ; #48515: <==negation-removal== 28721 (pos)
                    (not (Pc_not_msg_p1))

                    ; #53779: <==negation-removal== 21457 (pos)
                    (not (Pa_not_msg_p1))

                    ; #54647: <==negation-removal== 54852 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #59608: <==negation-removal== 24760 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #59841: <==negation-removal== 55366 (pos)
                    (not (Pb_not_msg_p1))

                    ; #63346: <==negation-removal== 25327 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #70568: <==negation-removal== 25096 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #89408: <==negation-removal== 80111 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #95933: <==negation-removal== 60086 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_b_s
        :precondition (and (Pb_survivorat_s_p1)
                           (Bb_survivorat_s_p1)
                           (at_b_p1))
        :effect (and
                    ; #19701: <==closure== 21457 (pos)
                    (Pa_msg_p1)

                    ; #21457: <==commonly_known== 81791 (pos)
                    (Ba_msg_p1)

                    ; #24760: origin
                    (Bc_survivorat_s_p1)

                    ; #25096: <==closure== 80111 (pos)
                    (Pb_survivorat_s_p1)

                    ; #25327: <==closure== 36295 (pos)
                    (Pd_survivorat_s_p1)

                    ; #28721: <==commonly_known== 81791 (pos)
                    (Bc_msg_p1)

                    ; #36295: origin
                    (Bd_survivorat_s_p1)

                    ; #50304: <==closure== 61342 (pos)
                    (Pd_msg_p1)

                    ; #54188: <==closure== 55366 (pos)
                    (Pb_msg_p1)

                    ; #54852: origin
                    (Ba_survivorat_s_p1)

                    ; #55366: <==commonly_known== 81791 (pos)
                    (Bb_msg_p1)

                    ; #60086: <==closure== 24760 (pos)
                    (Pc_survivorat_s_p1)

                    ; #61342: <==commonly_known== 81791 (pos)
                    (Bd_msg_p1)

                    ; #80111: origin
                    (Bb_survivorat_s_p1)

                    ; #81791: origin
                    (msg_p1)

                    ; #82174: <==closure== 28721 (pos)
                    (Pc_msg_p1)

                    ; #97095: <==closure== 54852 (pos)
                    (Pa_survivorat_s_p1)

                    ; #12156: <==negation-removal== 36295 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #23594: <==negation-removal== 54188 (pos)
                    (not (Bb_not_msg_p1))

                    ; #24052: <==negation-removal== 97095 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #26224: <==negation-removal== 81791 (pos)
                    (not (not_msg_p1))

                    ; #27668: <==negation-removal== 61342 (pos)
                    (not (Pd_not_msg_p1))

                    ; #30877: <==negation-removal== 82174 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41670: <==negation-removal== 19701 (pos)
                    (not (Ba_not_msg_p1))

                    ; #43359: <==negation-removal== 50304 (pos)
                    (not (Bd_not_msg_p1))

                    ; #48515: <==negation-removal== 28721 (pos)
                    (not (Pc_not_msg_p1))

                    ; #53779: <==negation-removal== 21457 (pos)
                    (not (Pa_not_msg_p1))

                    ; #54647: <==negation-removal== 54852 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #59608: <==negation-removal== 24760 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #59841: <==negation-removal== 55366 (pos)
                    (not (Pb_not_msg_p1))

                    ; #63346: <==negation-removal== 25327 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #70568: <==negation-removal== 25096 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #89408: <==negation-removal== 80111 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #95933: <==negation-removal== 60086 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_c_s
        :precondition (and (Bc_survivorat_s_p1)
                           (Pc_survivorat_s_p1)
                           (at_c_p1))
        :effect (and
                    ; #19701: <==closure== 21457 (pos)
                    (Pa_msg_p1)

                    ; #21457: <==commonly_known== 81791 (pos)
                    (Ba_msg_p1)

                    ; #24760: origin
                    (Bc_survivorat_s_p1)

                    ; #25096: <==closure== 80111 (pos)
                    (Pb_survivorat_s_p1)

                    ; #25327: <==closure== 36295 (pos)
                    (Pd_survivorat_s_p1)

                    ; #28721: <==commonly_known== 81791 (pos)
                    (Bc_msg_p1)

                    ; #36295: origin
                    (Bd_survivorat_s_p1)

                    ; #50304: <==closure== 61342 (pos)
                    (Pd_msg_p1)

                    ; #54188: <==closure== 55366 (pos)
                    (Pb_msg_p1)

                    ; #54852: origin
                    (Ba_survivorat_s_p1)

                    ; #55366: <==commonly_known== 81791 (pos)
                    (Bb_msg_p1)

                    ; #60086: <==closure== 24760 (pos)
                    (Pc_survivorat_s_p1)

                    ; #61342: <==commonly_known== 81791 (pos)
                    (Bd_msg_p1)

                    ; #80111: origin
                    (Bb_survivorat_s_p1)

                    ; #81791: origin
                    (msg_p1)

                    ; #82174: <==closure== 28721 (pos)
                    (Pc_msg_p1)

                    ; #97095: <==closure== 54852 (pos)
                    (Pa_survivorat_s_p1)

                    ; #12156: <==negation-removal== 36295 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #23594: <==negation-removal== 54188 (pos)
                    (not (Bb_not_msg_p1))

                    ; #24052: <==negation-removal== 97095 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #26224: <==negation-removal== 81791 (pos)
                    (not (not_msg_p1))

                    ; #27668: <==negation-removal== 61342 (pos)
                    (not (Pd_not_msg_p1))

                    ; #30877: <==negation-removal== 82174 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41670: <==negation-removal== 19701 (pos)
                    (not (Ba_not_msg_p1))

                    ; #43359: <==negation-removal== 50304 (pos)
                    (not (Bd_not_msg_p1))

                    ; #48515: <==negation-removal== 28721 (pos)
                    (not (Pc_not_msg_p1))

                    ; #53779: <==negation-removal== 21457 (pos)
                    (not (Pa_not_msg_p1))

                    ; #54647: <==negation-removal== 54852 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #59608: <==negation-removal== 24760 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #59841: <==negation-removal== 55366 (pos)
                    (not (Pb_not_msg_p1))

                    ; #63346: <==negation-removal== 25327 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #70568: <==negation-removal== 25096 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #89408: <==negation-removal== 80111 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #95933: <==negation-removal== 60086 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p1_d_s
        :precondition (and (at_d_p1)
                           (Bd_survivorat_s_p1)
                           (Pd_survivorat_s_p1))
        :effect (and
                    ; #19701: <==closure== 21457 (pos)
                    (Pa_msg_p1)

                    ; #21457: <==commonly_known== 81791 (pos)
                    (Ba_msg_p1)

                    ; #24760: origin
                    (Bc_survivorat_s_p1)

                    ; #25096: <==closure== 80111 (pos)
                    (Pb_survivorat_s_p1)

                    ; #25327: <==closure== 36295 (pos)
                    (Pd_survivorat_s_p1)

                    ; #28721: <==commonly_known== 81791 (pos)
                    (Bc_msg_p1)

                    ; #36295: origin
                    (Bd_survivorat_s_p1)

                    ; #50304: <==closure== 61342 (pos)
                    (Pd_msg_p1)

                    ; #54188: <==closure== 55366 (pos)
                    (Pb_msg_p1)

                    ; #54852: origin
                    (Ba_survivorat_s_p1)

                    ; #55366: <==commonly_known== 81791 (pos)
                    (Bb_msg_p1)

                    ; #60086: <==closure== 24760 (pos)
                    (Pc_survivorat_s_p1)

                    ; #61342: <==commonly_known== 81791 (pos)
                    (Bd_msg_p1)

                    ; #80111: origin
                    (Bb_survivorat_s_p1)

                    ; #81791: origin
                    (msg_p1)

                    ; #82174: <==closure== 28721 (pos)
                    (Pc_msg_p1)

                    ; #97095: <==closure== 54852 (pos)
                    (Pa_survivorat_s_p1)

                    ; #12156: <==negation-removal== 36295 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #23594: <==negation-removal== 54188 (pos)
                    (not (Bb_not_msg_p1))

                    ; #24052: <==negation-removal== 97095 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #26224: <==negation-removal== 81791 (pos)
                    (not (not_msg_p1))

                    ; #27668: <==negation-removal== 61342 (pos)
                    (not (Pd_not_msg_p1))

                    ; #30877: <==negation-removal== 82174 (pos)
                    (not (Bc_not_msg_p1))

                    ; #41670: <==negation-removal== 19701 (pos)
                    (not (Ba_not_msg_p1))

                    ; #43359: <==negation-removal== 50304 (pos)
                    (not (Bd_not_msg_p1))

                    ; #48515: <==negation-removal== 28721 (pos)
                    (not (Pc_not_msg_p1))

                    ; #53779: <==negation-removal== 21457 (pos)
                    (not (Pa_not_msg_p1))

                    ; #54647: <==negation-removal== 54852 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #59608: <==negation-removal== 24760 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #59841: <==negation-removal== 55366 (pos)
                    (not (Pb_not_msg_p1))

                    ; #63346: <==negation-removal== 25327 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #70568: <==negation-removal== 25096 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #89408: <==negation-removal== 80111 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #95933: <==negation-removal== 60086 (pos)
                    (not (Bc_not_survivorat_s_p1))))

    (:action commsurvivor_p2_a_s
        :precondition (and (Ba_survivorat_s_p2)
                           (Pa_survivorat_s_p2)
                           (at_a_p2))
        :effect (and
                    ; #15182: <==closure== 79708 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25082: <==closure== 42345 (pos)
                    (Pb_msg_p2)

                    ; #32284: <==closure== 65959 (pos)
                    (Pc_survivorat_s_p2)

                    ; #34844: <==commonly_known== 51758 (pos)
                    (Ba_msg_p2)

                    ; #36341: <==closure== 87794 (pos)
                    (Pc_msg_p2)

                    ; #36555: <==commonly_known== 51758 (pos)
                    (Bd_msg_p2)

                    ; #37103: <==closure== 78864 (pos)
                    (Pb_survivorat_s_p2)

                    ; #37686: <==closure== 34844 (pos)
                    (Pa_msg_p2)

                    ; #42345: <==commonly_known== 51758 (pos)
                    (Bb_msg_p2)

                    ; #51758: origin
                    (msg_p2)

                    ; #53403: origin
                    (Ba_survivorat_s_p2)

                    ; #65959: origin
                    (Bc_survivorat_s_p2)

                    ; #67450: <==closure== 53403 (pos)
                    (Pa_survivorat_s_p2)

                    ; #78864: origin
                    (Bb_survivorat_s_p2)

                    ; #79708: origin
                    (Bd_survivorat_s_p2)

                    ; #87469: <==closure== 36555 (pos)
                    (Pd_msg_p2)

                    ; #87794: <==commonly_known== 51758 (pos)
                    (Bc_msg_p2)

                    ; #14401: <==negation-removal== 78864 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #16570: <==negation-removal== 32284 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #19182: <==negation-removal== 87794 (pos)
                    (not (Pc_not_msg_p2))

                    ; #21913: <==negation-removal== 87469 (pos)
                    (not (Bd_not_msg_p2))

                    ; #25341: <==negation-removal== 25082 (pos)
                    (not (Bb_not_msg_p2))

                    ; #25401: <==negation-removal== 36341 (pos)
                    (not (Bc_not_msg_p2))

                    ; #40555: <==negation-removal== 36555 (pos)
                    (not (Pd_not_msg_p2))

                    ; #43889: <==negation-removal== 79708 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #49475: <==negation-removal== 15182 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #59538: <==negation-removal== 42345 (pos)
                    (not (Pb_not_msg_p2))

                    ; #64654: <==negation-removal== 34844 (pos)
                    (not (Pa_not_msg_p2))

                    ; #68213: <==negation-removal== 37686 (pos)
                    (not (Ba_not_msg_p2))

                    ; #68662: <==negation-removal== 65959 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73428: <==negation-removal== 67450 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #76284: <==negation-removal== 51758 (pos)
                    (not (not_msg_p2))

                    ; #78499: <==negation-removal== 37103 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #87937: <==negation-removal== 53403 (pos)
                    (not (Pa_not_survivorat_s_p2))))

    (:action commsurvivor_p2_b_s
        :precondition (and (at_b_p2)
                           (Bb_survivorat_s_p2)
                           (Pb_survivorat_s_p2))
        :effect (and
                    ; #15182: <==closure== 79708 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25082: <==closure== 42345 (pos)
                    (Pb_msg_p2)

                    ; #32284: <==closure== 65959 (pos)
                    (Pc_survivorat_s_p2)

                    ; #34844: <==commonly_known== 51758 (pos)
                    (Ba_msg_p2)

                    ; #36341: <==closure== 87794 (pos)
                    (Pc_msg_p2)

                    ; #36555: <==commonly_known== 51758 (pos)
                    (Bd_msg_p2)

                    ; #37103: <==closure== 78864 (pos)
                    (Pb_survivorat_s_p2)

                    ; #37686: <==closure== 34844 (pos)
                    (Pa_msg_p2)

                    ; #42345: <==commonly_known== 51758 (pos)
                    (Bb_msg_p2)

                    ; #51758: origin
                    (msg_p2)

                    ; #53403: origin
                    (Ba_survivorat_s_p2)

                    ; #65959: origin
                    (Bc_survivorat_s_p2)

                    ; #67450: <==closure== 53403 (pos)
                    (Pa_survivorat_s_p2)

                    ; #78864: origin
                    (Bb_survivorat_s_p2)

                    ; #79708: origin
                    (Bd_survivorat_s_p2)

                    ; #87469: <==closure== 36555 (pos)
                    (Pd_msg_p2)

                    ; #87794: <==commonly_known== 51758 (pos)
                    (Bc_msg_p2)

                    ; #14401: <==negation-removal== 78864 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #16570: <==negation-removal== 32284 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #19182: <==negation-removal== 87794 (pos)
                    (not (Pc_not_msg_p2))

                    ; #21913: <==negation-removal== 87469 (pos)
                    (not (Bd_not_msg_p2))

                    ; #25341: <==negation-removal== 25082 (pos)
                    (not (Bb_not_msg_p2))

                    ; #25401: <==negation-removal== 36341 (pos)
                    (not (Bc_not_msg_p2))

                    ; #40555: <==negation-removal== 36555 (pos)
                    (not (Pd_not_msg_p2))

                    ; #43889: <==negation-removal== 79708 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #49475: <==negation-removal== 15182 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #59538: <==negation-removal== 42345 (pos)
                    (not (Pb_not_msg_p2))

                    ; #64654: <==negation-removal== 34844 (pos)
                    (not (Pa_not_msg_p2))

                    ; #68213: <==negation-removal== 37686 (pos)
                    (not (Ba_not_msg_p2))

                    ; #68662: <==negation-removal== 65959 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73428: <==negation-removal== 67450 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #76284: <==negation-removal== 51758 (pos)
                    (not (not_msg_p2))

                    ; #78499: <==negation-removal== 37103 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #87937: <==negation-removal== 53403 (pos)
                    (not (Pa_not_survivorat_s_p2))))

    (:action commsurvivor_p2_c_s
        :precondition (and (Pc_survivorat_s_p2)
                           (Bc_survivorat_s_p2)
                           (at_c_p2))
        :effect (and
                    ; #15182: <==closure== 79708 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25082: <==closure== 42345 (pos)
                    (Pb_msg_p2)

                    ; #32284: <==closure== 65959 (pos)
                    (Pc_survivorat_s_p2)

                    ; #34844: <==commonly_known== 51758 (pos)
                    (Ba_msg_p2)

                    ; #36341: <==closure== 87794 (pos)
                    (Pc_msg_p2)

                    ; #36555: <==commonly_known== 51758 (pos)
                    (Bd_msg_p2)

                    ; #37103: <==closure== 78864 (pos)
                    (Pb_survivorat_s_p2)

                    ; #37686: <==closure== 34844 (pos)
                    (Pa_msg_p2)

                    ; #42345: <==commonly_known== 51758 (pos)
                    (Bb_msg_p2)

                    ; #51758: origin
                    (msg_p2)

                    ; #53403: origin
                    (Ba_survivorat_s_p2)

                    ; #65959: origin
                    (Bc_survivorat_s_p2)

                    ; #67450: <==closure== 53403 (pos)
                    (Pa_survivorat_s_p2)

                    ; #78864: origin
                    (Bb_survivorat_s_p2)

                    ; #79708: origin
                    (Bd_survivorat_s_p2)

                    ; #87469: <==closure== 36555 (pos)
                    (Pd_msg_p2)

                    ; #87794: <==commonly_known== 51758 (pos)
                    (Bc_msg_p2)

                    ; #14401: <==negation-removal== 78864 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #16570: <==negation-removal== 32284 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #19182: <==negation-removal== 87794 (pos)
                    (not (Pc_not_msg_p2))

                    ; #21913: <==negation-removal== 87469 (pos)
                    (not (Bd_not_msg_p2))

                    ; #25341: <==negation-removal== 25082 (pos)
                    (not (Bb_not_msg_p2))

                    ; #25401: <==negation-removal== 36341 (pos)
                    (not (Bc_not_msg_p2))

                    ; #40555: <==negation-removal== 36555 (pos)
                    (not (Pd_not_msg_p2))

                    ; #43889: <==negation-removal== 79708 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #49475: <==negation-removal== 15182 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #59538: <==negation-removal== 42345 (pos)
                    (not (Pb_not_msg_p2))

                    ; #64654: <==negation-removal== 34844 (pos)
                    (not (Pa_not_msg_p2))

                    ; #68213: <==negation-removal== 37686 (pos)
                    (not (Ba_not_msg_p2))

                    ; #68662: <==negation-removal== 65959 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73428: <==negation-removal== 67450 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #76284: <==negation-removal== 51758 (pos)
                    (not (not_msg_p2))

                    ; #78499: <==negation-removal== 37103 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #87937: <==negation-removal== 53403 (pos)
                    (not (Pa_not_survivorat_s_p2))))

    (:action commsurvivor_p2_d_s
        :precondition (and (at_d_p2)
                           (Pd_survivorat_s_p2)
                           (Bd_survivorat_s_p2))
        :effect (and
                    ; #15182: <==closure== 79708 (pos)
                    (Pd_survivorat_s_p2)

                    ; #25082: <==closure== 42345 (pos)
                    (Pb_msg_p2)

                    ; #32284: <==closure== 65959 (pos)
                    (Pc_survivorat_s_p2)

                    ; #34844: <==commonly_known== 51758 (pos)
                    (Ba_msg_p2)

                    ; #36341: <==closure== 87794 (pos)
                    (Pc_msg_p2)

                    ; #36555: <==commonly_known== 51758 (pos)
                    (Bd_msg_p2)

                    ; #37103: <==closure== 78864 (pos)
                    (Pb_survivorat_s_p2)

                    ; #37686: <==closure== 34844 (pos)
                    (Pa_msg_p2)

                    ; #42345: <==commonly_known== 51758 (pos)
                    (Bb_msg_p2)

                    ; #51758: origin
                    (msg_p2)

                    ; #53403: origin
                    (Ba_survivorat_s_p2)

                    ; #65959: origin
                    (Bc_survivorat_s_p2)

                    ; #67450: <==closure== 53403 (pos)
                    (Pa_survivorat_s_p2)

                    ; #78864: origin
                    (Bb_survivorat_s_p2)

                    ; #79708: origin
                    (Bd_survivorat_s_p2)

                    ; #87469: <==closure== 36555 (pos)
                    (Pd_msg_p2)

                    ; #87794: <==commonly_known== 51758 (pos)
                    (Bc_msg_p2)

                    ; #14401: <==negation-removal== 78864 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #16570: <==negation-removal== 32284 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #19182: <==negation-removal== 87794 (pos)
                    (not (Pc_not_msg_p2))

                    ; #21913: <==negation-removal== 87469 (pos)
                    (not (Bd_not_msg_p2))

                    ; #25341: <==negation-removal== 25082 (pos)
                    (not (Bb_not_msg_p2))

                    ; #25401: <==negation-removal== 36341 (pos)
                    (not (Bc_not_msg_p2))

                    ; #40555: <==negation-removal== 36555 (pos)
                    (not (Pd_not_msg_p2))

                    ; #43889: <==negation-removal== 79708 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #49475: <==negation-removal== 15182 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #59538: <==negation-removal== 42345 (pos)
                    (not (Pb_not_msg_p2))

                    ; #64654: <==negation-removal== 34844 (pos)
                    (not (Pa_not_msg_p2))

                    ; #68213: <==negation-removal== 37686 (pos)
                    (not (Ba_not_msg_p2))

                    ; #68662: <==negation-removal== 65959 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73428: <==negation-removal== 67450 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #76284: <==negation-removal== 51758 (pos)
                    (not (not_msg_p2))

                    ; #78499: <==negation-removal== 37103 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #87937: <==negation-removal== 53403 (pos)
                    (not (Pa_not_survivorat_s_p2))))

    (:action commsurvivor_p3_a_s
        :precondition (and (Ba_survivorat_s_p3)
                           (at_a_p3)
                           (Pa_survivorat_s_p3))
        :effect (and
                    ; #18569: <==commonly_known== 72942 (pos)
                    (Ba_msg_p3)

                    ; #29246: <==commonly_known== 72942 (pos)
                    (Bb_msg_p3)

                    ; #38401: <==closure== 88513 (pos)
                    (Pd_survivorat_s_p3)

                    ; #40809: <==commonly_known== 72942 (pos)
                    (Bc_msg_p3)

                    ; #44235: <==closure== 18569 (pos)
                    (Pa_msg_p3)

                    ; #44903: <==closure== 86106 (pos)
                    (Pa_survivorat_s_p3)

                    ; #53546: <==closure== 66153 (pos)
                    (Pc_survivorat_s_p3)

                    ; #61721: <==commonly_known== 72942 (pos)
                    (Bd_msg_p3)

                    ; #62428: <==closure== 61721 (pos)
                    (Pd_msg_p3)

                    ; #66040: origin
                    (Bb_survivorat_s_p3)

                    ; #66153: origin
                    (Bc_survivorat_s_p3)

                    ; #70695: <==closure== 40809 (pos)
                    (Pc_msg_p3)

                    ; #72788: <==closure== 29246 (pos)
                    (Pb_msg_p3)

                    ; #72942: origin
                    (msg_p3)

                    ; #74621: <==closure== 66040 (pos)
                    (Pb_survivorat_s_p3)

                    ; #86106: origin
                    (Ba_survivorat_s_p3)

                    ; #88513: origin
                    (Bd_survivorat_s_p3)

                    ; #13908: <==negation-removal== 88513 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #17285: <==negation-removal== 61721 (pos)
                    (not (Pd_not_msg_p3))

                    ; #20696: <==negation-removal== 72942 (pos)
                    (not (not_msg_p3))

                    ; #22159: <==negation-removal== 29246 (pos)
                    (not (Pb_not_msg_p3))

                    ; #29959: <==negation-removal== 44235 (pos)
                    (not (Ba_not_msg_p3))

                    ; #33558: <==negation-removal== 44903 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #37256: <==negation-removal== 62428 (pos)
                    (not (Bd_not_msg_p3))

                    ; #56929: <==negation-removal== 18569 (pos)
                    (not (Pa_not_msg_p3))

                    ; #57952: <==negation-removal== 70695 (pos)
                    (not (Bc_not_msg_p3))

                    ; #62996: <==negation-removal== 66153 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #72119: <==negation-removal== 74621 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #72959: <==negation-removal== 72788 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74619: <==negation-removal== 40809 (pos)
                    (not (Pc_not_msg_p3))

                    ; #74802: <==negation-removal== 66040 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #75063: <==negation-removal== 53546 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #78917: <==negation-removal== 38401 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #87307: <==negation-removal== 86106 (pos)
                    (not (Pa_not_survivorat_s_p3))))

    (:action commsurvivor_p3_b_s
        :precondition (and (Bb_survivorat_s_p3)
                           (at_b_p3)
                           (Pb_survivorat_s_p3))
        :effect (and
                    ; #18569: <==commonly_known== 72942 (pos)
                    (Ba_msg_p3)

                    ; #29246: <==commonly_known== 72942 (pos)
                    (Bb_msg_p3)

                    ; #38401: <==closure== 88513 (pos)
                    (Pd_survivorat_s_p3)

                    ; #40809: <==commonly_known== 72942 (pos)
                    (Bc_msg_p3)

                    ; #44235: <==closure== 18569 (pos)
                    (Pa_msg_p3)

                    ; #44903: <==closure== 86106 (pos)
                    (Pa_survivorat_s_p3)

                    ; #53546: <==closure== 66153 (pos)
                    (Pc_survivorat_s_p3)

                    ; #61721: <==commonly_known== 72942 (pos)
                    (Bd_msg_p3)

                    ; #62428: <==closure== 61721 (pos)
                    (Pd_msg_p3)

                    ; #66040: origin
                    (Bb_survivorat_s_p3)

                    ; #66153: origin
                    (Bc_survivorat_s_p3)

                    ; #70695: <==closure== 40809 (pos)
                    (Pc_msg_p3)

                    ; #72788: <==closure== 29246 (pos)
                    (Pb_msg_p3)

                    ; #72942: origin
                    (msg_p3)

                    ; #74621: <==closure== 66040 (pos)
                    (Pb_survivorat_s_p3)

                    ; #86106: origin
                    (Ba_survivorat_s_p3)

                    ; #88513: origin
                    (Bd_survivorat_s_p3)

                    ; #13908: <==negation-removal== 88513 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #17285: <==negation-removal== 61721 (pos)
                    (not (Pd_not_msg_p3))

                    ; #20696: <==negation-removal== 72942 (pos)
                    (not (not_msg_p3))

                    ; #22159: <==negation-removal== 29246 (pos)
                    (not (Pb_not_msg_p3))

                    ; #29959: <==negation-removal== 44235 (pos)
                    (not (Ba_not_msg_p3))

                    ; #33558: <==negation-removal== 44903 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #37256: <==negation-removal== 62428 (pos)
                    (not (Bd_not_msg_p3))

                    ; #56929: <==negation-removal== 18569 (pos)
                    (not (Pa_not_msg_p3))

                    ; #57952: <==negation-removal== 70695 (pos)
                    (not (Bc_not_msg_p3))

                    ; #62996: <==negation-removal== 66153 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #72119: <==negation-removal== 74621 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #72959: <==negation-removal== 72788 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74619: <==negation-removal== 40809 (pos)
                    (not (Pc_not_msg_p3))

                    ; #74802: <==negation-removal== 66040 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #75063: <==negation-removal== 53546 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #78917: <==negation-removal== 38401 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #87307: <==negation-removal== 86106 (pos)
                    (not (Pa_not_survivorat_s_p3))))

    (:action commsurvivor_p3_c_s
        :precondition (and (at_c_p3)
                           (Bc_survivorat_s_p3)
                           (Pc_survivorat_s_p3))
        :effect (and
                    ; #18569: <==commonly_known== 72942 (pos)
                    (Ba_msg_p3)

                    ; #29246: <==commonly_known== 72942 (pos)
                    (Bb_msg_p3)

                    ; #38401: <==closure== 88513 (pos)
                    (Pd_survivorat_s_p3)

                    ; #40809: <==commonly_known== 72942 (pos)
                    (Bc_msg_p3)

                    ; #44235: <==closure== 18569 (pos)
                    (Pa_msg_p3)

                    ; #44903: <==closure== 86106 (pos)
                    (Pa_survivorat_s_p3)

                    ; #53546: <==closure== 66153 (pos)
                    (Pc_survivorat_s_p3)

                    ; #61721: <==commonly_known== 72942 (pos)
                    (Bd_msg_p3)

                    ; #62428: <==closure== 61721 (pos)
                    (Pd_msg_p3)

                    ; #66040: origin
                    (Bb_survivorat_s_p3)

                    ; #66153: origin
                    (Bc_survivorat_s_p3)

                    ; #70695: <==closure== 40809 (pos)
                    (Pc_msg_p3)

                    ; #72788: <==closure== 29246 (pos)
                    (Pb_msg_p3)

                    ; #72942: origin
                    (msg_p3)

                    ; #74621: <==closure== 66040 (pos)
                    (Pb_survivorat_s_p3)

                    ; #86106: origin
                    (Ba_survivorat_s_p3)

                    ; #88513: origin
                    (Bd_survivorat_s_p3)

                    ; #13908: <==negation-removal== 88513 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #17285: <==negation-removal== 61721 (pos)
                    (not (Pd_not_msg_p3))

                    ; #20696: <==negation-removal== 72942 (pos)
                    (not (not_msg_p3))

                    ; #22159: <==negation-removal== 29246 (pos)
                    (not (Pb_not_msg_p3))

                    ; #29959: <==negation-removal== 44235 (pos)
                    (not (Ba_not_msg_p3))

                    ; #33558: <==negation-removal== 44903 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #37256: <==negation-removal== 62428 (pos)
                    (not (Bd_not_msg_p3))

                    ; #56929: <==negation-removal== 18569 (pos)
                    (not (Pa_not_msg_p3))

                    ; #57952: <==negation-removal== 70695 (pos)
                    (not (Bc_not_msg_p3))

                    ; #62996: <==negation-removal== 66153 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #72119: <==negation-removal== 74621 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #72959: <==negation-removal== 72788 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74619: <==negation-removal== 40809 (pos)
                    (not (Pc_not_msg_p3))

                    ; #74802: <==negation-removal== 66040 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #75063: <==negation-removal== 53546 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #78917: <==negation-removal== 38401 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #87307: <==negation-removal== 86106 (pos)
                    (not (Pa_not_survivorat_s_p3))))

    (:action commsurvivor_p3_d_s
        :precondition (and (at_d_p3)
                           (Bd_survivorat_s_p3)
                           (Pd_survivorat_s_p3))
        :effect (and
                    ; #18569: <==commonly_known== 72942 (pos)
                    (Ba_msg_p3)

                    ; #29246: <==commonly_known== 72942 (pos)
                    (Bb_msg_p3)

                    ; #38401: <==closure== 88513 (pos)
                    (Pd_survivorat_s_p3)

                    ; #40809: <==commonly_known== 72942 (pos)
                    (Bc_msg_p3)

                    ; #44235: <==closure== 18569 (pos)
                    (Pa_msg_p3)

                    ; #44903: <==closure== 86106 (pos)
                    (Pa_survivorat_s_p3)

                    ; #53546: <==closure== 66153 (pos)
                    (Pc_survivorat_s_p3)

                    ; #61721: <==commonly_known== 72942 (pos)
                    (Bd_msg_p3)

                    ; #62428: <==closure== 61721 (pos)
                    (Pd_msg_p3)

                    ; #66040: origin
                    (Bb_survivorat_s_p3)

                    ; #66153: origin
                    (Bc_survivorat_s_p3)

                    ; #70695: <==closure== 40809 (pos)
                    (Pc_msg_p3)

                    ; #72788: <==closure== 29246 (pos)
                    (Pb_msg_p3)

                    ; #72942: origin
                    (msg_p3)

                    ; #74621: <==closure== 66040 (pos)
                    (Pb_survivorat_s_p3)

                    ; #86106: origin
                    (Ba_survivorat_s_p3)

                    ; #88513: origin
                    (Bd_survivorat_s_p3)

                    ; #13908: <==negation-removal== 88513 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #17285: <==negation-removal== 61721 (pos)
                    (not (Pd_not_msg_p3))

                    ; #20696: <==negation-removal== 72942 (pos)
                    (not (not_msg_p3))

                    ; #22159: <==negation-removal== 29246 (pos)
                    (not (Pb_not_msg_p3))

                    ; #29959: <==negation-removal== 44235 (pos)
                    (not (Ba_not_msg_p3))

                    ; #33558: <==negation-removal== 44903 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #37256: <==negation-removal== 62428 (pos)
                    (not (Bd_not_msg_p3))

                    ; #56929: <==negation-removal== 18569 (pos)
                    (not (Pa_not_msg_p3))

                    ; #57952: <==negation-removal== 70695 (pos)
                    (not (Bc_not_msg_p3))

                    ; #62996: <==negation-removal== 66153 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #72119: <==negation-removal== 74621 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #72959: <==negation-removal== 72788 (pos)
                    (not (Bb_not_msg_p3))

                    ; #74619: <==negation-removal== 40809 (pos)
                    (not (Pc_not_msg_p3))

                    ; #74802: <==negation-removal== 66040 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #75063: <==negation-removal== 53546 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #78917: <==negation-removal== 38401 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #87307: <==negation-removal== 86106 (pos)
                    (not (Pa_not_survivorat_s_p3))))

    (:action commsurvivor_p4_a_s
        :precondition (and (at_a_p4)
                           (Ba_survivorat_s_p4)
                           (Pa_survivorat_s_p4))
        :effect (and
                    ; #13048: origin
                    (Bb_survivorat_s_p4)

                    ; #18441: <==commonly_known== 82807 (pos)
                    (Bb_msg_p4)

                    ; #32627: <==closure== 77399 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37019: <==closure== 60155 (pos)
                    (Pd_survivorat_s_p4)

                    ; #38785: origin
                    (Bc_survivorat_s_p4)

                    ; #52902: <==closure== 74100 (pos)
                    (Pd_msg_p4)

                    ; #60155: origin
                    (Bd_survivorat_s_p4)

                    ; #62284: <==closure== 13048 (pos)
                    (Pb_survivorat_s_p4)

                    ; #74100: <==commonly_known== 82807 (pos)
                    (Bd_msg_p4)

                    ; #77399: origin
                    (Ba_survivorat_s_p4)

                    ; #77658: <==closure== 78582 (pos)
                    (Pc_msg_p4)

                    ; #78582: <==commonly_known== 82807 (pos)
                    (Bc_msg_p4)

                    ; #80244: <==commonly_known== 82807 (pos)
                    (Ba_msg_p4)

                    ; #82807: origin
                    (msg_p4)

                    ; #87421: <==closure== 18441 (pos)
                    (Pb_msg_p4)

                    ; #88656: <==closure== 38785 (pos)
                    (Pc_survivorat_s_p4)

                    ; #91066: <==closure== 80244 (pos)
                    (Pa_msg_p4)

                    ; #10468: <==negation-removal== 82807 (pos)
                    (not (not_msg_p4))

                    ; #12842: <==negation-removal== 80244 (pos)
                    (not (Pa_not_msg_p4))

                    ; #17880: <==negation-removal== 88656 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #18831: <==negation-removal== 91066 (pos)
                    (not (Ba_not_msg_p4))

                    ; #19854: <==negation-removal== 87421 (pos)
                    (not (Bb_not_msg_p4))

                    ; #24489: <==negation-removal== 52902 (pos)
                    (not (Bd_not_msg_p4))

                    ; #32816: <==negation-removal== 38785 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #34355: <==negation-removal== 13048 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #35680: <==negation-removal== 77658 (pos)
                    (not (Bc_not_msg_p4))

                    ; #54757: <==negation-removal== 77399 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #67572: <==negation-removal== 78582 (pos)
                    (not (Pc_not_msg_p4))

                    ; #75346: <==negation-removal== 32627 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #79072: <==negation-removal== 60155 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #80856: <==negation-removal== 18441 (pos)
                    (not (Pb_not_msg_p4))

                    ; #84263: <==negation-removal== 74100 (pos)
                    (not (Pd_not_msg_p4))

                    ; #89325: <==negation-removal== 37019 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #90594: <==negation-removal== 62284 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p4_b_s
        :precondition (and (at_b_p4)
                           (Bb_survivorat_s_p4)
                           (Pb_survivorat_s_p4))
        :effect (and
                    ; #13048: origin
                    (Bb_survivorat_s_p4)

                    ; #18441: <==commonly_known== 82807 (pos)
                    (Bb_msg_p4)

                    ; #32627: <==closure== 77399 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37019: <==closure== 60155 (pos)
                    (Pd_survivorat_s_p4)

                    ; #38785: origin
                    (Bc_survivorat_s_p4)

                    ; #52902: <==closure== 74100 (pos)
                    (Pd_msg_p4)

                    ; #60155: origin
                    (Bd_survivorat_s_p4)

                    ; #62284: <==closure== 13048 (pos)
                    (Pb_survivorat_s_p4)

                    ; #74100: <==commonly_known== 82807 (pos)
                    (Bd_msg_p4)

                    ; #77399: origin
                    (Ba_survivorat_s_p4)

                    ; #77658: <==closure== 78582 (pos)
                    (Pc_msg_p4)

                    ; #78582: <==commonly_known== 82807 (pos)
                    (Bc_msg_p4)

                    ; #80244: <==commonly_known== 82807 (pos)
                    (Ba_msg_p4)

                    ; #82807: origin
                    (msg_p4)

                    ; #87421: <==closure== 18441 (pos)
                    (Pb_msg_p4)

                    ; #88656: <==closure== 38785 (pos)
                    (Pc_survivorat_s_p4)

                    ; #91066: <==closure== 80244 (pos)
                    (Pa_msg_p4)

                    ; #10468: <==negation-removal== 82807 (pos)
                    (not (not_msg_p4))

                    ; #12842: <==negation-removal== 80244 (pos)
                    (not (Pa_not_msg_p4))

                    ; #17880: <==negation-removal== 88656 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #18831: <==negation-removal== 91066 (pos)
                    (not (Ba_not_msg_p4))

                    ; #19854: <==negation-removal== 87421 (pos)
                    (not (Bb_not_msg_p4))

                    ; #24489: <==negation-removal== 52902 (pos)
                    (not (Bd_not_msg_p4))

                    ; #32816: <==negation-removal== 38785 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #34355: <==negation-removal== 13048 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #35680: <==negation-removal== 77658 (pos)
                    (not (Bc_not_msg_p4))

                    ; #54757: <==negation-removal== 77399 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #67572: <==negation-removal== 78582 (pos)
                    (not (Pc_not_msg_p4))

                    ; #75346: <==negation-removal== 32627 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #79072: <==negation-removal== 60155 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #80856: <==negation-removal== 18441 (pos)
                    (not (Pb_not_msg_p4))

                    ; #84263: <==negation-removal== 74100 (pos)
                    (not (Pd_not_msg_p4))

                    ; #89325: <==negation-removal== 37019 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #90594: <==negation-removal== 62284 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p4_c_s
        :precondition (and (Pc_survivorat_s_p4)
                           (at_c_p4)
                           (Bc_survivorat_s_p4))
        :effect (and
                    ; #13048: origin
                    (Bb_survivorat_s_p4)

                    ; #18441: <==commonly_known== 82807 (pos)
                    (Bb_msg_p4)

                    ; #32627: <==closure== 77399 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37019: <==closure== 60155 (pos)
                    (Pd_survivorat_s_p4)

                    ; #38785: origin
                    (Bc_survivorat_s_p4)

                    ; #52902: <==closure== 74100 (pos)
                    (Pd_msg_p4)

                    ; #60155: origin
                    (Bd_survivorat_s_p4)

                    ; #62284: <==closure== 13048 (pos)
                    (Pb_survivorat_s_p4)

                    ; #74100: <==commonly_known== 82807 (pos)
                    (Bd_msg_p4)

                    ; #77399: origin
                    (Ba_survivorat_s_p4)

                    ; #77658: <==closure== 78582 (pos)
                    (Pc_msg_p4)

                    ; #78582: <==commonly_known== 82807 (pos)
                    (Bc_msg_p4)

                    ; #80244: <==commonly_known== 82807 (pos)
                    (Ba_msg_p4)

                    ; #82807: origin
                    (msg_p4)

                    ; #87421: <==closure== 18441 (pos)
                    (Pb_msg_p4)

                    ; #88656: <==closure== 38785 (pos)
                    (Pc_survivorat_s_p4)

                    ; #91066: <==closure== 80244 (pos)
                    (Pa_msg_p4)

                    ; #10468: <==negation-removal== 82807 (pos)
                    (not (not_msg_p4))

                    ; #12842: <==negation-removal== 80244 (pos)
                    (not (Pa_not_msg_p4))

                    ; #17880: <==negation-removal== 88656 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #18831: <==negation-removal== 91066 (pos)
                    (not (Ba_not_msg_p4))

                    ; #19854: <==negation-removal== 87421 (pos)
                    (not (Bb_not_msg_p4))

                    ; #24489: <==negation-removal== 52902 (pos)
                    (not (Bd_not_msg_p4))

                    ; #32816: <==negation-removal== 38785 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #34355: <==negation-removal== 13048 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #35680: <==negation-removal== 77658 (pos)
                    (not (Bc_not_msg_p4))

                    ; #54757: <==negation-removal== 77399 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #67572: <==negation-removal== 78582 (pos)
                    (not (Pc_not_msg_p4))

                    ; #75346: <==negation-removal== 32627 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #79072: <==negation-removal== 60155 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #80856: <==negation-removal== 18441 (pos)
                    (not (Pb_not_msg_p4))

                    ; #84263: <==negation-removal== 74100 (pos)
                    (not (Pd_not_msg_p4))

                    ; #89325: <==negation-removal== 37019 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #90594: <==negation-removal== 62284 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p4_d_s
        :precondition (and (Bd_survivorat_s_p4)
                           (Pd_survivorat_s_p4)
                           (at_d_p4))
        :effect (and
                    ; #13048: origin
                    (Bb_survivorat_s_p4)

                    ; #18441: <==commonly_known== 82807 (pos)
                    (Bb_msg_p4)

                    ; #32627: <==closure== 77399 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37019: <==closure== 60155 (pos)
                    (Pd_survivorat_s_p4)

                    ; #38785: origin
                    (Bc_survivorat_s_p4)

                    ; #52902: <==closure== 74100 (pos)
                    (Pd_msg_p4)

                    ; #60155: origin
                    (Bd_survivorat_s_p4)

                    ; #62284: <==closure== 13048 (pos)
                    (Pb_survivorat_s_p4)

                    ; #74100: <==commonly_known== 82807 (pos)
                    (Bd_msg_p4)

                    ; #77399: origin
                    (Ba_survivorat_s_p4)

                    ; #77658: <==closure== 78582 (pos)
                    (Pc_msg_p4)

                    ; #78582: <==commonly_known== 82807 (pos)
                    (Bc_msg_p4)

                    ; #80244: <==commonly_known== 82807 (pos)
                    (Ba_msg_p4)

                    ; #82807: origin
                    (msg_p4)

                    ; #87421: <==closure== 18441 (pos)
                    (Pb_msg_p4)

                    ; #88656: <==closure== 38785 (pos)
                    (Pc_survivorat_s_p4)

                    ; #91066: <==closure== 80244 (pos)
                    (Pa_msg_p4)

                    ; #10468: <==negation-removal== 82807 (pos)
                    (not (not_msg_p4))

                    ; #12842: <==negation-removal== 80244 (pos)
                    (not (Pa_not_msg_p4))

                    ; #17880: <==negation-removal== 88656 (pos)
                    (not (Bc_not_survivorat_s_p4))

                    ; #18831: <==negation-removal== 91066 (pos)
                    (not (Ba_not_msg_p4))

                    ; #19854: <==negation-removal== 87421 (pos)
                    (not (Bb_not_msg_p4))

                    ; #24489: <==negation-removal== 52902 (pos)
                    (not (Bd_not_msg_p4))

                    ; #32816: <==negation-removal== 38785 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #34355: <==negation-removal== 13048 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #35680: <==negation-removal== 77658 (pos)
                    (not (Bc_not_msg_p4))

                    ; #54757: <==negation-removal== 77399 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #67572: <==negation-removal== 78582 (pos)
                    (not (Pc_not_msg_p4))

                    ; #75346: <==negation-removal== 32627 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #79072: <==negation-removal== 60155 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #80856: <==negation-removal== 18441 (pos)
                    (not (Pb_not_msg_p4))

                    ; #84263: <==negation-removal== 74100 (pos)
                    (not (Pd_not_msg_p4))

                    ; #89325: <==negation-removal== 37019 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #90594: <==negation-removal== 62284 (pos)
                    (not (Bb_not_survivorat_s_p4))))

    (:action commsurvivor_p5_a_s
        :precondition (and (at_a_p5)
                           (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5))
        :effect (and
                    ; #10758: <==commonly_known== 78569 (pos)
                    (Bc_msg_p5)

                    ; #13196: origin
                    (Bd_survivorat_s_p5)

                    ; #21259: origin
                    (Bc_survivorat_s_p5)

                    ; #31385: origin
                    (Ba_survivorat_s_p5)

                    ; #35989: <==commonly_known== 78569 (pos)
                    (Bd_msg_p5)

                    ; #40107: <==closure== 21259 (pos)
                    (Pc_survivorat_s_p5)

                    ; #41055: origin
                    (Bb_survivorat_s_p5)

                    ; #43444: <==commonly_known== 78569 (pos)
                    (Ba_msg_p5)

                    ; #55891: <==commonly_known== 78569 (pos)
                    (Bb_msg_p5)

                    ; #56960: <==closure== 13196 (pos)
                    (Pd_survivorat_s_p5)

                    ; #59532: <==closure== 10758 (pos)
                    (Pc_msg_p5)

                    ; #64394: <==closure== 31385 (pos)
                    (Pa_survivorat_s_p5)

                    ; #69011: <==closure== 41055 (pos)
                    (Pb_survivorat_s_p5)

                    ; #73682: <==closure== 35989 (pos)
                    (Pd_msg_p5)

                    ; #74837: <==closure== 43444 (pos)
                    (Pa_msg_p5)

                    ; #78569: origin
                    (msg_p5)

                    ; #86451: <==closure== 55891 (pos)
                    (Pb_msg_p5)

                    ; #10872: <==negation-removal== 13196 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #11739: <==negation-removal== 31385 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #13276: <==negation-removal== 56960 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #35465: <==negation-removal== 10758 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35813: <==negation-removal== 55891 (pos)
                    (not (Pb_not_msg_p5))

                    ; #36844: <==negation-removal== 41055 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #43648: <==negation-removal== 64394 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #44492: <==negation-removal== 35989 (pos)
                    (not (Pd_not_msg_p5))

                    ; #48240: <==negation-removal== 43444 (pos)
                    (not (Pa_not_msg_p5))

                    ; #56034: <==negation-removal== 59532 (pos)
                    (not (Bc_not_msg_p5))

                    ; #58337: <==negation-removal== 21259 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #61026: <==negation-removal== 40107 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #68384: <==negation-removal== 78569 (pos)
                    (not (not_msg_p5))

                    ; #70196: <==negation-removal== 74837 (pos)
                    (not (Ba_not_msg_p5))

                    ; #73489: <==negation-removal== 69011 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #74982: <==negation-removal== 73682 (pos)
                    (not (Bd_not_msg_p5))

                    ; #89016: <==negation-removal== 86451 (pos)
                    (not (Bb_not_msg_p5))))

    (:action commsurvivor_p5_b_s
        :precondition (and (at_b_p5)
                           (Bb_survivorat_s_p5)
                           (Pb_survivorat_s_p5))
        :effect (and
                    ; #10758: <==commonly_known== 78569 (pos)
                    (Bc_msg_p5)

                    ; #13196: origin
                    (Bd_survivorat_s_p5)

                    ; #21259: origin
                    (Bc_survivorat_s_p5)

                    ; #31385: origin
                    (Ba_survivorat_s_p5)

                    ; #35989: <==commonly_known== 78569 (pos)
                    (Bd_msg_p5)

                    ; #40107: <==closure== 21259 (pos)
                    (Pc_survivorat_s_p5)

                    ; #41055: origin
                    (Bb_survivorat_s_p5)

                    ; #43444: <==commonly_known== 78569 (pos)
                    (Ba_msg_p5)

                    ; #55891: <==commonly_known== 78569 (pos)
                    (Bb_msg_p5)

                    ; #56960: <==closure== 13196 (pos)
                    (Pd_survivorat_s_p5)

                    ; #59532: <==closure== 10758 (pos)
                    (Pc_msg_p5)

                    ; #64394: <==closure== 31385 (pos)
                    (Pa_survivorat_s_p5)

                    ; #69011: <==closure== 41055 (pos)
                    (Pb_survivorat_s_p5)

                    ; #73682: <==closure== 35989 (pos)
                    (Pd_msg_p5)

                    ; #74837: <==closure== 43444 (pos)
                    (Pa_msg_p5)

                    ; #78569: origin
                    (msg_p5)

                    ; #86451: <==closure== 55891 (pos)
                    (Pb_msg_p5)

                    ; #10872: <==negation-removal== 13196 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #11739: <==negation-removal== 31385 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #13276: <==negation-removal== 56960 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #35465: <==negation-removal== 10758 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35813: <==negation-removal== 55891 (pos)
                    (not (Pb_not_msg_p5))

                    ; #36844: <==negation-removal== 41055 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #43648: <==negation-removal== 64394 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #44492: <==negation-removal== 35989 (pos)
                    (not (Pd_not_msg_p5))

                    ; #48240: <==negation-removal== 43444 (pos)
                    (not (Pa_not_msg_p5))

                    ; #56034: <==negation-removal== 59532 (pos)
                    (not (Bc_not_msg_p5))

                    ; #58337: <==negation-removal== 21259 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #61026: <==negation-removal== 40107 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #68384: <==negation-removal== 78569 (pos)
                    (not (not_msg_p5))

                    ; #70196: <==negation-removal== 74837 (pos)
                    (not (Ba_not_msg_p5))

                    ; #73489: <==negation-removal== 69011 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #74982: <==negation-removal== 73682 (pos)
                    (not (Bd_not_msg_p5))

                    ; #89016: <==negation-removal== 86451 (pos)
                    (not (Bb_not_msg_p5))))

    (:action commsurvivor_p5_c_s
        :precondition (and (Pc_survivorat_s_p5)
                           (at_c_p5)
                           (Bc_survivorat_s_p5))
        :effect (and
                    ; #10758: <==commonly_known== 78569 (pos)
                    (Bc_msg_p5)

                    ; #13196: origin
                    (Bd_survivorat_s_p5)

                    ; #21259: origin
                    (Bc_survivorat_s_p5)

                    ; #31385: origin
                    (Ba_survivorat_s_p5)

                    ; #35989: <==commonly_known== 78569 (pos)
                    (Bd_msg_p5)

                    ; #40107: <==closure== 21259 (pos)
                    (Pc_survivorat_s_p5)

                    ; #41055: origin
                    (Bb_survivorat_s_p5)

                    ; #43444: <==commonly_known== 78569 (pos)
                    (Ba_msg_p5)

                    ; #55891: <==commonly_known== 78569 (pos)
                    (Bb_msg_p5)

                    ; #56960: <==closure== 13196 (pos)
                    (Pd_survivorat_s_p5)

                    ; #59532: <==closure== 10758 (pos)
                    (Pc_msg_p5)

                    ; #64394: <==closure== 31385 (pos)
                    (Pa_survivorat_s_p5)

                    ; #69011: <==closure== 41055 (pos)
                    (Pb_survivorat_s_p5)

                    ; #73682: <==closure== 35989 (pos)
                    (Pd_msg_p5)

                    ; #74837: <==closure== 43444 (pos)
                    (Pa_msg_p5)

                    ; #78569: origin
                    (msg_p5)

                    ; #86451: <==closure== 55891 (pos)
                    (Pb_msg_p5)

                    ; #10872: <==negation-removal== 13196 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #11739: <==negation-removal== 31385 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #13276: <==negation-removal== 56960 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #35465: <==negation-removal== 10758 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35813: <==negation-removal== 55891 (pos)
                    (not (Pb_not_msg_p5))

                    ; #36844: <==negation-removal== 41055 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #43648: <==negation-removal== 64394 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #44492: <==negation-removal== 35989 (pos)
                    (not (Pd_not_msg_p5))

                    ; #48240: <==negation-removal== 43444 (pos)
                    (not (Pa_not_msg_p5))

                    ; #56034: <==negation-removal== 59532 (pos)
                    (not (Bc_not_msg_p5))

                    ; #58337: <==negation-removal== 21259 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #61026: <==negation-removal== 40107 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #68384: <==negation-removal== 78569 (pos)
                    (not (not_msg_p5))

                    ; #70196: <==negation-removal== 74837 (pos)
                    (not (Ba_not_msg_p5))

                    ; #73489: <==negation-removal== 69011 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #74982: <==negation-removal== 73682 (pos)
                    (not (Bd_not_msg_p5))

                    ; #89016: <==negation-removal== 86451 (pos)
                    (not (Bb_not_msg_p5))))

    (:action commsurvivor_p5_d_s
        :precondition (and (Pd_survivorat_s_p5)
                           (Bd_survivorat_s_p5)
                           (at_d_p5))
        :effect (and
                    ; #10758: <==commonly_known== 78569 (pos)
                    (Bc_msg_p5)

                    ; #13196: origin
                    (Bd_survivorat_s_p5)

                    ; #21259: origin
                    (Bc_survivorat_s_p5)

                    ; #31385: origin
                    (Ba_survivorat_s_p5)

                    ; #35989: <==commonly_known== 78569 (pos)
                    (Bd_msg_p5)

                    ; #40107: <==closure== 21259 (pos)
                    (Pc_survivorat_s_p5)

                    ; #41055: origin
                    (Bb_survivorat_s_p5)

                    ; #43444: <==commonly_known== 78569 (pos)
                    (Ba_msg_p5)

                    ; #55891: <==commonly_known== 78569 (pos)
                    (Bb_msg_p5)

                    ; #56960: <==closure== 13196 (pos)
                    (Pd_survivorat_s_p5)

                    ; #59532: <==closure== 10758 (pos)
                    (Pc_msg_p5)

                    ; #64394: <==closure== 31385 (pos)
                    (Pa_survivorat_s_p5)

                    ; #69011: <==closure== 41055 (pos)
                    (Pb_survivorat_s_p5)

                    ; #73682: <==closure== 35989 (pos)
                    (Pd_msg_p5)

                    ; #74837: <==closure== 43444 (pos)
                    (Pa_msg_p5)

                    ; #78569: origin
                    (msg_p5)

                    ; #86451: <==closure== 55891 (pos)
                    (Pb_msg_p5)

                    ; #10872: <==negation-removal== 13196 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #11739: <==negation-removal== 31385 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #13276: <==negation-removal== 56960 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #35465: <==negation-removal== 10758 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35813: <==negation-removal== 55891 (pos)
                    (not (Pb_not_msg_p5))

                    ; #36844: <==negation-removal== 41055 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #43648: <==negation-removal== 64394 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #44492: <==negation-removal== 35989 (pos)
                    (not (Pd_not_msg_p5))

                    ; #48240: <==negation-removal== 43444 (pos)
                    (not (Pa_not_msg_p5))

                    ; #56034: <==negation-removal== 59532 (pos)
                    (not (Bc_not_msg_p5))

                    ; #58337: <==negation-removal== 21259 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #61026: <==negation-removal== 40107 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #68384: <==negation-removal== 78569 (pos)
                    (not (not_msg_p5))

                    ; #70196: <==negation-removal== 74837 (pos)
                    (not (Ba_not_msg_p5))

                    ; #73489: <==negation-removal== 69011 (pos)
                    (not (Bb_not_survivorat_s_p5))

                    ; #74982: <==negation-removal== 73682 (pos)
                    (not (Bd_not_msg_p5))

                    ; #89016: <==negation-removal== 86451 (pos)
                    (not (Bb_not_msg_p5))))

    (:action commsurvivor_p6_a_s
        :precondition (and (Pa_survivorat_s_p6)
                           (at_a_p6)
                           (Ba_survivorat_s_p6))
        :effect (and
                    ; #10493: <==closure== 14654 (pos)
                    (Pb_survivorat_s_p6)

                    ; #13910: <==commonly_known== 63770 (pos)
                    (Bb_msg_p6)

                    ; #14654: origin
                    (Bb_survivorat_s_p6)

                    ; #18964: <==commonly_known== 63770 (pos)
                    (Ba_msg_p6)

                    ; #34716: <==commonly_known== 63770 (pos)
                    (Bc_msg_p6)

                    ; #44312: <==closure== 57337 (pos)
                    (Pd_msg_p6)

                    ; #46245: <==closure== 34716 (pos)
                    (Pc_msg_p6)

                    ; #47378: <==closure== 71873 (pos)
                    (Pd_survivorat_s_p6)

                    ; #51794: origin
                    (Bc_survivorat_s_p6)

                    ; #57337: <==commonly_known== 63770 (pos)
                    (Bd_msg_p6)

                    ; #61179: origin
                    (Ba_survivorat_s_p6)

                    ; #63770: origin
                    (msg_p6)

                    ; #68228: <==closure== 61179 (pos)
                    (Pa_survivorat_s_p6)

                    ; #71873: origin
                    (Bd_survivorat_s_p6)

                    ; #79026: <==closure== 51794 (pos)
                    (Pc_survivorat_s_p6)

                    ; #86841: <==closure== 18964 (pos)
                    (Pa_msg_p6)

                    ; #89043: <==closure== 13910 (pos)
                    (Pb_msg_p6)

                    ; #13560: <==negation-removal== 10493 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #15198: <==negation-removal== 68228 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #24073: <==negation-removal== 86841 (pos)
                    (not (Ba_not_msg_p6))

                    ; #33587: <==negation-removal== 44312 (pos)
                    (not (Bd_not_msg_p6))

                    ; #39349: <==negation-removal== 79026 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #50943: <==negation-removal== 63770 (pos)
                    (not (not_msg_p6))

                    ; #52136: <==negation-removal== 46245 (pos)
                    (not (Bc_not_msg_p6))

                    ; #54202: <==negation-removal== 61179 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #54861: <==negation-removal== 57337 (pos)
                    (not (Pd_not_msg_p6))

                    ; #55083: <==negation-removal== 34716 (pos)
                    (not (Pc_not_msg_p6))

                    ; #56942: <==negation-removal== 14654 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #57504: <==negation-removal== 71873 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #59282: <==negation-removal== 89043 (pos)
                    (not (Bb_not_msg_p6))

                    ; #60060: <==negation-removal== 13910 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67475: <==negation-removal== 47378 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #80239: <==negation-removal== 18964 (pos)
                    (not (Pa_not_msg_p6))

                    ; #89308: <==negation-removal== 51794 (pos)
                    (not (Pc_not_survivorat_s_p6))))

    (:action commsurvivor_p6_b_s
        :precondition (and (at_b_p6)
                           (Bb_survivorat_s_p6)
                           (Pb_survivorat_s_p6))
        :effect (and
                    ; #10493: <==closure== 14654 (pos)
                    (Pb_survivorat_s_p6)

                    ; #13910: <==commonly_known== 63770 (pos)
                    (Bb_msg_p6)

                    ; #14654: origin
                    (Bb_survivorat_s_p6)

                    ; #18964: <==commonly_known== 63770 (pos)
                    (Ba_msg_p6)

                    ; #34716: <==commonly_known== 63770 (pos)
                    (Bc_msg_p6)

                    ; #44312: <==closure== 57337 (pos)
                    (Pd_msg_p6)

                    ; #46245: <==closure== 34716 (pos)
                    (Pc_msg_p6)

                    ; #47378: <==closure== 71873 (pos)
                    (Pd_survivorat_s_p6)

                    ; #51794: origin
                    (Bc_survivorat_s_p6)

                    ; #57337: <==commonly_known== 63770 (pos)
                    (Bd_msg_p6)

                    ; #61179: origin
                    (Ba_survivorat_s_p6)

                    ; #63770: origin
                    (msg_p6)

                    ; #68228: <==closure== 61179 (pos)
                    (Pa_survivorat_s_p6)

                    ; #71873: origin
                    (Bd_survivorat_s_p6)

                    ; #79026: <==closure== 51794 (pos)
                    (Pc_survivorat_s_p6)

                    ; #86841: <==closure== 18964 (pos)
                    (Pa_msg_p6)

                    ; #89043: <==closure== 13910 (pos)
                    (Pb_msg_p6)

                    ; #13560: <==negation-removal== 10493 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #15198: <==negation-removal== 68228 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #24073: <==negation-removal== 86841 (pos)
                    (not (Ba_not_msg_p6))

                    ; #33587: <==negation-removal== 44312 (pos)
                    (not (Bd_not_msg_p6))

                    ; #39349: <==negation-removal== 79026 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #50943: <==negation-removal== 63770 (pos)
                    (not (not_msg_p6))

                    ; #52136: <==negation-removal== 46245 (pos)
                    (not (Bc_not_msg_p6))

                    ; #54202: <==negation-removal== 61179 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #54861: <==negation-removal== 57337 (pos)
                    (not (Pd_not_msg_p6))

                    ; #55083: <==negation-removal== 34716 (pos)
                    (not (Pc_not_msg_p6))

                    ; #56942: <==negation-removal== 14654 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #57504: <==negation-removal== 71873 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #59282: <==negation-removal== 89043 (pos)
                    (not (Bb_not_msg_p6))

                    ; #60060: <==negation-removal== 13910 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67475: <==negation-removal== 47378 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #80239: <==negation-removal== 18964 (pos)
                    (not (Pa_not_msg_p6))

                    ; #89308: <==negation-removal== 51794 (pos)
                    (not (Pc_not_survivorat_s_p6))))

    (:action commsurvivor_p6_c_s
        :precondition (and (Bc_survivorat_s_p6)
                           (Pc_survivorat_s_p6)
                           (at_c_p6))
        :effect (and
                    ; #10493: <==closure== 14654 (pos)
                    (Pb_survivorat_s_p6)

                    ; #13910: <==commonly_known== 63770 (pos)
                    (Bb_msg_p6)

                    ; #14654: origin
                    (Bb_survivorat_s_p6)

                    ; #18964: <==commonly_known== 63770 (pos)
                    (Ba_msg_p6)

                    ; #34716: <==commonly_known== 63770 (pos)
                    (Bc_msg_p6)

                    ; #44312: <==closure== 57337 (pos)
                    (Pd_msg_p6)

                    ; #46245: <==closure== 34716 (pos)
                    (Pc_msg_p6)

                    ; #47378: <==closure== 71873 (pos)
                    (Pd_survivorat_s_p6)

                    ; #51794: origin
                    (Bc_survivorat_s_p6)

                    ; #57337: <==commonly_known== 63770 (pos)
                    (Bd_msg_p6)

                    ; #61179: origin
                    (Ba_survivorat_s_p6)

                    ; #63770: origin
                    (msg_p6)

                    ; #68228: <==closure== 61179 (pos)
                    (Pa_survivorat_s_p6)

                    ; #71873: origin
                    (Bd_survivorat_s_p6)

                    ; #79026: <==closure== 51794 (pos)
                    (Pc_survivorat_s_p6)

                    ; #86841: <==closure== 18964 (pos)
                    (Pa_msg_p6)

                    ; #89043: <==closure== 13910 (pos)
                    (Pb_msg_p6)

                    ; #13560: <==negation-removal== 10493 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #15198: <==negation-removal== 68228 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #24073: <==negation-removal== 86841 (pos)
                    (not (Ba_not_msg_p6))

                    ; #33587: <==negation-removal== 44312 (pos)
                    (not (Bd_not_msg_p6))

                    ; #39349: <==negation-removal== 79026 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #50943: <==negation-removal== 63770 (pos)
                    (not (not_msg_p6))

                    ; #52136: <==negation-removal== 46245 (pos)
                    (not (Bc_not_msg_p6))

                    ; #54202: <==negation-removal== 61179 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #54861: <==negation-removal== 57337 (pos)
                    (not (Pd_not_msg_p6))

                    ; #55083: <==negation-removal== 34716 (pos)
                    (not (Pc_not_msg_p6))

                    ; #56942: <==negation-removal== 14654 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #57504: <==negation-removal== 71873 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #59282: <==negation-removal== 89043 (pos)
                    (not (Bb_not_msg_p6))

                    ; #60060: <==negation-removal== 13910 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67475: <==negation-removal== 47378 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #80239: <==negation-removal== 18964 (pos)
                    (not (Pa_not_msg_p6))

                    ; #89308: <==negation-removal== 51794 (pos)
                    (not (Pc_not_survivorat_s_p6))))

    (:action commsurvivor_p6_d_s
        :precondition (and (Bd_survivorat_s_p6)
                           (at_d_p6)
                           (Pd_survivorat_s_p6))
        :effect (and
                    ; #10493: <==closure== 14654 (pos)
                    (Pb_survivorat_s_p6)

                    ; #13910: <==commonly_known== 63770 (pos)
                    (Bb_msg_p6)

                    ; #14654: origin
                    (Bb_survivorat_s_p6)

                    ; #18964: <==commonly_known== 63770 (pos)
                    (Ba_msg_p6)

                    ; #34716: <==commonly_known== 63770 (pos)
                    (Bc_msg_p6)

                    ; #44312: <==closure== 57337 (pos)
                    (Pd_msg_p6)

                    ; #46245: <==closure== 34716 (pos)
                    (Pc_msg_p6)

                    ; #47378: <==closure== 71873 (pos)
                    (Pd_survivorat_s_p6)

                    ; #51794: origin
                    (Bc_survivorat_s_p6)

                    ; #57337: <==commonly_known== 63770 (pos)
                    (Bd_msg_p6)

                    ; #61179: origin
                    (Ba_survivorat_s_p6)

                    ; #63770: origin
                    (msg_p6)

                    ; #68228: <==closure== 61179 (pos)
                    (Pa_survivorat_s_p6)

                    ; #71873: origin
                    (Bd_survivorat_s_p6)

                    ; #79026: <==closure== 51794 (pos)
                    (Pc_survivorat_s_p6)

                    ; #86841: <==closure== 18964 (pos)
                    (Pa_msg_p6)

                    ; #89043: <==closure== 13910 (pos)
                    (Pb_msg_p6)

                    ; #13560: <==negation-removal== 10493 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #15198: <==negation-removal== 68228 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #24073: <==negation-removal== 86841 (pos)
                    (not (Ba_not_msg_p6))

                    ; #33587: <==negation-removal== 44312 (pos)
                    (not (Bd_not_msg_p6))

                    ; #39349: <==negation-removal== 79026 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #50943: <==negation-removal== 63770 (pos)
                    (not (not_msg_p6))

                    ; #52136: <==negation-removal== 46245 (pos)
                    (not (Bc_not_msg_p6))

                    ; #54202: <==negation-removal== 61179 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #54861: <==negation-removal== 57337 (pos)
                    (not (Pd_not_msg_p6))

                    ; #55083: <==negation-removal== 34716 (pos)
                    (not (Pc_not_msg_p6))

                    ; #56942: <==negation-removal== 14654 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #57504: <==negation-removal== 71873 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #59282: <==negation-removal== 89043 (pos)
                    (not (Bb_not_msg_p6))

                    ; #60060: <==negation-removal== 13910 (pos)
                    (not (Pb_not_msg_p6))

                    ; #67475: <==negation-removal== 47378 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #80239: <==negation-removal== 18964 (pos)
                    (not (Pa_not_msg_p6))

                    ; #89308: <==negation-removal== 51794 (pos)
                    (not (Pc_not_survivorat_s_p6))))

    (:action commsurvivor_p7_a_s
        :precondition (and (Ba_survivorat_s_p7)
                           (at_a_p7)
                           (Pa_survivorat_s_p7))
        :effect (and
                    ; #10266: <==commonly_known== 48016 (pos)
                    (Bb_msg_p7)

                    ; #39524: origin
                    (Bd_survivorat_s_p7)

                    ; #40911: <==closure== 68560 (pos)
                    (Pa_msg_p7)

                    ; #43833: origin
                    (Ba_survivorat_s_p7)

                    ; #48016: origin
                    (msg_p7)

                    ; #56787: origin
                    (Bb_survivorat_s_p7)

                    ; #57957: <==commonly_known== 48016 (pos)
                    (Bc_msg_p7)

                    ; #61552: origin
                    (Bc_survivorat_s_p7)

                    ; #65288: <==commonly_known== 48016 (pos)
                    (Bd_msg_p7)

                    ; #66175: <==closure== 65288 (pos)
                    (Pd_msg_p7)

                    ; #68560: <==commonly_known== 48016 (pos)
                    (Ba_msg_p7)

                    ; #71357: <==closure== 57957 (pos)
                    (Pc_msg_p7)

                    ; #72233: <==closure== 61552 (pos)
                    (Pc_survivorat_s_p7)

                    ; #81415: <==closure== 43833 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83107: <==closure== 39524 (pos)
                    (Pd_survivorat_s_p7)

                    ; #89003: <==closure== 56787 (pos)
                    (Pb_survivorat_s_p7)

                    ; #90931: <==closure== 10266 (pos)
                    (Pb_msg_p7)

                    ; #16880: <==negation-removal== 83107 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #17512: <==negation-removal== 10266 (pos)
                    (not (Pb_not_msg_p7))

                    ; #22761: <==negation-removal== 71357 (pos)
                    (not (Bc_not_msg_p7))

                    ; #29850: <==negation-removal== 66175 (pos)
                    (not (Bd_not_msg_p7))

                    ; #33509: <==negation-removal== 61552 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #42250: <==negation-removal== 68560 (pos)
                    (not (Pa_not_msg_p7))

                    ; #42320: <==negation-removal== 89003 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #46059: <==negation-removal== 40911 (pos)
                    (not (Ba_not_msg_p7))

                    ; #46241: <==negation-removal== 57957 (pos)
                    (not (Pc_not_msg_p7))

                    ; #47630: <==negation-removal== 56787 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #48657: <==negation-removal== 48016 (pos)
                    (not (not_msg_p7))

                    ; #67226: <==negation-removal== 39524 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #75413: <==negation-removal== 90931 (pos)
                    (not (Bb_not_msg_p7))

                    ; #78737: <==negation-removal== 65288 (pos)
                    (not (Pd_not_msg_p7))

                    ; #80335: <==negation-removal== 43833 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #80946: <==negation-removal== 81415 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #88744: <==negation-removal== 72233 (pos)
                    (not (Bc_not_survivorat_s_p7))))

    (:action commsurvivor_p7_b_s
        :precondition (and (Pb_survivorat_s_p7)
                           (Bb_survivorat_s_p7)
                           (at_b_p7))
        :effect (and
                    ; #10266: <==commonly_known== 48016 (pos)
                    (Bb_msg_p7)

                    ; #39524: origin
                    (Bd_survivorat_s_p7)

                    ; #40911: <==closure== 68560 (pos)
                    (Pa_msg_p7)

                    ; #43833: origin
                    (Ba_survivorat_s_p7)

                    ; #48016: origin
                    (msg_p7)

                    ; #56787: origin
                    (Bb_survivorat_s_p7)

                    ; #57957: <==commonly_known== 48016 (pos)
                    (Bc_msg_p7)

                    ; #61552: origin
                    (Bc_survivorat_s_p7)

                    ; #65288: <==commonly_known== 48016 (pos)
                    (Bd_msg_p7)

                    ; #66175: <==closure== 65288 (pos)
                    (Pd_msg_p7)

                    ; #68560: <==commonly_known== 48016 (pos)
                    (Ba_msg_p7)

                    ; #71357: <==closure== 57957 (pos)
                    (Pc_msg_p7)

                    ; #72233: <==closure== 61552 (pos)
                    (Pc_survivorat_s_p7)

                    ; #81415: <==closure== 43833 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83107: <==closure== 39524 (pos)
                    (Pd_survivorat_s_p7)

                    ; #89003: <==closure== 56787 (pos)
                    (Pb_survivorat_s_p7)

                    ; #90931: <==closure== 10266 (pos)
                    (Pb_msg_p7)

                    ; #16880: <==negation-removal== 83107 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #17512: <==negation-removal== 10266 (pos)
                    (not (Pb_not_msg_p7))

                    ; #22761: <==negation-removal== 71357 (pos)
                    (not (Bc_not_msg_p7))

                    ; #29850: <==negation-removal== 66175 (pos)
                    (not (Bd_not_msg_p7))

                    ; #33509: <==negation-removal== 61552 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #42250: <==negation-removal== 68560 (pos)
                    (not (Pa_not_msg_p7))

                    ; #42320: <==negation-removal== 89003 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #46059: <==negation-removal== 40911 (pos)
                    (not (Ba_not_msg_p7))

                    ; #46241: <==negation-removal== 57957 (pos)
                    (not (Pc_not_msg_p7))

                    ; #47630: <==negation-removal== 56787 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #48657: <==negation-removal== 48016 (pos)
                    (not (not_msg_p7))

                    ; #67226: <==negation-removal== 39524 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #75413: <==negation-removal== 90931 (pos)
                    (not (Bb_not_msg_p7))

                    ; #78737: <==negation-removal== 65288 (pos)
                    (not (Pd_not_msg_p7))

                    ; #80335: <==negation-removal== 43833 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #80946: <==negation-removal== 81415 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #88744: <==negation-removal== 72233 (pos)
                    (not (Bc_not_survivorat_s_p7))))

    (:action commsurvivor_p7_c_s
        :precondition (and (Pc_survivorat_s_p7)
                           (Bc_survivorat_s_p7)
                           (at_c_p7))
        :effect (and
                    ; #10266: <==commonly_known== 48016 (pos)
                    (Bb_msg_p7)

                    ; #39524: origin
                    (Bd_survivorat_s_p7)

                    ; #40911: <==closure== 68560 (pos)
                    (Pa_msg_p7)

                    ; #43833: origin
                    (Ba_survivorat_s_p7)

                    ; #48016: origin
                    (msg_p7)

                    ; #56787: origin
                    (Bb_survivorat_s_p7)

                    ; #57957: <==commonly_known== 48016 (pos)
                    (Bc_msg_p7)

                    ; #61552: origin
                    (Bc_survivorat_s_p7)

                    ; #65288: <==commonly_known== 48016 (pos)
                    (Bd_msg_p7)

                    ; #66175: <==closure== 65288 (pos)
                    (Pd_msg_p7)

                    ; #68560: <==commonly_known== 48016 (pos)
                    (Ba_msg_p7)

                    ; #71357: <==closure== 57957 (pos)
                    (Pc_msg_p7)

                    ; #72233: <==closure== 61552 (pos)
                    (Pc_survivorat_s_p7)

                    ; #81415: <==closure== 43833 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83107: <==closure== 39524 (pos)
                    (Pd_survivorat_s_p7)

                    ; #89003: <==closure== 56787 (pos)
                    (Pb_survivorat_s_p7)

                    ; #90931: <==closure== 10266 (pos)
                    (Pb_msg_p7)

                    ; #16880: <==negation-removal== 83107 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #17512: <==negation-removal== 10266 (pos)
                    (not (Pb_not_msg_p7))

                    ; #22761: <==negation-removal== 71357 (pos)
                    (not (Bc_not_msg_p7))

                    ; #29850: <==negation-removal== 66175 (pos)
                    (not (Bd_not_msg_p7))

                    ; #33509: <==negation-removal== 61552 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #42250: <==negation-removal== 68560 (pos)
                    (not (Pa_not_msg_p7))

                    ; #42320: <==negation-removal== 89003 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #46059: <==negation-removal== 40911 (pos)
                    (not (Ba_not_msg_p7))

                    ; #46241: <==negation-removal== 57957 (pos)
                    (not (Pc_not_msg_p7))

                    ; #47630: <==negation-removal== 56787 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #48657: <==negation-removal== 48016 (pos)
                    (not (not_msg_p7))

                    ; #67226: <==negation-removal== 39524 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #75413: <==negation-removal== 90931 (pos)
                    (not (Bb_not_msg_p7))

                    ; #78737: <==negation-removal== 65288 (pos)
                    (not (Pd_not_msg_p7))

                    ; #80335: <==negation-removal== 43833 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #80946: <==negation-removal== 81415 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #88744: <==negation-removal== 72233 (pos)
                    (not (Bc_not_survivorat_s_p7))))

    (:action commsurvivor_p7_d_s
        :precondition (and (at_d_p7)
                           (Pd_survivorat_s_p7)
                           (Bd_survivorat_s_p7))
        :effect (and
                    ; #10266: <==commonly_known== 48016 (pos)
                    (Bb_msg_p7)

                    ; #39524: origin
                    (Bd_survivorat_s_p7)

                    ; #40911: <==closure== 68560 (pos)
                    (Pa_msg_p7)

                    ; #43833: origin
                    (Ba_survivorat_s_p7)

                    ; #48016: origin
                    (msg_p7)

                    ; #56787: origin
                    (Bb_survivorat_s_p7)

                    ; #57957: <==commonly_known== 48016 (pos)
                    (Bc_msg_p7)

                    ; #61552: origin
                    (Bc_survivorat_s_p7)

                    ; #65288: <==commonly_known== 48016 (pos)
                    (Bd_msg_p7)

                    ; #66175: <==closure== 65288 (pos)
                    (Pd_msg_p7)

                    ; #68560: <==commonly_known== 48016 (pos)
                    (Ba_msg_p7)

                    ; #71357: <==closure== 57957 (pos)
                    (Pc_msg_p7)

                    ; #72233: <==closure== 61552 (pos)
                    (Pc_survivorat_s_p7)

                    ; #81415: <==closure== 43833 (pos)
                    (Pa_survivorat_s_p7)

                    ; #83107: <==closure== 39524 (pos)
                    (Pd_survivorat_s_p7)

                    ; #89003: <==closure== 56787 (pos)
                    (Pb_survivorat_s_p7)

                    ; #90931: <==closure== 10266 (pos)
                    (Pb_msg_p7)

                    ; #16880: <==negation-removal== 83107 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #17512: <==negation-removal== 10266 (pos)
                    (not (Pb_not_msg_p7))

                    ; #22761: <==negation-removal== 71357 (pos)
                    (not (Bc_not_msg_p7))

                    ; #29850: <==negation-removal== 66175 (pos)
                    (not (Bd_not_msg_p7))

                    ; #33509: <==negation-removal== 61552 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #42250: <==negation-removal== 68560 (pos)
                    (not (Pa_not_msg_p7))

                    ; #42320: <==negation-removal== 89003 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #46059: <==negation-removal== 40911 (pos)
                    (not (Ba_not_msg_p7))

                    ; #46241: <==negation-removal== 57957 (pos)
                    (not (Pc_not_msg_p7))

                    ; #47630: <==negation-removal== 56787 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #48657: <==negation-removal== 48016 (pos)
                    (not (not_msg_p7))

                    ; #67226: <==negation-removal== 39524 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #75413: <==negation-removal== 90931 (pos)
                    (not (Bb_not_msg_p7))

                    ; #78737: <==negation-removal== 65288 (pos)
                    (not (Pd_not_msg_p7))

                    ; #80335: <==negation-removal== 43833 (pos)
                    (not (Pa_not_survivorat_s_p7))

                    ; #80946: <==negation-removal== 81415 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #88744: <==negation-removal== 72233 (pos)
                    (not (Bc_not_survivorat_s_p7))))

    (:action commsurvivor_p8_a_s
        :precondition (and (Pa_survivorat_s_p8)
                           (Ba_survivorat_s_p8)
                           (at_a_p8))
        :effect (and
                    ; #12711: <==commonly_known== 50376 (pos)
                    (Bd_msg_p8)

                    ; #14295: <==closure== 37372 (pos)
                    (Pa_msg_p8)

                    ; #27876: <==closure== 50784 (pos)
                    (Pb_msg_p8)

                    ; #29408: origin
                    (Bb_survivorat_s_p8)

                    ; #37372: <==commonly_known== 50376 (pos)
                    (Ba_msg_p8)

                    ; #50376: origin
                    (msg_p8)

                    ; #50784: <==commonly_known== 50376 (pos)
                    (Bb_msg_p8)

                    ; #52175: <==closure== 82657 (pos)
                    (Pd_survivorat_s_p8)

                    ; #56173: <==closure== 57655 (pos)
                    (Pa_survivorat_s_p8)

                    ; #57655: origin
                    (Ba_survivorat_s_p8)

                    ; #58703: <==closure== 12711 (pos)
                    (Pd_msg_p8)

                    ; #62047: origin
                    (Bc_survivorat_s_p8)

                    ; #62395: <==closure== 29408 (pos)
                    (Pb_survivorat_s_p8)

                    ; #66987: <==commonly_known== 50376 (pos)
                    (Bc_msg_p8)

                    ; #76360: <==closure== 66987 (pos)
                    (Pc_msg_p8)

                    ; #82657: origin
                    (Bd_survivorat_s_p8)

                    ; #82658: <==closure== 62047 (pos)
                    (Pc_survivorat_s_p8)

                    ; #16059: <==negation-removal== 12711 (pos)
                    (not (Pd_not_msg_p8))

                    ; #21673: <==negation-removal== 50784 (pos)
                    (not (Pb_not_msg_p8))

                    ; #21751: <==negation-removal== 37372 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27521: <==negation-removal== 52175 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #29280: <==negation-removal== 57655 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #31092: <==negation-removal== 56173 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #31103: <==negation-removal== 62395 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #34308: <==negation-removal== 82657 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #44080: <==negation-removal== 14295 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45701: <==negation-removal== 29408 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #59496: <==negation-removal== 76360 (pos)
                    (not (Bc_not_msg_p8))

                    ; #61115: <==negation-removal== 82658 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #63396: <==negation-removal== 27876 (pos)
                    (not (Bb_not_msg_p8))

                    ; #66077: <==negation-removal== 58703 (pos)
                    (not (Bd_not_msg_p8))

                    ; #68061: <==negation-removal== 66987 (pos)
                    (not (Pc_not_msg_p8))

                    ; #84881: <==negation-removal== 62047 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #87331: <==negation-removal== 50376 (pos)
                    (not (not_msg_p8))))

    (:action commsurvivor_p8_b_s
        :precondition (and (Pb_survivorat_s_p8)
                           (Bb_survivorat_s_p8)
                           (at_b_p8))
        :effect (and
                    ; #12711: <==commonly_known== 50376 (pos)
                    (Bd_msg_p8)

                    ; #14295: <==closure== 37372 (pos)
                    (Pa_msg_p8)

                    ; #27876: <==closure== 50784 (pos)
                    (Pb_msg_p8)

                    ; #29408: origin
                    (Bb_survivorat_s_p8)

                    ; #37372: <==commonly_known== 50376 (pos)
                    (Ba_msg_p8)

                    ; #50376: origin
                    (msg_p8)

                    ; #50784: <==commonly_known== 50376 (pos)
                    (Bb_msg_p8)

                    ; #52175: <==closure== 82657 (pos)
                    (Pd_survivorat_s_p8)

                    ; #56173: <==closure== 57655 (pos)
                    (Pa_survivorat_s_p8)

                    ; #57655: origin
                    (Ba_survivorat_s_p8)

                    ; #58703: <==closure== 12711 (pos)
                    (Pd_msg_p8)

                    ; #62047: origin
                    (Bc_survivorat_s_p8)

                    ; #62395: <==closure== 29408 (pos)
                    (Pb_survivorat_s_p8)

                    ; #66987: <==commonly_known== 50376 (pos)
                    (Bc_msg_p8)

                    ; #76360: <==closure== 66987 (pos)
                    (Pc_msg_p8)

                    ; #82657: origin
                    (Bd_survivorat_s_p8)

                    ; #82658: <==closure== 62047 (pos)
                    (Pc_survivorat_s_p8)

                    ; #16059: <==negation-removal== 12711 (pos)
                    (not (Pd_not_msg_p8))

                    ; #21673: <==negation-removal== 50784 (pos)
                    (not (Pb_not_msg_p8))

                    ; #21751: <==negation-removal== 37372 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27521: <==negation-removal== 52175 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #29280: <==negation-removal== 57655 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #31092: <==negation-removal== 56173 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #31103: <==negation-removal== 62395 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #34308: <==negation-removal== 82657 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #44080: <==negation-removal== 14295 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45701: <==negation-removal== 29408 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #59496: <==negation-removal== 76360 (pos)
                    (not (Bc_not_msg_p8))

                    ; #61115: <==negation-removal== 82658 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #63396: <==negation-removal== 27876 (pos)
                    (not (Bb_not_msg_p8))

                    ; #66077: <==negation-removal== 58703 (pos)
                    (not (Bd_not_msg_p8))

                    ; #68061: <==negation-removal== 66987 (pos)
                    (not (Pc_not_msg_p8))

                    ; #84881: <==negation-removal== 62047 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #87331: <==negation-removal== 50376 (pos)
                    (not (not_msg_p8))))

    (:action commsurvivor_p8_c_s
        :precondition (and (Bc_survivorat_s_p8)
                           (at_c_p8)
                           (Pc_survivorat_s_p8))
        :effect (and
                    ; #12711: <==commonly_known== 50376 (pos)
                    (Bd_msg_p8)

                    ; #14295: <==closure== 37372 (pos)
                    (Pa_msg_p8)

                    ; #27876: <==closure== 50784 (pos)
                    (Pb_msg_p8)

                    ; #29408: origin
                    (Bb_survivorat_s_p8)

                    ; #37372: <==commonly_known== 50376 (pos)
                    (Ba_msg_p8)

                    ; #50376: origin
                    (msg_p8)

                    ; #50784: <==commonly_known== 50376 (pos)
                    (Bb_msg_p8)

                    ; #52175: <==closure== 82657 (pos)
                    (Pd_survivorat_s_p8)

                    ; #56173: <==closure== 57655 (pos)
                    (Pa_survivorat_s_p8)

                    ; #57655: origin
                    (Ba_survivorat_s_p8)

                    ; #58703: <==closure== 12711 (pos)
                    (Pd_msg_p8)

                    ; #62047: origin
                    (Bc_survivorat_s_p8)

                    ; #62395: <==closure== 29408 (pos)
                    (Pb_survivorat_s_p8)

                    ; #66987: <==commonly_known== 50376 (pos)
                    (Bc_msg_p8)

                    ; #76360: <==closure== 66987 (pos)
                    (Pc_msg_p8)

                    ; #82657: origin
                    (Bd_survivorat_s_p8)

                    ; #82658: <==closure== 62047 (pos)
                    (Pc_survivorat_s_p8)

                    ; #16059: <==negation-removal== 12711 (pos)
                    (not (Pd_not_msg_p8))

                    ; #21673: <==negation-removal== 50784 (pos)
                    (not (Pb_not_msg_p8))

                    ; #21751: <==negation-removal== 37372 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27521: <==negation-removal== 52175 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #29280: <==negation-removal== 57655 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #31092: <==negation-removal== 56173 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #31103: <==negation-removal== 62395 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #34308: <==negation-removal== 82657 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #44080: <==negation-removal== 14295 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45701: <==negation-removal== 29408 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #59496: <==negation-removal== 76360 (pos)
                    (not (Bc_not_msg_p8))

                    ; #61115: <==negation-removal== 82658 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #63396: <==negation-removal== 27876 (pos)
                    (not (Bb_not_msg_p8))

                    ; #66077: <==negation-removal== 58703 (pos)
                    (not (Bd_not_msg_p8))

                    ; #68061: <==negation-removal== 66987 (pos)
                    (not (Pc_not_msg_p8))

                    ; #84881: <==negation-removal== 62047 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #87331: <==negation-removal== 50376 (pos)
                    (not (not_msg_p8))))

    (:action commsurvivor_p8_d_s
        :precondition (and (Bd_survivorat_s_p8)
                           (at_d_p8)
                           (Pd_survivorat_s_p8))
        :effect (and
                    ; #12711: <==commonly_known== 50376 (pos)
                    (Bd_msg_p8)

                    ; #14295: <==closure== 37372 (pos)
                    (Pa_msg_p8)

                    ; #27876: <==closure== 50784 (pos)
                    (Pb_msg_p8)

                    ; #29408: origin
                    (Bb_survivorat_s_p8)

                    ; #37372: <==commonly_known== 50376 (pos)
                    (Ba_msg_p8)

                    ; #50376: origin
                    (msg_p8)

                    ; #50784: <==commonly_known== 50376 (pos)
                    (Bb_msg_p8)

                    ; #52175: <==closure== 82657 (pos)
                    (Pd_survivorat_s_p8)

                    ; #56173: <==closure== 57655 (pos)
                    (Pa_survivorat_s_p8)

                    ; #57655: origin
                    (Ba_survivorat_s_p8)

                    ; #58703: <==closure== 12711 (pos)
                    (Pd_msg_p8)

                    ; #62047: origin
                    (Bc_survivorat_s_p8)

                    ; #62395: <==closure== 29408 (pos)
                    (Pb_survivorat_s_p8)

                    ; #66987: <==commonly_known== 50376 (pos)
                    (Bc_msg_p8)

                    ; #76360: <==closure== 66987 (pos)
                    (Pc_msg_p8)

                    ; #82657: origin
                    (Bd_survivorat_s_p8)

                    ; #82658: <==closure== 62047 (pos)
                    (Pc_survivorat_s_p8)

                    ; #16059: <==negation-removal== 12711 (pos)
                    (not (Pd_not_msg_p8))

                    ; #21673: <==negation-removal== 50784 (pos)
                    (not (Pb_not_msg_p8))

                    ; #21751: <==negation-removal== 37372 (pos)
                    (not (Pa_not_msg_p8))

                    ; #27521: <==negation-removal== 52175 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #29280: <==negation-removal== 57655 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #31092: <==negation-removal== 56173 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #31103: <==negation-removal== 62395 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #34308: <==negation-removal== 82657 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #44080: <==negation-removal== 14295 (pos)
                    (not (Ba_not_msg_p8))

                    ; #45701: <==negation-removal== 29408 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #59496: <==negation-removal== 76360 (pos)
                    (not (Bc_not_msg_p8))

                    ; #61115: <==negation-removal== 82658 (pos)
                    (not (Bc_not_survivorat_s_p8))

                    ; #63396: <==negation-removal== 27876 (pos)
                    (not (Bb_not_msg_p8))

                    ; #66077: <==negation-removal== 58703 (pos)
                    (not (Bd_not_msg_p8))

                    ; #68061: <==negation-removal== 66987 (pos)
                    (not (Pc_not_msg_p8))

                    ; #84881: <==negation-removal== 62047 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #87331: <==negation-removal== 50376 (pos)
                    (not (not_msg_p8))))

    (:action commsurvivor_p9_a_s
        :precondition (and (Pa_survivorat_s_p9)
                           (at_a_p9)
                           (Ba_survivorat_s_p9))
        :effect (and
                    ; #10188: <==commonly_known== 84932 (pos)
                    (Bc_msg_p9)

                    ; #12206: <==closure== 39859 (pos)
                    (Pb_survivorat_s_p9)

                    ; #19782: <==commonly_known== 84932 (pos)
                    (Bd_msg_p9)

                    ; #19920: <==closure== 28027 (pos)
                    (Pb_msg_p9)

                    ; #26291: <==closure== 19782 (pos)
                    (Pd_msg_p9)

                    ; #28027: <==commonly_known== 84932 (pos)
                    (Bb_msg_p9)

                    ; #39859: origin
                    (Bb_survivorat_s_p9)

                    ; #40298: <==closure== 84990 (pos)
                    (Pd_survivorat_s_p9)

                    ; #51204: <==closure== 73706 (pos)
                    (Pa_survivorat_s_p9)

                    ; #56355: <==commonly_known== 84932 (pos)
                    (Ba_msg_p9)

                    ; #57148: <==closure== 56355 (pos)
                    (Pa_msg_p9)

                    ; #66416: origin
                    (Bc_survivorat_s_p9)

                    ; #68947: <==closure== 66416 (pos)
                    (Pc_survivorat_s_p9)

                    ; #73706: origin
                    (Ba_survivorat_s_p9)

                    ; #84932: origin
                    (msg_p9)

                    ; #84990: origin
                    (Bd_survivorat_s_p9)

                    ; #91947: <==closure== 10188 (pos)
                    (Pc_msg_p9)

                    ; #23445: <==negation-removal== 84990 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #27454: <==negation-removal== 19782 (pos)
                    (not (Pd_not_msg_p9))

                    ; #28796: <==negation-removal== 68947 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #33479: <==negation-removal== 39859 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #37755: <==negation-removal== 40298 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #42354: <==negation-removal== 28027 (pos)
                    (not (Pb_not_msg_p9))

                    ; #53838: <==negation-removal== 56355 (pos)
                    (not (Pa_not_msg_p9))

                    ; #58558: <==negation-removal== 91947 (pos)
                    (not (Bc_not_msg_p9))

                    ; #61808: <==negation-removal== 19920 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65632: <==negation-removal== 84932 (pos)
                    (not (not_msg_p9))

                    ; #66319: <==negation-removal== 12206 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #70892: <==negation-removal== 57148 (pos)
                    (not (Ba_not_msg_p9))

                    ; #71573: <==negation-removal== 66416 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #71736: <==negation-removal== 26291 (pos)
                    (not (Bd_not_msg_p9))

                    ; #74654: <==negation-removal== 51204 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #77223: <==negation-removal== 10188 (pos)
                    (not (Pc_not_msg_p9))

                    ; #78025: <==negation-removal== 73706 (pos)
                    (not (Pa_not_survivorat_s_p9))))

    (:action commsurvivor_p9_b_s
        :precondition (and (Pb_survivorat_s_p9)
                           (at_b_p9)
                           (Bb_survivorat_s_p9))
        :effect (and
                    ; #10188: <==commonly_known== 84932 (pos)
                    (Bc_msg_p9)

                    ; #12206: <==closure== 39859 (pos)
                    (Pb_survivorat_s_p9)

                    ; #19782: <==commonly_known== 84932 (pos)
                    (Bd_msg_p9)

                    ; #19920: <==closure== 28027 (pos)
                    (Pb_msg_p9)

                    ; #26291: <==closure== 19782 (pos)
                    (Pd_msg_p9)

                    ; #28027: <==commonly_known== 84932 (pos)
                    (Bb_msg_p9)

                    ; #39859: origin
                    (Bb_survivorat_s_p9)

                    ; #40298: <==closure== 84990 (pos)
                    (Pd_survivorat_s_p9)

                    ; #51204: <==closure== 73706 (pos)
                    (Pa_survivorat_s_p9)

                    ; #56355: <==commonly_known== 84932 (pos)
                    (Ba_msg_p9)

                    ; #57148: <==closure== 56355 (pos)
                    (Pa_msg_p9)

                    ; #66416: origin
                    (Bc_survivorat_s_p9)

                    ; #68947: <==closure== 66416 (pos)
                    (Pc_survivorat_s_p9)

                    ; #73706: origin
                    (Ba_survivorat_s_p9)

                    ; #84932: origin
                    (msg_p9)

                    ; #84990: origin
                    (Bd_survivorat_s_p9)

                    ; #91947: <==closure== 10188 (pos)
                    (Pc_msg_p9)

                    ; #23445: <==negation-removal== 84990 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #27454: <==negation-removal== 19782 (pos)
                    (not (Pd_not_msg_p9))

                    ; #28796: <==negation-removal== 68947 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #33479: <==negation-removal== 39859 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #37755: <==negation-removal== 40298 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #42354: <==negation-removal== 28027 (pos)
                    (not (Pb_not_msg_p9))

                    ; #53838: <==negation-removal== 56355 (pos)
                    (not (Pa_not_msg_p9))

                    ; #58558: <==negation-removal== 91947 (pos)
                    (not (Bc_not_msg_p9))

                    ; #61808: <==negation-removal== 19920 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65632: <==negation-removal== 84932 (pos)
                    (not (not_msg_p9))

                    ; #66319: <==negation-removal== 12206 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #70892: <==negation-removal== 57148 (pos)
                    (not (Ba_not_msg_p9))

                    ; #71573: <==negation-removal== 66416 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #71736: <==negation-removal== 26291 (pos)
                    (not (Bd_not_msg_p9))

                    ; #74654: <==negation-removal== 51204 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #77223: <==negation-removal== 10188 (pos)
                    (not (Pc_not_msg_p9))

                    ; #78025: <==negation-removal== 73706 (pos)
                    (not (Pa_not_survivorat_s_p9))))

    (:action commsurvivor_p9_c_s
        :precondition (and (at_c_p9)
                           (Pc_survivorat_s_p9)
                           (Bc_survivorat_s_p9))
        :effect (and
                    ; #10188: <==commonly_known== 84932 (pos)
                    (Bc_msg_p9)

                    ; #12206: <==closure== 39859 (pos)
                    (Pb_survivorat_s_p9)

                    ; #19782: <==commonly_known== 84932 (pos)
                    (Bd_msg_p9)

                    ; #19920: <==closure== 28027 (pos)
                    (Pb_msg_p9)

                    ; #26291: <==closure== 19782 (pos)
                    (Pd_msg_p9)

                    ; #28027: <==commonly_known== 84932 (pos)
                    (Bb_msg_p9)

                    ; #39859: origin
                    (Bb_survivorat_s_p9)

                    ; #40298: <==closure== 84990 (pos)
                    (Pd_survivorat_s_p9)

                    ; #51204: <==closure== 73706 (pos)
                    (Pa_survivorat_s_p9)

                    ; #56355: <==commonly_known== 84932 (pos)
                    (Ba_msg_p9)

                    ; #57148: <==closure== 56355 (pos)
                    (Pa_msg_p9)

                    ; #66416: origin
                    (Bc_survivorat_s_p9)

                    ; #68947: <==closure== 66416 (pos)
                    (Pc_survivorat_s_p9)

                    ; #73706: origin
                    (Ba_survivorat_s_p9)

                    ; #84932: origin
                    (msg_p9)

                    ; #84990: origin
                    (Bd_survivorat_s_p9)

                    ; #91947: <==closure== 10188 (pos)
                    (Pc_msg_p9)

                    ; #23445: <==negation-removal== 84990 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #27454: <==negation-removal== 19782 (pos)
                    (not (Pd_not_msg_p9))

                    ; #28796: <==negation-removal== 68947 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #33479: <==negation-removal== 39859 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #37755: <==negation-removal== 40298 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #42354: <==negation-removal== 28027 (pos)
                    (not (Pb_not_msg_p9))

                    ; #53838: <==negation-removal== 56355 (pos)
                    (not (Pa_not_msg_p9))

                    ; #58558: <==negation-removal== 91947 (pos)
                    (not (Bc_not_msg_p9))

                    ; #61808: <==negation-removal== 19920 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65632: <==negation-removal== 84932 (pos)
                    (not (not_msg_p9))

                    ; #66319: <==negation-removal== 12206 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #70892: <==negation-removal== 57148 (pos)
                    (not (Ba_not_msg_p9))

                    ; #71573: <==negation-removal== 66416 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #71736: <==negation-removal== 26291 (pos)
                    (not (Bd_not_msg_p9))

                    ; #74654: <==negation-removal== 51204 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #77223: <==negation-removal== 10188 (pos)
                    (not (Pc_not_msg_p9))

                    ; #78025: <==negation-removal== 73706 (pos)
                    (not (Pa_not_survivorat_s_p9))))

    (:action commsurvivor_p9_d_s
        :precondition (and (at_d_p9)
                           (Bd_survivorat_s_p9)
                           (Pd_survivorat_s_p9))
        :effect (and
                    ; #10188: <==commonly_known== 84932 (pos)
                    (Bc_msg_p9)

                    ; #12206: <==closure== 39859 (pos)
                    (Pb_survivorat_s_p9)

                    ; #19782: <==commonly_known== 84932 (pos)
                    (Bd_msg_p9)

                    ; #19920: <==closure== 28027 (pos)
                    (Pb_msg_p9)

                    ; #26291: <==closure== 19782 (pos)
                    (Pd_msg_p9)

                    ; #28027: <==commonly_known== 84932 (pos)
                    (Bb_msg_p9)

                    ; #39859: origin
                    (Bb_survivorat_s_p9)

                    ; #40298: <==closure== 84990 (pos)
                    (Pd_survivorat_s_p9)

                    ; #51204: <==closure== 73706 (pos)
                    (Pa_survivorat_s_p9)

                    ; #56355: <==commonly_known== 84932 (pos)
                    (Ba_msg_p9)

                    ; #57148: <==closure== 56355 (pos)
                    (Pa_msg_p9)

                    ; #66416: origin
                    (Bc_survivorat_s_p9)

                    ; #68947: <==closure== 66416 (pos)
                    (Pc_survivorat_s_p9)

                    ; #73706: origin
                    (Ba_survivorat_s_p9)

                    ; #84932: origin
                    (msg_p9)

                    ; #84990: origin
                    (Bd_survivorat_s_p9)

                    ; #91947: <==closure== 10188 (pos)
                    (Pc_msg_p9)

                    ; #23445: <==negation-removal== 84990 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #27454: <==negation-removal== 19782 (pos)
                    (not (Pd_not_msg_p9))

                    ; #28796: <==negation-removal== 68947 (pos)
                    (not (Bc_not_survivorat_s_p9))

                    ; #33479: <==negation-removal== 39859 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #37755: <==negation-removal== 40298 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #42354: <==negation-removal== 28027 (pos)
                    (not (Pb_not_msg_p9))

                    ; #53838: <==negation-removal== 56355 (pos)
                    (not (Pa_not_msg_p9))

                    ; #58558: <==negation-removal== 91947 (pos)
                    (not (Bc_not_msg_p9))

                    ; #61808: <==negation-removal== 19920 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65632: <==negation-removal== 84932 (pos)
                    (not (not_msg_p9))

                    ; #66319: <==negation-removal== 12206 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #70892: <==negation-removal== 57148 (pos)
                    (not (Ba_not_msg_p9))

                    ; #71573: <==negation-removal== 66416 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #71736: <==negation-removal== 26291 (pos)
                    (not (Bd_not_msg_p9))

                    ; #74654: <==negation-removal== 51204 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #77223: <==negation-removal== 10188 (pos)
                    (not (Pc_not_msg_p9))

                    ; #78025: <==negation-removal== 73706 (pos)
                    (not (Pa_not_survivorat_s_p9))))

    (:action communcells_p1_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (at_a_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p1_b
        :precondition (and (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p1)
                           (Pd_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p1_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p1)
                           (Pa_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p1_p2_b
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p1)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p1_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p1_p2)
                           (at_c_p1))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p1_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p1)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p1_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p1)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p1_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p1)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p1_p3_c
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p1_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p1)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p1_p4_a
        :precondition (and (succ_p1_p4)
                           (checked_p4)
                           (at_a_p1)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p1_p4_b
        :precondition (and (succ_p1_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p1)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p1_p4_c
        :precondition (and (at_c_p1)
                           (succ_p1_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p1_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p1_p4)
                           (checked_p4)
                           (at_d_p1))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p1_p5_a
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (at_a_p1)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p1_p5_b
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p1)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p1_p5_c
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p1))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p1_p5_d
        :precondition (and (succ_p1_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p1))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p1_p6_a
        :precondition (and (Ba_not_blocked_p6)
                           (at_a_p1)
                           (succ_p1_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p6_b
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p6)
                           (succ_p1_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p1)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p1_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p1_p7)
                           (at_a_p1)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p1_p7_b
        :precondition (and (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (at_b_p1))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p1_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p1))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p1_p7_d
        :precondition (and (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p1_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p1))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p1_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (at_a_p1)
                           (checked_p8)
                           (succ_p1_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p1)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p1))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p1)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p1_p9_a
        :precondition (and (succ_p1_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p1)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p1_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p1_p9)
                           (at_b_p1)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p1_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (checked_p9)
                           (succ_p1_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p1))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p1_p9_d
        :precondition (and (Bd_not_blocked_p9)
                           (succ_p1_p9)
                           (at_d_p1)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p1_a
        :precondition (and (succ_p2_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p2))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p1_b
        :precondition (and (succ_p2_p1)
                           (checked_p1)
                           (at_b_p2)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p2_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p2))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p1_d
        :precondition (and (at_d_p2)
                           (succ_p2_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p2_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p2_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p2_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p2_p2_d
        :precondition (and (at_d_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (checked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p2_p3_a
        :precondition (and (succ_p2_p3)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (at_a_p2))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p2_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p2_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p2)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p2_p3_c
        :precondition (and (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p2)
                           (Bc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p2_p3_d
        :precondition (and (succ_p2_p3)
                           (Bd_not_blocked_p3)
                           (at_d_p2)
                           (Pd_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p2_p4_a
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p2_p4_b
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p2))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p2_p4_c
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p2)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p2_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p2_p4)
                           (at_d_p2)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p2_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p2_p5_b
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p2)
                           (succ_p2_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p2_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p2_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p2)
                           (Bd_not_blocked_p5)
                           (succ_p2_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p2_p6_a
        :precondition (and (Ba_not_blocked_p6)
                           (at_a_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p6_b
        :precondition (and (Pb_not_blocked_p6)
                           (at_b_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (at_c_p2)
                           (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p2)
                           (succ_p2_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p2_p7_a
        :precondition (and (succ_p2_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p2))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p2_p7_b
        :precondition (and (succ_p2_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p2))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p2_p7_c
        :precondition (and (succ_p2_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p2)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p2_p7_d
        :precondition (and (succ_p2_p7)
                           (at_d_p2)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p2_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (at_a_p2)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p2_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p2)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p8_c
        :precondition (and (succ_p2_p8)
                           (at_c_p2)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p8_d
        :precondition (and (at_d_p2)
                           (succ_p2_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p2_p9_a
        :precondition (and (Pa_not_blocked_p9)
                           (succ_p2_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p2)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p2)
                           (succ_p2_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (at_c_p2)
                           (succ_p2_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p2_p9_d
        :precondition (and (at_d_p2)
                           (Bd_not_blocked_p9)
                           (succ_p2_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p3))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (at_b_p3)
                           (checked_p1)
                           (succ_p3_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p1_c
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p3)
                           (succ_p3_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p3_p2_a
        :precondition (and (succ_p3_p2)
                           (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p3)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p3_p2_b
        :precondition (and (succ_p3_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p3)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p3_p2_c
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p2)
                           (succ_p3_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p3_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (succ_p3_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p3)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p3_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p3_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p3_p3_c
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p3_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p3_p4_a
        :precondition (and (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p3_p4)
                           (at_a_p3)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p3_p4_b
        :precondition (and (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p3)
                           (Bb_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p3_p4_c
        :precondition (and (at_c_p3)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p3_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p3_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p3)
                           (Pd_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p3_p5_a
        :precondition (and (checked_p5)
                           (succ_p3_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p3))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p3_p5_b
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p3_p5)
                           (at_b_p3)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p3_p5_c
        :precondition (and (at_c_p3)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p3_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p3_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p3_p5)
                           (at_d_p3)
                           (Bd_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p3_p6_a
        :precondition (and (succ_p3_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p3)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p6_b
        :precondition (and (succ_p3_p6)
                           (at_b_p3)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p6_c
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p6)
                           (succ_p3_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p3_p6)
                           (at_d_p3)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p3_p7_a
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p3_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p3))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p3_p7_b
        :precondition (and (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p3)
                           (checked_p7)
                           (succ_p3_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p3_p7_c
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p3_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p3_p7_d
        :precondition (and (checked_p7)
                           (at_d_p3)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p3_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p3_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8)
                           (at_a_p3)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (at_b_p3)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p8_c
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p3)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p3_p9_a
        :precondition (and (succ_p3_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p3)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p9_b
        :precondition (and (succ_p3_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p3)
                           (checked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p9_c
        :precondition (and (at_c_p3)
                           (succ_p3_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p3_p9_d
        :precondition (and (succ_p3_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p3)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p4)
                           (Pa_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p1_b
        :precondition (and (at_b_p4)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p4)
                           (checked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p4)
                           (Pd_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p4_p2_a
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (succ_p4_p2)
                           (at_a_p4)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p4_p2_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p4_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p4_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p4)
                           (succ_p4_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p4_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (succ_p4_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p4)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p4_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p4)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p4_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (at_b_p4)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p4_p3_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p4_p3_d
        :precondition (and (checked_p3)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p4_p4_a
        :precondition (and (checked_p4)
                           (succ_p4_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p4_p4_b
        :precondition (and (at_b_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p4_p4)
                           (Bb_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p4_p4_c
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p4_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p4_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p4_p5_a
        :precondition (and (checked_p5)
                           (succ_p4_p5)
                           (at_a_p4)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p4_p5_b
        :precondition (and (at_b_p4)
                           (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p4_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p4_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p4_p5)
                           (at_c_p4)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p4_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p4))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p4_p6_a
        :precondition (and (Ba_not_blocked_p6)
                           (at_a_p4)
                           (checked_p6)
                           (succ_p4_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p6_b
        :precondition (and (at_b_p4)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p4_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (at_c_p4)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (succ_p4_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (checked_p6)
                           (Bd_not_blocked_p6)
                           (succ_p4_p6)
                           (at_d_p4))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p4_p7_a
        :precondition (and (succ_p4_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p4)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p4_p7_b
        :precondition (and (at_b_p4)
                           (Pb_not_blocked_p7)
                           (succ_p4_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p4_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7)
                           (at_c_p4)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p4_p7_d
        :precondition (and (succ_p4_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p4))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p4_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p4_p8)
                           (at_a_p4)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (at_b_p4)
                           (succ_p4_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p8_c
        :precondition (and (succ_p4_p8)
                           (at_c_p4)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p8_d
        :precondition (and (succ_p4_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p4))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p4_p9_a
        :precondition (and (Pa_not_blocked_p9)
                           (succ_p4_p9)
                           (at_a_p4)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p9_b
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p4_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (at_c_p4)
                           (succ_p4_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p4_p9_d
        :precondition (and (Bd_not_blocked_p9)
                           (succ_p4_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p4)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p1_a
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p5_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p1_b
        :precondition (and (checked_p1)
                           (succ_p5_p1)
                           (at_b_p5)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p1_c
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p5_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p5_p1)
                           (at_d_p5)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p5_p2_a
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p2)
                           (succ_p5_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p5_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p5_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p5)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p5_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p5)
                           (succ_p5_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p5_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (succ_p5_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p5)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p5_p3_a
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p5_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p5)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p5_p3_c
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p5_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p5)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p5_p4_a
        :precondition (and (at_a_p5)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p5_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p5_p4_b
        :precondition (and (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p5_p4_c
        :precondition (and (at_c_p5)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p5_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p5_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p5_p5_a
        :precondition (and (checked_p5)
                           (succ_p5_p5)
                           (at_a_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p5_p5_b
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p5_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p5_p5_c
        :precondition (and (checked_p5)
                           (at_c_p5)
                           (succ_p5_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p5_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p5_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p5_p6_a
        :precondition (and (succ_p5_p6)
                           (at_a_p5)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p6_b
        :precondition (and (succ_p5_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p5)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p6_c
        :precondition (and (succ_p5_p6)
                           (at_c_p5)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p6_d
        :precondition (and (succ_p5_p6)
                           (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p5)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p5_p7_a
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (at_a_p5)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p5_p7_b
        :precondition (and (Pb_not_blocked_p7)
                           (succ_p5_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p5))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p5_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (at_c_p5)
                           (succ_p5_p7)
                           (checked_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p5_p7_d
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p5))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p5_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p5_p8)
                           (at_a_p5)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p5_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p5)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p8_c
        :precondition (and (at_c_p5)
                           (succ_p5_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p8_d
        :precondition (and (succ_p5_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p5)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p5_p9_a
        :precondition (and (at_a_p5)
                           (succ_p5_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p5)
                           (succ_p5_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p9_c
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p9)
                           (succ_p5_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p5_p9_d
        :precondition (and (Bd_not_blocked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p5)
                           (succ_p5_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p1_a
        :precondition (and (at_a_p6)
                           (succ_p6_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p1_b
        :precondition (and (at_b_p6)
                           (succ_p6_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p1_c
        :precondition (and (succ_p6_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p6))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p1_d
        :precondition (and (succ_p6_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p6)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p6_p2_a
        :precondition (and (at_a_p6)
                           (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p6_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p6_p2_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p6_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p6_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p6_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p6)
                           (succ_p6_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p6_p3_a
        :precondition (and (at_a_p6)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p6_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (at_b_p6)
                           (Pb_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p6_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3)
                           (at_c_p6))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p6_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p6_p3)
                           (at_d_p6)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p6_p4_a
        :precondition (and (at_a_p6)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p6_p4_b
        :precondition (and (at_b_p6)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p6_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p6_p4_c
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p6)
                           (succ_p6_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p6_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p6_p4)
                           (at_d_p6))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p6_p5_a
        :precondition (and (checked_p5)
                           (at_a_p6)
                           (succ_p6_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p6_p5_b
        :precondition (and (at_b_p6)
                           (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p6_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p6_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p6_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p6))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p6_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p6_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p6))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p6_p6_a
        :precondition (and (at_a_p6)
                           (succ_p6_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p6_b
        :precondition (and (at_b_p6)
                           (succ_p6_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (succ_p6_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p6_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p6_p7_a
        :precondition (and (at_a_p6)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p6_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p6_p7_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p6_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p6))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p6_p7_d
        :precondition (and (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p6_p8_a
        :precondition (and (succ_p6_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p6)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p8_b
        :precondition (and (succ_p6_p8)
                           (at_b_p6)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p8_c
        :precondition (and (succ_p6_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p6))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p8_d
        :precondition (and (succ_p6_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p6)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p6_p9_a
        :precondition (and (at_a_p6)
                           (succ_p6_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p9_b
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p9_c
        :precondition (and (succ_p6_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p6))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p6_p9_d
        :precondition (and (succ_p6_p9)
                           (Bd_not_blocked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p6)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p7)
                           (Pa_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p1_b
        :precondition (and (at_b_p7)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p1_d
        :precondition (and (at_d_p7)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p7_p2_a
        :precondition (and (succ_p7_p2)
                           (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p7)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p7_p2_b
        :precondition (and (succ_p7_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p7)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p7_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p7_p2)
                           (at_c_p7)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p7_p2_d
        :precondition (and (at_d_p7)
                           (succ_p7_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p7_p3_a
        :precondition (and (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p7_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p7))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p7_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p7)
                           (succ_p7_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p7_p3_c
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p3)
                           (succ_p7_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p7_p3_d
        :precondition (and (at_d_p7)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p7_p4_a
        :precondition (and (succ_p7_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p7)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p7_p4_b
        :precondition (and (succ_p7_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p7)
                           (Bb_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p7_p4_c
        :precondition (and (succ_p7_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p7)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p7_p4_d
        :precondition (and (at_d_p7)
                           (Bd_not_blocked_p4)
                           (succ_p7_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p7_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p7_p5)
                           (at_a_p7))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p7_p5_b
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p7)
                           (succ_p7_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p7_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p7)
                           (Pc_not_blocked_p5)
                           (succ_p7_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p7_p5_d
        :precondition (and (at_d_p7)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (succ_p7_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p7_p6_a
        :precondition (and (succ_p7_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (at_a_p7)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p6_b
        :precondition (and (succ_p7_p6)
                           (at_b_p7)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p6_c
        :precondition (and (succ_p7_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p7)
                           (Bc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p6_d
        :precondition (and (at_d_p7)
                           (succ_p7_p6)
                           (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p7_p7_a
        :precondition (and (succ_p7_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p7_p7_b
        :precondition (and (succ_p7_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p7)
                           (checked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p7_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (at_c_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p7_p7_d
        :precondition (and (at_d_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p7_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p7_p8)
                           (checked_p8)
                           (at_a_p7)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p7_p8)
                           (at_b_p7)
                           (Pb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p8_c
        :precondition (and (succ_p7_p8)
                           (at_c_p7)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p8_d
        :precondition (and (at_d_p7)
                           (succ_p7_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p7_p9_a
        :precondition (and (succ_p7_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p7)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (succ_p7_p9)
                           (at_b_p7)
                           (checked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (succ_p7_p9)
                           (at_c_p7)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p7_p9_d
        :precondition (and (at_d_p7)
                           (succ_p7_p9)
                           (Bd_not_blocked_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p8)
                           (Pa_not_blocked_p1)
                           (succ_p8_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p1_b
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p8_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p8))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p8)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p1_d
        :precondition (and (at_d_p8)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p8_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p8_p2)
                           (at_a_p8)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p8_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2)
                           (succ_p8_p2)
                           (at_b_p8))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p8_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p8_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p8)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p8_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (at_d_p8)
                           (Pd_not_blocked_p2)
                           (succ_p8_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p8_p3_a
        :precondition (and (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p8_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p8))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p8_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p8_p3)
                           (checked_p3)
                           (at_b_p8))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p8_p3_c
        :precondition (and (checked_p3)
                           (succ_p8_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p8))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p8_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p8)
                           (succ_p8_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p8_p4_a
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p8)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p8_p4_b
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p8))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p8_p4_c
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p8)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p8_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p8_p4)
                           (at_d_p8)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p8_p5_a
        :precondition (and (checked_p5)
                           (succ_p8_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p8))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p8_p5_b
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p8))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p8_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p8))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p8_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p8)
                           (succ_p8_p5)
                           (Bd_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p8_p6_a
        :precondition (and (succ_p8_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (at_a_p8)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p6_b
        :precondition (and (succ_p8_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p8)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p6_c
        :precondition (and (succ_p8_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p8))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p6_d
        :precondition (and (succ_p8_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p8)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p8_p7_a
        :precondition (and (succ_p8_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p8)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p8_p7_b
        :precondition (and (Pb_not_blocked_p7)
                           (succ_p8_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p8))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p8_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (succ_p8_p7)
                           (at_c_p8)
                           (checked_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p8_p7_d
        :precondition (and (succ_p8_p7)
                           (at_d_p8)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p8_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p8_p8)
                           (checked_p8)
                           (at_a_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p8_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p8_c
        :precondition (and (succ_p8_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p8_d
        :precondition (and (succ_p8_p8)
                           (at_d_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p8_p9_a
        :precondition (and (Pa_not_blocked_p9)
                           (at_a_p8)
                           (succ_p8_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p8_p9)
                           (at_b_p8)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (at_c_p8)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p8_p9_d
        :precondition (and (at_d_p8)
                           (Bd_not_blocked_p9)
                           (succ_p8_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p1_a
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_a_p9)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p1_b
        :precondition (and (Bb_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_b_p9)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_d_p9)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #15709: origin
                    (Ba_not_blocked_p1)

                    ; #17496: origin
                    (Bd_not_blocked_p1)

                    ; #19729: <==commonly_known== 85486 (pos)
                    (Bc_obss_p1)

                    ; #20684: <==closure== 71220 (pos)
                    (Pd_obss_p1)

                    ; #40514: <==closure== 15709 (pos)
                    (Pa_not_blocked_p1)

                    ; #47215: origin
                    (Bc_not_blocked_p1)

                    ; #60004: <==closure== 88146 (pos)
                    (Pb_obss_p1)

                    ; #68941: <==closure== 70679 (pos)
                    (Pb_not_blocked_p1)

                    ; #70027: <==closure== 85246 (pos)
                    (Pa_obss_p1)

                    ; #70679: origin
                    (Bb_not_blocked_p1)

                    ; #71220: <==commonly_known== 85486 (pos)
                    (Bd_obss_p1)

                    ; #80647: <==closure== 47215 (pos)
                    (Pc_not_blocked_p1)

                    ; #85246: <==commonly_known== 85486 (pos)
                    (Ba_obss_p1)

                    ; #85486: origin
                    (obss_p1)

                    ; #86478: <==closure== 17496 (pos)
                    (Pd_not_blocked_p1)

                    ; #87096: <==closure== 19729 (pos)
                    (Pc_obss_p1)

                    ; #88146: <==commonly_known== 85486 (pos)
                    (Bb_obss_p1)

                    ; #10140: <==negation-removal== 85486 (pos)
                    (not (not_obss_p1))

                    ; #18879: <==negation-removal== 88146 (pos)
                    (not (Pb_not_obss_p1))

                    ; #19048: <==negation-removal== 20684 (pos)
                    (not (Bd_not_obss_p1))

                    ; #23185: <==negation-removal== 85246 (pos)
                    (not (Pa_not_obss_p1))

                    ; #32579: <==negation-removal== 70679 (pos)
                    (not (Pb_blocked_p1))

                    ; #34299: <==negation-removal== 70027 (pos)
                    (not (Ba_not_obss_p1))

                    ; #37442: <==negation-removal== 19729 (pos)
                    (not (Pc_not_obss_p1))

                    ; #41127: <==negation-removal== 40514 (pos)
                    (not (Ba_blocked_p1))

                    ; #44435: <==negation-removal== 15709 (pos)
                    (not (Pa_blocked_p1))

                    ; #44517: <==negation-removal== 80647 (pos)
                    (not (Bc_blocked_p1))

                    ; #57161: <==negation-removal== 68941 (pos)
                    (not (Bb_blocked_p1))

                    ; #57488: <==negation-removal== 86478 (pos)
                    (not (Bd_blocked_p1))

                    ; #63928: <==negation-removal== 87096 (pos)
                    (not (Bc_not_obss_p1))

                    ; #66288: <==negation-removal== 17496 (pos)
                    (not (Pd_blocked_p1))

                    ; #68947: <==negation-removal== 71220 (pos)
                    (not (Pd_not_obss_p1))

                    ; #79986: <==negation-removal== 47215 (pos)
                    (not (Pc_blocked_p1))

                    ; #82645: <==negation-removal== 60004 (pos)
                    (not (Bb_not_obss_p1))))

    (:action communcells_p9_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p9_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p9_p2_c
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p9)
                           (Pc_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p9_p2_d
        :precondition (and (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #17354: origin
                    (Ba_not_blocked_p2)

                    ; #26528: origin
                    (Bc_not_blocked_p2)

                    ; #27014: <==closure== 46559 (pos)
                    (Pb_not_blocked_p2)

                    ; #29859: <==closure== 91281 (pos)
                    (Pd_obss_p2)

                    ; #36364: <==closure== 56831 (pos)
                    (Pd_not_blocked_p2)

                    ; #38901: <==closure== 46342 (pos)
                    (Pb_obss_p2)

                    ; #43093: <==closure== 17354 (pos)
                    (Pa_not_blocked_p2)

                    ; #44285: <==commonly_known== 70112 (pos)
                    (Ba_obss_p2)

                    ; #46342: <==commonly_known== 70112 (pos)
                    (Bb_obss_p2)

                    ; #46559: origin
                    (Bb_not_blocked_p2)

                    ; #56831: origin
                    (Bd_not_blocked_p2)

                    ; #61698: <==closure== 44285 (pos)
                    (Pa_obss_p2)

                    ; #70112: origin
                    (obss_p2)

                    ; #76401: <==closure== 83621 (pos)
                    (Pc_obss_p2)

                    ; #83621: <==commonly_known== 70112 (pos)
                    (Bc_obss_p2)

                    ; #85341: <==closure== 26528 (pos)
                    (Pc_not_blocked_p2)

                    ; #91281: <==commonly_known== 70112 (pos)
                    (Bd_obss_p2)

                    ; #12529: <==negation-removal== 56831 (pos)
                    (not (Pd_blocked_p2))

                    ; #23171: <==negation-removal== 85341 (pos)
                    (not (Bc_blocked_p2))

                    ; #29969: <==negation-removal== 29859 (pos)
                    (not (Bd_not_obss_p2))

                    ; #31288: <==negation-removal== 83621 (pos)
                    (not (Pc_not_obss_p2))

                    ; #36029: <==negation-removal== 61698 (pos)
                    (not (Ba_not_obss_p2))

                    ; #37585: <==negation-removal== 43093 (pos)
                    (not (Ba_blocked_p2))

                    ; #39722: <==negation-removal== 91281 (pos)
                    (not (Pd_not_obss_p2))

                    ; #48678: <==negation-removal== 46342 (pos)
                    (not (Pb_not_obss_p2))

                    ; #51344: <==negation-removal== 26528 (pos)
                    (not (Pc_blocked_p2))

                    ; #53585: <==negation-removal== 76401 (pos)
                    (not (Bc_not_obss_p2))

                    ; #57595: <==negation-removal== 36364 (pos)
                    (not (Bd_blocked_p2))

                    ; #59462: <==negation-removal== 38901 (pos)
                    (not (Bb_not_obss_p2))

                    ; #61401: <==negation-removal== 17354 (pos)
                    (not (Pa_blocked_p2))

                    ; #65621: <==negation-removal== 46559 (pos)
                    (not (Pb_blocked_p2))

                    ; #75254: <==negation-removal== 70112 (pos)
                    (not (not_obss_p2))

                    ; #83176: <==negation-removal== 44285 (pos)
                    (not (Pa_not_obss_p2))

                    ; #87374: <==negation-removal== 27014 (pos)
                    (not (Bb_blocked_p2))))

    (:action communcells_p9_p3_a
        :precondition (and (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p9_p3_b
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p9_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p9_p3_d
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #19486: <==commonly_known== 33307 (pos)
                    (Ba_obss_p3)

                    ; #26745: <==closure== 19486 (pos)
                    (Pa_obss_p3)

                    ; #33307: origin
                    (obss_p3)

                    ; #36986: <==closure== 71453 (pos)
                    (Pb_not_blocked_p3)

                    ; #42295: origin
                    (Ba_not_blocked_p3)

                    ; #44632: origin
                    (Bc_not_blocked_p3)

                    ; #56149: <==closure== 42295 (pos)
                    (Pa_not_blocked_p3)

                    ; #56323: <==commonly_known== 33307 (pos)
                    (Bc_obss_p3)

                    ; #58041: <==closure== 44632 (pos)
                    (Pc_not_blocked_p3)

                    ; #63477: origin
                    (Bd_not_blocked_p3)

                    ; #70092: <==closure== 56323 (pos)
                    (Pc_obss_p3)

                    ; #70947: <==closure== 80002 (pos)
                    (Pb_obss_p3)

                    ; #71453: origin
                    (Bb_not_blocked_p3)

                    ; #75640: <==closure== 63477 (pos)
                    (Pd_not_blocked_p3)

                    ; #80002: <==commonly_known== 33307 (pos)
                    (Bb_obss_p3)

                    ; #87135: <==commonly_known== 33307 (pos)
                    (Bd_obss_p3)

                    ; #92122: <==closure== 87135 (pos)
                    (Pd_obss_p3)

                    ; #22708: <==negation-removal== 19486 (pos)
                    (not (Pa_not_obss_p3))

                    ; #26587: <==negation-removal== 71453 (pos)
                    (not (Pb_blocked_p3))

                    ; #32544: <==negation-removal== 44632 (pos)
                    (not (Pc_blocked_p3))

                    ; #33919: <==negation-removal== 26745 (pos)
                    (not (Ba_not_obss_p3))

                    ; #41436: <==negation-removal== 87135 (pos)
                    (not (Pd_not_obss_p3))

                    ; #42016: <==negation-removal== 70947 (pos)
                    (not (Bb_not_obss_p3))

                    ; #42071: <==negation-removal== 42295 (pos)
                    (not (Pa_blocked_p3))

                    ; #45035: <==negation-removal== 36986 (pos)
                    (not (Bb_blocked_p3))

                    ; #45340: <==negation-removal== 70092 (pos)
                    (not (Bc_not_obss_p3))

                    ; #49101: <==negation-removal== 63477 (pos)
                    (not (Pd_blocked_p3))

                    ; #51455: <==negation-removal== 56149 (pos)
                    (not (Ba_blocked_p3))

                    ; #56623: <==negation-removal== 56323 (pos)
                    (not (Pc_not_obss_p3))

                    ; #70319: <==negation-removal== 75640 (pos)
                    (not (Bd_blocked_p3))

                    ; #71744: <==negation-removal== 92122 (pos)
                    (not (Bd_not_obss_p3))

                    ; #81636: <==negation-removal== 33307 (pos)
                    (not (not_obss_p3))

                    ; #91016: <==negation-removal== 80002 (pos)
                    (not (Pb_not_obss_p3))

                    ; #91155: <==negation-removal== 58041 (pos)
                    (not (Bc_blocked_p3))))

    (:action communcells_p9_p4_a
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p9)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p9_p4_b
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p9))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p9_p4_c
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p9)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p9_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p9_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p9))
        :effect (and
                    ; #12411: <==closure== 22632 (pos)
                    (Pb_obss_p4)

                    ; #14316: <==closure== 50209 (pos)
                    (Pc_not_blocked_p4)

                    ; #18425: <==closure== 82179 (pos)
                    (Pd_not_blocked_p4)

                    ; #22632: <==commonly_known== 25258 (pos)
                    (Bb_obss_p4)

                    ; #22808: <==commonly_known== 25258 (pos)
                    (Ba_obss_p4)

                    ; #25258: origin
                    (obss_p4)

                    ; #29497: origin
                    (Bb_not_blocked_p4)

                    ; #29891: <==closure== 29497 (pos)
                    (Pb_not_blocked_p4)

                    ; #34129: <==commonly_known== 25258 (pos)
                    (Bc_obss_p4)

                    ; #50209: origin
                    (Bc_not_blocked_p4)

                    ; #56102: <==closure== 84411 (pos)
                    (Pd_obss_p4)

                    ; #56748: <==closure== 60653 (pos)
                    (Pa_not_blocked_p4)

                    ; #60653: origin
                    (Ba_not_blocked_p4)

                    ; #65132: <==closure== 22808 (pos)
                    (Pa_obss_p4)

                    ; #71356: <==closure== 34129 (pos)
                    (Pc_obss_p4)

                    ; #82179: origin
                    (Bd_not_blocked_p4)

                    ; #84411: <==commonly_known== 25258 (pos)
                    (Bd_obss_p4)

                    ; #16191: <==negation-removal== 84411 (pos)
                    (not (Pd_not_obss_p4))

                    ; #16611: <==negation-removal== 34129 (pos)
                    (not (Pc_not_obss_p4))

                    ; #20263: <==negation-removal== 12411 (pos)
                    (not (Bb_not_obss_p4))

                    ; #20622: <==negation-removal== 22632 (pos)
                    (not (Pb_not_obss_p4))

                    ; #36344: <==negation-removal== 29497 (pos)
                    (not (Pb_blocked_p4))

                    ; #36378: <==negation-removal== 60653 (pos)
                    (not (Pa_blocked_p4))

                    ; #45256: <==negation-removal== 29891 (pos)
                    (not (Bb_blocked_p4))

                    ; #52187: <==negation-removal== 14316 (pos)
                    (not (Bc_blocked_p4))

                    ; #52548: <==negation-removal== 25258 (pos)
                    (not (not_obss_p4))

                    ; #61050: <==negation-removal== 82179 (pos)
                    (not (Pd_blocked_p4))

                    ; #62048: <==negation-removal== 50209 (pos)
                    (not (Pc_blocked_p4))

                    ; #62319: <==negation-removal== 65132 (pos)
                    (not (Ba_not_obss_p4))

                    ; #68259: <==negation-removal== 18425 (pos)
                    (not (Bd_blocked_p4))

                    ; #81723: <==negation-removal== 56748 (pos)
                    (not (Ba_blocked_p4))

                    ; #85711: <==negation-removal== 22808 (pos)
                    (not (Pa_not_obss_p4))

                    ; #86121: <==negation-removal== 71356 (pos)
                    (not (Bc_not_obss_p4))

                    ; #88962: <==negation-removal== 56102 (pos)
                    (not (Bd_not_obss_p4))))

    (:action communcells_p9_p5_a
        :precondition (and (checked_p5)
                           (succ_p9_p5)
                           (at_a_p9)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p9_p5_b
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p9_p5)
                           (at_b_p9)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p9_p5_c
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p9_p5)
                           (at_c_p9)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p9_p5_d
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p9_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p9))
        :effect (and
                    ; #18100: origin
                    (Bd_not_blocked_p5)

                    ; #20675: <==commonly_known== 44111 (pos)
                    (Bd_obss_p5)

                    ; #21797: <==closure== 83101 (pos)
                    (Pc_obss_p5)

                    ; #23947: <==closure== 73036 (pos)
                    (Pb_not_blocked_p5)

                    ; #40079: <==commonly_known== 44111 (pos)
                    (Ba_obss_p5)

                    ; #44111: origin
                    (obss_p5)

                    ; #44630: <==commonly_known== 44111 (pos)
                    (Bb_obss_p5)

                    ; #58780: <==closure== 40079 (pos)
                    (Pa_obss_p5)

                    ; #65714: origin
                    (Ba_not_blocked_p5)

                    ; #66596: <==closure== 18100 (pos)
                    (Pd_not_blocked_p5)

                    ; #66977: <==closure== 85181 (pos)
                    (Pc_not_blocked_p5)

                    ; #71636: <==closure== 65714 (pos)
                    (Pa_not_blocked_p5)

                    ; #73036: origin
                    (Bb_not_blocked_p5)

                    ; #83101: <==commonly_known== 44111 (pos)
                    (Bc_obss_p5)

                    ; #85181: origin
                    (Bc_not_blocked_p5)

                    ; #85986: <==closure== 44630 (pos)
                    (Pb_obss_p5)

                    ; #88482: <==closure== 20675 (pos)
                    (Pd_obss_p5)

                    ; #13082: <==negation-removal== 66977 (pos)
                    (not (Bc_blocked_p5))

                    ; #19970: <==negation-removal== 20675 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25795: <==negation-removal== 85181 (pos)
                    (not (Pc_blocked_p5))

                    ; #31470: <==negation-removal== 44630 (pos)
                    (not (Pb_not_obss_p5))

                    ; #31773: <==negation-removal== 40079 (pos)
                    (not (Pa_not_obss_p5))

                    ; #53130: <==negation-removal== 18100 (pos)
                    (not (Pd_blocked_p5))

                    ; #53166: <==negation-removal== 85986 (pos)
                    (not (Bb_not_obss_p5))

                    ; #60123: <==negation-removal== 71636 (pos)
                    (not (Ba_blocked_p5))

                    ; #60384: <==negation-removal== 21797 (pos)
                    (not (Bc_not_obss_p5))

                    ; #68775: <==negation-removal== 66596 (pos)
                    (not (Bd_blocked_p5))

                    ; #69774: <==negation-removal== 88482 (pos)
                    (not (Bd_not_obss_p5))

                    ; #72456: <==negation-removal== 65714 (pos)
                    (not (Pa_blocked_p5))

                    ; #74703: <==negation-removal== 23947 (pos)
                    (not (Bb_blocked_p5))

                    ; #80301: <==negation-removal== 58780 (pos)
                    (not (Ba_not_obss_p5))

                    ; #82515: <==negation-removal== 83101 (pos)
                    (not (Pc_not_obss_p5))

                    ; #85382: <==negation-removal== 73036 (pos)
                    (not (Pb_blocked_p5))

                    ; #91806: <==negation-removal== 44111 (pos)
                    (not (not_obss_p5))))

    (:action communcells_p9_p6_a
        :precondition (and (succ_p9_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p9)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p6_b
        :precondition (and (Pb_not_blocked_p6)
                           (at_b_p9)
                           (checked_p6)
                           (succ_p9_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p6_c
        :precondition (and (Pc_not_blocked_p6)
                           (at_c_p9)
                           (checked_p6)
                           (succ_p9_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p6_d
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p9_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p9))
        :effect (and
                    ; #10354: <==closure== 77735 (pos)
                    (Pb_not_blocked_p6)

                    ; #11650: <==closure== 19242 (pos)
                    (Pa_obss_p6)

                    ; #12546: origin
                    (Bd_not_blocked_p6)

                    ; #18622: <==commonly_known== 38231 (pos)
                    (Bd_obss_p6)

                    ; #19242: <==commonly_known== 38231 (pos)
                    (Ba_obss_p6)

                    ; #31800: <==closure== 36206 (pos)
                    (Pb_obss_p6)

                    ; #33397: <==closure== 18622 (pos)
                    (Pd_obss_p6)

                    ; #35932: <==closure== 80298 (pos)
                    (Pa_not_blocked_p6)

                    ; #36206: <==commonly_known== 38231 (pos)
                    (Bb_obss_p6)

                    ; #38231: origin
                    (obss_p6)

                    ; #46041: <==closure== 12546 (pos)
                    (Pd_not_blocked_p6)

                    ; #53350: origin
                    (Bc_not_blocked_p6)

                    ; #71689: <==closure== 53350 (pos)
                    (Pc_not_blocked_p6)

                    ; #74600: <==commonly_known== 38231 (pos)
                    (Bc_obss_p6)

                    ; #76610: <==closure== 74600 (pos)
                    (Pc_obss_p6)

                    ; #77735: origin
                    (Bb_not_blocked_p6)

                    ; #80298: origin
                    (Ba_not_blocked_p6)

                    ; #12115: <==negation-removal== 33397 (pos)
                    (not (Bd_not_obss_p6))

                    ; #12664: <==negation-removal== 31800 (pos)
                    (not (Bb_not_obss_p6))

                    ; #14361: <==negation-removal== 71689 (pos)
                    (not (Bc_blocked_p6))

                    ; #14635: <==negation-removal== 36206 (pos)
                    (not (Pb_not_obss_p6))

                    ; #22445: <==negation-removal== 46041 (pos)
                    (not (Bd_blocked_p6))

                    ; #43201: <==negation-removal== 11650 (pos)
                    (not (Ba_not_obss_p6))

                    ; #58609: <==negation-removal== 18622 (pos)
                    (not (Pd_not_obss_p6))

                    ; #68631: <==negation-removal== 35932 (pos)
                    (not (Ba_blocked_p6))

                    ; #69219: <==negation-removal== 77735 (pos)
                    (not (Pb_blocked_p6))

                    ; #69457: <==negation-removal== 76610 (pos)
                    (not (Bc_not_obss_p6))

                    ; #70825: <==negation-removal== 80298 (pos)
                    (not (Pa_blocked_p6))

                    ; #70859: <==negation-removal== 38231 (pos)
                    (not (not_obss_p6))

                    ; #71076: <==negation-removal== 12546 (pos)
                    (not (Pd_blocked_p6))

                    ; #73293: <==negation-removal== 19242 (pos)
                    (not (Pa_not_obss_p6))

                    ; #86526: <==negation-removal== 10354 (pos)
                    (not (Bb_blocked_p6))

                    ; #90258: <==negation-removal== 53350 (pos)
                    (not (Pc_blocked_p6))

                    ; #92922: <==negation-removal== 74600 (pos)
                    (not (Pc_not_obss_p6))))

    (:action communcells_p9_p7_a
        :precondition (and (checked_p7)
                           (succ_p9_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p9)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p9_p7_b
        :precondition (and (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p9_p7)
                           (checked_p7)
                           (at_b_p9))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p9_p7_c
        :precondition (and (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7)
                           (at_c_p9)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p9_p7_d
        :precondition (and (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p9_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p9))
        :effect (and
                    ; #10338: <==closure== 16827 (pos)
                    (Pc_obss_p7)

                    ; #15127: origin
                    (Bc_not_blocked_p7)

                    ; #16827: <==commonly_known== 30752 (pos)
                    (Bc_obss_p7)

                    ; #16980: origin
                    (Bb_not_blocked_p7)

                    ; #25123: <==closure== 88904 (pos)
                    (Pa_not_blocked_p7)

                    ; #30752: origin
                    (obss_p7)

                    ; #30998: <==closure== 15127 (pos)
                    (Pc_not_blocked_p7)

                    ; #34634: <==commonly_known== 30752 (pos)
                    (Bb_obss_p7)

                    ; #35610: <==closure== 34634 (pos)
                    (Pb_obss_p7)

                    ; #42337: <==commonly_known== 30752 (pos)
                    (Bd_obss_p7)

                    ; #44008: <==commonly_known== 30752 (pos)
                    (Ba_obss_p7)

                    ; #52475: <==closure== 42337 (pos)
                    (Pd_obss_p7)

                    ; #65977: <==closure== 44008 (pos)
                    (Pa_obss_p7)

                    ; #88904: origin
                    (Ba_not_blocked_p7)

                    ; #90528: <==closure== 16980 (pos)
                    (Pb_not_blocked_p7)

                    ; #91153: origin
                    (Bd_not_blocked_p7)

                    ; #91545: <==closure== 91153 (pos)
                    (Pd_not_blocked_p7)

                    ; #13527: <==negation-removal== 16980 (pos)
                    (not (Pb_blocked_p7))

                    ; #16168: <==negation-removal== 90528 (pos)
                    (not (Bb_blocked_p7))

                    ; #19524: <==negation-removal== 25123 (pos)
                    (not (Ba_blocked_p7))

                    ; #20315: <==negation-removal== 91153 (pos)
                    (not (Pd_blocked_p7))

                    ; #27933: <==negation-removal== 30752 (pos)
                    (not (not_obss_p7))

                    ; #40981: <==negation-removal== 34634 (pos)
                    (not (Pb_not_obss_p7))

                    ; #52501: <==negation-removal== 91545 (pos)
                    (not (Bd_blocked_p7))

                    ; #53159: <==negation-removal== 88904 (pos)
                    (not (Pa_blocked_p7))

                    ; #55538: <==negation-removal== 65977 (pos)
                    (not (Ba_not_obss_p7))

                    ; #61494: <==negation-removal== 16827 (pos)
                    (not (Pc_not_obss_p7))

                    ; #65799: <==negation-removal== 44008 (pos)
                    (not (Pa_not_obss_p7))

                    ; #68848: <==negation-removal== 30998 (pos)
                    (not (Bc_blocked_p7))

                    ; #73739: <==negation-removal== 35610 (pos)
                    (not (Bb_not_obss_p7))

                    ; #73850: <==negation-removal== 10338 (pos)
                    (not (Bc_not_obss_p7))

                    ; #76638: <==negation-removal== 42337 (pos)
                    (not (Pd_not_obss_p7))

                    ; #78954: <==negation-removal== 15127 (pos)
                    (not (Pc_blocked_p7))

                    ; #91739: <==negation-removal== 52475 (pos)
                    (not (Bd_not_obss_p7))))

    (:action communcells_p9_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p9_p8)
                           (at_a_p9)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p8_b
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p9_p8)
                           (at_b_p9)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p9)
                           (succ_p9_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p8_d
        :precondition (and (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p9_p8)
                           (at_d_p9)
                           (checked_p8))
        :effect (and
                    ; #16302: <==commonly_known== 70108 (pos)
                    (Bb_obss_p8)

                    ; #26832: <==commonly_known== 70108 (pos)
                    (Ba_obss_p8)

                    ; #35767: origin
                    (Bd_not_blocked_p8)

                    ; #39429: <==closure== 85946 (pos)
                    (Pb_not_blocked_p8)

                    ; #39973: <==closure== 16302 (pos)
                    (Pb_obss_p8)

                    ; #43524: <==closure== 75843 (pos)
                    (Pc_not_blocked_p8)

                    ; #44439: <==closure== 77487 (pos)
                    (Pa_not_blocked_p8)

                    ; #53797: <==commonly_known== 70108 (pos)
                    (Bd_obss_p8)

                    ; #57653: <==closure== 53797 (pos)
                    (Pd_obss_p8)

                    ; #67776: <==closure== 35767 (pos)
                    (Pd_not_blocked_p8)

                    ; #70001: <==closure== 26832 (pos)
                    (Pa_obss_p8)

                    ; #70108: origin
                    (obss_p8)

                    ; #75843: origin
                    (Bc_not_blocked_p8)

                    ; #77487: origin
                    (Ba_not_blocked_p8)

                    ; #85946: origin
                    (Bb_not_blocked_p8)

                    ; #88411: <==closure== 89850 (pos)
                    (Pc_obss_p8)

                    ; #89850: <==commonly_known== 70108 (pos)
                    (Bc_obss_p8)

                    ; #10344: <==negation-removal== 39973 (pos)
                    (not (Bb_not_obss_p8))

                    ; #10513: <==negation-removal== 67776 (pos)
                    (not (Bd_blocked_p8))

                    ; #11407: <==negation-removal== 85946 (pos)
                    (not (Pb_blocked_p8))

                    ; #12677: <==negation-removal== 53797 (pos)
                    (not (Pd_not_obss_p8))

                    ; #13477: <==negation-removal== 77487 (pos)
                    (not (Pa_blocked_p8))

                    ; #24926: <==negation-removal== 57653 (pos)
                    (not (Bd_not_obss_p8))

                    ; #30732: <==negation-removal== 75843 (pos)
                    (not (Pc_blocked_p8))

                    ; #39619: <==negation-removal== 26832 (pos)
                    (not (Pa_not_obss_p8))

                    ; #45067: <==negation-removal== 16302 (pos)
                    (not (Pb_not_obss_p8))

                    ; #53060: <==negation-removal== 70001 (pos)
                    (not (Ba_not_obss_p8))

                    ; #59920: <==negation-removal== 43524 (pos)
                    (not (Bc_blocked_p8))

                    ; #72450: <==negation-removal== 88411 (pos)
                    (not (Bc_not_obss_p8))

                    ; #74641: <==negation-removal== 89850 (pos)
                    (not (Pc_not_obss_p8))

                    ; #75857: <==negation-removal== 44439 (pos)
                    (not (Ba_blocked_p8))

                    ; #78233: <==negation-removal== 39429 (pos)
                    (not (Bb_blocked_p8))

                    ; #79294: <==negation-removal== 70108 (pos)
                    (not (not_obss_p8))

                    ; #89391: <==negation-removal== 35767 (pos)
                    (not (Pd_blocked_p8))))

    (:action communcells_p9_p9_a
        :precondition (and (Pa_not_blocked_p9)
                           (at_a_p9)
                           (succ_p9_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p9_b
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p9)
                           (succ_p9_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p9_c
        :precondition (and (Pc_not_blocked_p9)
                           (at_c_p9)
                           (succ_p9_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action communcells_p9_p9_d
        :precondition (and (Bd_not_blocked_p9)
                           (at_d_p9)
                           (succ_p9_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #16695: <==closure== 89030 (pos)
                    (Pc_not_blocked_p9)

                    ; #29415: <==commonly_known== 67784 (pos)
                    (Bd_obss_p9)

                    ; #31498: <==commonly_known== 67784 (pos)
                    (Ba_obss_p9)

                    ; #37583: <==closure== 60945 (pos)
                    (Pa_not_blocked_p9)

                    ; #38660: origin
                    (Bd_not_blocked_p9)

                    ; #39089: origin
                    (Bb_not_blocked_p9)

                    ; #40005: <==closure== 67858 (pos)
                    (Pc_obss_p9)

                    ; #45296: <==commonly_known== 67784 (pos)
                    (Bb_obss_p9)

                    ; #54481: <==closure== 29415 (pos)
                    (Pd_obss_p9)

                    ; #55866: <==closure== 45296 (pos)
                    (Pb_obss_p9)

                    ; #60945: origin
                    (Ba_not_blocked_p9)

                    ; #64401: <==closure== 39089 (pos)
                    (Pb_not_blocked_p9)

                    ; #67784: origin
                    (obss_p9)

                    ; #67858: <==commonly_known== 67784 (pos)
                    (Bc_obss_p9)

                    ; #68485: <==closure== 38660 (pos)
                    (Pd_not_blocked_p9)

                    ; #79920: <==closure== 31498 (pos)
                    (Pa_obss_p9)

                    ; #89030: origin
                    (Bc_not_blocked_p9)

                    ; #10179: <==negation-removal== 37583 (pos)
                    (not (Ba_blocked_p9))

                    ; #10673: <==negation-removal== 79920 (pos)
                    (not (Ba_not_obss_p9))

                    ; #16058: <==negation-removal== 29415 (pos)
                    (not (Pd_not_obss_p9))

                    ; #19163: <==negation-removal== 67858 (pos)
                    (not (Pc_not_obss_p9))

                    ; #32432: <==negation-removal== 54481 (pos)
                    (not (Bd_not_obss_p9))

                    ; #33749: <==negation-removal== 40005 (pos)
                    (not (Bc_not_obss_p9))

                    ; #35396: <==negation-removal== 45296 (pos)
                    (not (Pb_not_obss_p9))

                    ; #38149: <==negation-removal== 89030 (pos)
                    (not (Pc_blocked_p9))

                    ; #38431: <==negation-removal== 55866 (pos)
                    (not (Bb_not_obss_p9))

                    ; #48303: <==negation-removal== 64401 (pos)
                    (not (Bb_blocked_p9))

                    ; #48575: <==negation-removal== 67784 (pos)
                    (not (not_obss_p9))

                    ; #54656: <==negation-removal== 39089 (pos)
                    (not (Pb_blocked_p9))

                    ; #55551: <==negation-removal== 60945 (pos)
                    (not (Pa_blocked_p9))

                    ; #61486: <==negation-removal== 38660 (pos)
                    (not (Pd_blocked_p9))

                    ; #62596: <==negation-removal== 68485 (pos)
                    (not (Bd_blocked_p9))

                    ; #62867: <==negation-removal== 31498 (pos)
                    (not (Pa_not_obss_p9))

                    ; #86190: <==negation-removal== 16695 (pos)
                    (not (Bc_blocked_p9))))

    (:action move_a_p1_p1
        :precondition (and (Ba_not_blocked_p1)
                           (at_a_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #73797: origin
                    (at_a_p1)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #73797: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p2
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p1)
                           (Pa_not_blocked_p2)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #32059: origin
                    (at_a_p2)

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))

                    ; #73797: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p1)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #43280: origin
                    (at_a_p3)

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))

                    ; #73797: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (checked_p4)
                           (at_a_p1)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #87815: origin
                    (at_a_p4)

                    ; #73797: origin
                    (not (at_a_p1))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (at_a_p1)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #73797: origin
                    (not (at_a_p1))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p1_p6
        :precondition (and (Ba_not_blocked_p6)
                           (at_a_p1)
                           (succ_p1_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))

                    ; #73797: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p1_p7)
                           (at_a_p1)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #59926: origin
                    (at_a_p7)

                    ; #73797: origin
                    (not (at_a_p1))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p1_p8
        :precondition (and (Pa_not_blocked_p8)
                           (at_a_p1)
                           (checked_p8)
                           (succ_p1_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #59679: origin
                    (at_a_p8)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #73797: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p9
        :precondition (and (succ_p1_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p1)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #28824: <==commonly_known== 73797 (neg)
                    (not_at_a_p1)

                    ; #83660: origin
                    (at_a_p9)

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))

                    ; #73797: origin
                    (not (at_a_p1))))

    (:action move_a_p2_p1
        :precondition (and (succ_p2_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p2))
        :effect (and
                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #73797: origin
                    (at_a_p1)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #32059: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p2
        :precondition (and (Ba_not_blocked_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p2_p3
        :precondition (and (succ_p2_p3)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (at_a_p2))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p2)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #87815: origin
                    (at_a_p4)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p2_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p2_p6
        :precondition (and (Ba_not_blocked_p6)
                           (at_a_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p2))
        :effect (and
                    ; #59926: origin
                    (at_a_p7)

                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p2_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (at_a_p2)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #59679: origin
                    (at_a_p8)

                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #32059: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p9
        :precondition (and (Pa_not_blocked_p9)
                           (succ_p2_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p2)
                           (checked_p9))
        :effect (and
                    ; #73560: <==commonly_known== 32059 (neg)
                    (not_at_a_p2)

                    ; #83660: origin
                    (at_a_p9)

                    ; #32059: origin
                    (not (at_a_p2))

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p3_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p3))
        :effect (and
                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #73797: origin
                    (at_a_p1)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #43280: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p3)
                           (checked_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p3_p3
        :precondition (and (Ba_not_blocked_p3)
                           (at_a_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p3_p4
        :precondition (and (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p3_p4)
                           (at_a_p3)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #87815: origin
                    (at_a_p4)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p3_p5
        :precondition (and (checked_p5)
                           (succ_p3_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p3))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p3_p6
        :precondition (and (succ_p3_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p3)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p3_p7
        :precondition (and (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p3_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p3))
        :effect (and
                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #59926: origin
                    (at_a_p7)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p3_p8
        :precondition (and (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8)
                           (at_a_p3)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #59679: origin
                    (at_a_p8)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #43280: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p9
        :precondition (and (succ_p3_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (at_a_p3)
                           (checked_p9))
        :effect (and
                    ; #46593: <==commonly_known== 43280 (neg)
                    (not_at_a_p3)

                    ; #83660: origin
                    (at_a_p9)

                    ; #43280: origin
                    (not (at_a_p3))

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p4_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p4)
                           (Pa_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #73797: origin
                    (at_a_p1)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p2
        :precondition (and (Pa_not_blocked_p2)
                           (Ba_not_blocked_p2)
                           (succ_p4_p2)
                           (at_a_p4)
                           (checked_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p3
        :precondition (and (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p4)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p4
        :precondition (and (checked_p4)
                           (succ_p4_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #87815: origin
                    (at_a_p4)

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p5
        :precondition (and (checked_p5)
                           (succ_p4_p5)
                           (at_a_p4)
                           (Pa_not_blocked_p5)
                           (Ba_not_blocked_p5))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #87815: origin
                    (not (at_a_p4))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p4_p6
        :precondition (and (Ba_not_blocked_p6)
                           (at_a_p4)
                           (checked_p6)
                           (succ_p4_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p7
        :precondition (and (succ_p4_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p4)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #59926: origin
                    (at_a_p7)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #87815: origin
                    (not (at_a_p4))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p4_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p4_p8)
                           (at_a_p4)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #59679: origin
                    (at_a_p8)

                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p9
        :precondition (and (Pa_not_blocked_p9)
                           (succ_p4_p9)
                           (at_a_p4)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #77464: <==commonly_known== 87815 (neg)
                    (not_at_a_p4)

                    ; #83660: origin
                    (at_a_p9)

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))

                    ; #87815: origin
                    (not (at_a_p4))))

    (:action move_a_p5_p1
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p5_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #73797: origin
                    (at_a_p1)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p5_p2
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p2)
                           (succ_p5_p2)
                           (Pa_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p5_p3
        :precondition (and (at_a_p5)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p5_p4
        :precondition (and (at_a_p5)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p5_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #87815: origin
                    (at_a_p4)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p5_p5
        :precondition (and (checked_p5)
                           (succ_p5_p5)
                           (at_a_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_a_p5)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p5_p7
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (at_a_p5)
                           (Ba_not_blocked_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #59926: origin
                    (at_a_p7)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p5_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p5_p8)
                           (at_a_p5)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #59679: origin
                    (at_a_p8)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p5_p9
        :precondition (and (at_a_p5)
                           (succ_p5_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #83660: origin
                    (at_a_p9)

                    ; #91098: <==commonly_known== 13314 (neg)
                    (not_at_a_p5)

                    ; #13314: origin
                    (not (at_a_p5))

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p6_p1
        :precondition (and (at_a_p6)
                           (succ_p6_p1)
                           (Ba_not_blocked_p1)
                           (checked_p1)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #73797: origin
                    (at_a_p1)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p6_p2
        :precondition (and (at_a_p6)
                           (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p6_p2)
                           (checked_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p6_p3
        :precondition (and (at_a_p6)
                           (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p6_p4
        :precondition (and (at_a_p6)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #87815: origin
                    (at_a_p4)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p6_p5
        :precondition (and (checked_p5)
                           (at_a_p6)
                           (succ_p6_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p6_p6
        :precondition (and (at_a_p6)
                           (succ_p6_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p6_p7
        :precondition (and (at_a_p6)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p6_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #59926: origin
                    (at_a_p7)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p6_p8
        :precondition (and (succ_p6_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p6)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #59679: origin
                    (at_a_p8)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p6_p9
        :precondition (and (at_a_p6)
                           (succ_p6_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #59060: <==commonly_known== 13754 (neg)
                    (not_at_a_p6)

                    ; #83660: origin
                    (at_a_p9)

                    ; #13754: origin
                    (not (at_a_p6))

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p7_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p7)
                           (Pa_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #73797: origin
                    (at_a_p1)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #59926: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p2
        :precondition (and (succ_p7_p2)
                           (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p7)
                           (checked_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #59926: origin
                    (not (at_a_p7))

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p7_p3
        :precondition (and (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p7_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p7))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))

                    ; #59926: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p7)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #87815: origin
                    (at_a_p4)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #59926: origin
                    (not (at_a_p7))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p7_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (succ_p7_p5)
                           (at_a_p7))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #59926: origin
                    (not (at_a_p7))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (at_a_p7)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))

                    ; #59926: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p7
        :precondition (and (succ_p7_p7)
                           (checked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p7)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #59926: origin
                    (at_a_p7)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #59926: origin
                    (not (at_a_p7))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p7_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p7_p8)
                           (checked_p8)
                           (at_a_p7)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #59679: origin
                    (at_a_p8)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #59926: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p9
        :precondition (and (succ_p7_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p7)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #83660: origin
                    (at_a_p9)

                    ; #92286: <==commonly_known== 59926 (neg)
                    (not_at_a_p7)

                    ; #59926: origin
                    (not (at_a_p7))

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p8_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (at_a_p8)
                           (Pa_not_blocked_p1)
                           (succ_p8_p1))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #73797: origin
                    (at_a_p1)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #59679: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p2
        :precondition (and (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p8_p2)
                           (at_a_p8)
                           (checked_p2))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #32059: origin
                    (at_a_p2)

                    ; #59679: origin
                    (not (at_a_p8))

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p8_p3
        :precondition (and (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p8_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p8))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #43280: origin
                    (at_a_p3)

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))

                    ; #59679: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p8)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #87815: origin
                    (at_a_p4)

                    ; #59679: origin
                    (not (at_a_p8))

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p8_p5
        :precondition (and (checked_p5)
                           (succ_p8_p5)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5)
                           (at_a_p8))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #59679: origin
                    (not (at_a_p8))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (Ba_not_blocked_p6)
                           (checked_p6)
                           (at_a_p8)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))

                    ; #59679: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p8)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #59926: origin
                    (at_a_p7)

                    ; #59679: origin
                    (not (at_a_p8))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p8_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p8_p8)
                           (checked_p8)
                           (at_a_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #59679: origin
                    (at_a_p8)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #59679: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p9
        :precondition (and (Pa_not_blocked_p9)
                           (at_a_p8)
                           (succ_p8_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #17495: <==commonly_known== 59679 (neg)
                    (not_at_a_p8)

                    ; #83660: origin
                    (at_a_p9)

                    ; #59679: origin
                    (not (at_a_p8))

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p9_p1
        :precondition (and (Ba_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_a_p9)
                           (Pa_not_blocked_p1))
        :effect (and
                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #73797: origin
                    (at_a_p1)

                    ; #28824: <==negation-removal== 73797 (pos)
                    (not (not_at_a_p1))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p2
        :precondition (and (Ba_not_blocked_p2)
                           (Pa_not_blocked_p2)
                           (at_a_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #32059: origin
                    (at_a_p2)

                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #73560: <==negation-removal== 32059 (pos)
                    (not (not_at_a_p2))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p3
        :precondition (and (Ba_not_blocked_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #43280: origin
                    (at_a_p3)

                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #46593: <==negation-removal== 43280 (pos)
                    (not (not_at_a_p3))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p4
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p9)
                           (Pa_not_blocked_p4))
        :effect (and
                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #87815: origin
                    (at_a_p4)

                    ; #77464: <==negation-removal== 87815 (pos)
                    (not (not_at_a_p4))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p5
        :precondition (and (checked_p5)
                           (succ_p9_p5)
                           (at_a_p9)
                           (Ba_not_blocked_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #13314: origin
                    (at_a_p5)

                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #83660: origin
                    (not (at_a_p9))

                    ; #91098: <==negation-removal== 13314 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p9_p6
        :precondition (and (succ_p9_p6)
                           (Ba_not_blocked_p6)
                           (at_a_p9)
                           (checked_p6)
                           (Pa_not_blocked_p6))
        :effect (and
                    ; #13754: origin
                    (at_a_p6)

                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #59060: <==negation-removal== 13754 (pos)
                    (not (not_at_a_p6))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p7
        :precondition (and (checked_p7)
                           (succ_p9_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p9)
                           (Pa_not_blocked_p7))
        :effect (and
                    ; #59926: origin
                    (at_a_p7)

                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #83660: origin
                    (not (at_a_p9))

                    ; #92286: <==negation-removal== 59926 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p9_p8
        :precondition (and (Pa_not_blocked_p8)
                           (succ_p9_p8)
                           (at_a_p9)
                           (checked_p8)
                           (Ba_not_blocked_p8))
        :effect (and
                    ; #59679: origin
                    (at_a_p8)

                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #17495: <==negation-removal== 59679 (pos)
                    (not (not_at_a_p8))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p9
        :precondition (and (Pa_not_blocked_p9)
                           (at_a_p9)
                           (succ_p9_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #64017: <==commonly_known== 83660 (neg)
                    (not_at_a_p9)

                    ; #83660: origin
                    (at_a_p9)

                    ; #64017: <==negation-removal== 83660 (pos)
                    (not (not_at_a_p9))

                    ; #83660: origin
                    (not (at_a_p9))))

    (:action move_b_p1_p1
        :precondition (and (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #73446: origin
                    (at_b_p1)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #73446: origin
                    (not (at_b_p1))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p1_p2
        :precondition (and (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p1)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p3
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p1)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p4
        :precondition (and (succ_p1_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p1)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p5
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p1)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #81824: origin
                    (at_b_p5)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p6
        :precondition (and (at_b_p1)
                           (Pb_not_blocked_p6)
                           (succ_p1_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #38646: origin
                    (at_b_p6)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p7
        :precondition (and (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (at_b_p1))
        :effect (and
                    ; #47250: origin
                    (at_b_p7)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p1)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p9
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p1_p9)
                           (at_b_p1)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #35402: origin
                    (at_b_p9)

                    ; #83155: <==commonly_known== 73446 (neg)
                    (not_at_b_p1)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #73446: origin
                    (not (at_b_p1))))

    (:action move_b_p2_p1
        :precondition (and (succ_p2_p1)
                           (checked_p1)
                           (at_b_p2)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #73446: origin
                    (at_b_p1)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p2_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p2_p3
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p2_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p2)
                           (checked_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p2_p4
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p2))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p2_p5
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p2)
                           (succ_p2_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #81824: origin
                    (at_b_p5)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p2_p6
        :precondition (and (Pb_not_blocked_p6)
                           (at_b_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #38646: origin
                    (at_b_p6)

                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p2_p7
        :precondition (and (succ_p2_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p2))
        :effect (and
                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #47250: origin
                    (at_b_p7)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p2_p8
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p2_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p2)
                           (checked_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #26756: origin
                    (not (at_b_p2))

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p2_p9
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p2)
                           (succ_p2_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #35402: origin
                    (at_b_p9)

                    ; #43115: <==commonly_known== 26756 (neg)
                    (not_at_b_p2)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #26756: origin
                    (not (at_b_p2))))

    (:action move_b_p3_p1
        :precondition (and (Bb_not_blocked_p1)
                           (at_b_p3)
                           (checked_p1)
                           (succ_p3_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #73446: origin
                    (at_b_p1)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p3_p2
        :precondition (and (succ_p3_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p3)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p3_p3
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p3_p4
        :precondition (and (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p3)
                           (Bb_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p3_p5
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p3_p5)
                           (at_b_p3)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #81824: origin
                    (at_b_p5)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_b_p3)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #38646: origin
                    (at_b_p6)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p3_p7
        :precondition (and (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p3)
                           (checked_p7)
                           (succ_p3_p7))
        :effect (and
                    ; #47250: origin
                    (at_b_p7)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p3_p8
        :precondition (and (Bb_not_blocked_p8)
                           (at_b_p3)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #18239: origin
                    (not (at_b_p3))

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p3_p9
        :precondition (and (succ_p3_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p3)
                           (checked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #35402: origin
                    (at_b_p9)

                    ; #51360: <==commonly_known== 18239 (neg)
                    (not_at_b_p3)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #18239: origin
                    (not (at_b_p3))))

    (:action move_b_p4_p1
        :precondition (and (at_b_p4)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #73446: origin
                    (at_b_p1)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p4_p2
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p2)
                           (Pb_not_blocked_p2)
                           (succ_p4_p2)
                           (checked_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p4_p3
        :precondition (and (Bb_not_blocked_p3)
                           (at_b_p4)
                           (Pb_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p4_p4
        :precondition (and (at_b_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (succ_p4_p4)
                           (Bb_not_blocked_p4))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p4_p5
        :precondition (and (at_b_p4)
                           (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p4_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #81824: origin
                    (at_b_p5)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p4_p6
        :precondition (and (at_b_p4)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p4_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #38646: origin
                    (at_b_p6)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p4_p7
        :precondition (and (at_b_p4)
                           (Pb_not_blocked_p7)
                           (succ_p4_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #47250: origin
                    (at_b_p7)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p4_p8
        :precondition (and (Bb_not_blocked_p8)
                           (at_b_p4)
                           (succ_p4_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13583: origin
                    (not (at_b_p4))

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p4_p9
        :precondition (and (at_b_p4)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p4_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #35402: origin
                    (at_b_p9)

                    ; #67304: <==commonly_known== 13583 (neg)
                    (not_at_b_p4)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #13583: origin
                    (not (at_b_p4))))

    (:action move_b_p5_p1
        :precondition (and (checked_p1)
                           (succ_p5_p1)
                           (at_b_p5)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #73446: origin
                    (at_b_p1)

                    ; #81824: origin
                    (not (at_b_p5))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p5_p2
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p5_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p5)
                           (checked_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p3
        :precondition (and (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p5)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p4
        :precondition (and (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p5
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p5_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #81824: origin
                    (at_b_p5)

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p6
        :precondition (and (succ_p5_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p5)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #38646: origin
                    (at_b_p6)

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p7
        :precondition (and (Pb_not_blocked_p7)
                           (succ_p5_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p5))
        :effect (and
                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #47250: origin
                    (at_b_p7)

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p8
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p5_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p5)
                           (checked_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p9
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p5)
                           (succ_p5_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #33507: <==commonly_known== 81824 (neg)
                    (not_at_b_p5)

                    ; #35402: origin
                    (at_b_p9)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #81824: origin
                    (not (at_b_p5))))

    (:action move_b_p6_p1
        :precondition (and (at_b_p6)
                           (succ_p6_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #73446: origin
                    (at_b_p1)

                    ; #38646: origin
                    (not (at_b_p6))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p6_p2
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (succ_p6_p2)
                           (checked_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #38646: origin
                    (not (at_b_p6))

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p6_p3
        :precondition (and (Bb_not_blocked_p3)
                           (at_b_p6)
                           (Pb_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #38646: origin
                    (not (at_b_p6))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p6_p4
        :precondition (and (at_b_p6)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p6_p4))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #38646: origin
                    (not (at_b_p6))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p6_p5
        :precondition (and (at_b_p6)
                           (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p6_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #81824: origin
                    (at_b_p5)

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))

                    ; #38646: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p6
        :precondition (and (at_b_p6)
                           (succ_p6_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #38646: origin
                    (at_b_p6)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #38646: origin
                    (not (at_b_p6))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p6_p7
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7))
        :effect (and
                    ; #47250: origin
                    (at_b_p7)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #38646: origin
                    (not (at_b_p6))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_b_p6)
                           (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))

                    ; #38646: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (Bb_not_blocked_p9)
                           (checked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #35402: origin
                    (at_b_p9)

                    ; #49637: <==commonly_known== 38646 (neg)
                    (not_at_b_p6)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #38646: origin
                    (not (at_b_p6))))

    (:action move_b_p7_p1
        :precondition (and (at_b_p7)
                           (checked_p1)
                           (Bb_not_blocked_p1)
                           (Pb_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #73446: origin
                    (at_b_p1)

                    ; #47250: origin
                    (not (at_b_p7))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p7_p2
        :precondition (and (succ_p7_p2)
                           (Pb_not_blocked_p2)
                           (at_b_p7)
                           (Bb_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))

                    ; #47250: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p3
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p7)
                           (succ_p7_p3)
                           (checked_p3))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #47250: origin
                    (not (at_b_p7))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p7_p4
        :precondition (and (succ_p7_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p7)
                           (Bb_not_blocked_p4))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #47250: origin
                    (not (at_b_p7))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p7_p5
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (at_b_p7)
                           (succ_p7_p5)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #81824: origin
                    (at_b_p5)

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))

                    ; #47250: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_b_p7)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #38646: origin
                    (at_b_p6)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #47250: origin
                    (not (at_b_p7))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p7_p7
        :precondition (and (succ_p7_p7)
                           (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p7)
                           (checked_p7))
        :effect (and
                    ; #47250: origin
                    (at_b_p7)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #47250: origin
                    (not (at_b_p7))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p7_p8
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p7_p8)
                           (at_b_p7)
                           (Pb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))

                    ; #47250: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p9
        :precondition (and (Bb_not_blocked_p9)
                           (succ_p7_p9)
                           (at_b_p7)
                           (checked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #35402: origin
                    (at_b_p9)

                    ; #67887: <==commonly_known== 47250 (neg)
                    (not_at_b_p7)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #47250: origin
                    (not (at_b_p7))))

    (:action move_b_p8_p1
        :precondition (and (checked_p1)
                           (Bb_not_blocked_p1)
                           (succ_p8_p1)
                           (Pb_not_blocked_p1)
                           (at_b_p8))
        :effect (and
                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #73446: origin
                    (at_b_p1)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p8_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (checked_p2)
                           (succ_p8_p2)
                           (at_b_p8))
        :effect (and
                    ; #26756: origin
                    (at_b_p2)

                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p8_p3
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (succ_p8_p3)
                           (checked_p3)
                           (at_b_p8))
        :effect (and
                    ; #18239: origin
                    (at_b_p3)

                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p8_p4
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p8))
        :effect (and
                    ; #13583: origin
                    (at_b_p4)

                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p8_p5
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p8))
        :effect (and
                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #81824: origin
                    (at_b_p5)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p8_p6
        :precondition (and (succ_p8_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p8)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #38646: origin
                    (at_b_p6)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p8_p7
        :precondition (and (Pb_not_blocked_p7)
                           (succ_p8_p7)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (at_b_p8))
        :effect (and
                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #47250: origin
                    (at_b_p7)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p8_p8
        :precondition (and (Bb_not_blocked_p8)
                           (succ_p8_p8)
                           (Pb_not_blocked_p8)
                           (checked_p8)
                           (at_b_p8))
        :effect (and
                    ; #29703: origin
                    (at_b_p8)

                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #29703: origin
                    (not (at_b_p8))

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))))

    (:action move_b_p8_p9
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (succ_p8_p9)
                           (at_b_p8)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #34154: <==commonly_known== 29703 (neg)
                    (not_at_b_p8)

                    ; #35402: origin
                    (at_b_p9)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #29703: origin
                    (not (at_b_p8))))

    (:action move_b_p9_p1
        :precondition (and (Bb_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_b_p9)
                           (Pb_not_blocked_p1))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #73446: origin
                    (at_b_p1)

                    ; #35402: origin
                    (not (at_b_p9))

                    ; #83155: <==negation-removal== 73446 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p9_p2
        :precondition (and (Pb_not_blocked_p2)
                           (Bb_not_blocked_p2)
                           (at_b_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #26756: origin
                    (at_b_p2)

                    ; #35402: origin
                    (not (at_b_p9))

                    ; #43115: <==negation-removal== 26756 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p9_p3
        :precondition (and (Bb_not_blocked_p3)
                           (Pb_not_blocked_p3)
                           (at_b_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #18239: origin
                    (at_b_p3)

                    ; #35402: origin
                    (not (at_b_p9))

                    ; #51360: <==negation-removal== 18239 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p9_p4
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (at_b_p9))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #13583: origin
                    (at_b_p4)

                    ; #35402: origin
                    (not (at_b_p9))

                    ; #67304: <==negation-removal== 13583 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p9_p5
        :precondition (and (checked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p9_p5)
                           (at_b_p9)
                           (Pb_not_blocked_p5))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #81824: origin
                    (at_b_p5)

                    ; #33507: <==negation-removal== 81824 (pos)
                    (not (not_at_b_p5))

                    ; #35402: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p6
        :precondition (and (Pb_not_blocked_p6)
                           (at_b_p9)
                           (checked_p6)
                           (succ_p9_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #38646: origin
                    (at_b_p6)

                    ; #35402: origin
                    (not (at_b_p9))

                    ; #49637: <==negation-removal== 38646 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p9_p7
        :precondition (and (Pb_not_blocked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p9_p7)
                           (checked_p7)
                           (at_b_p9))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #47250: origin
                    (at_b_p7)

                    ; #35402: origin
                    (not (at_b_p9))

                    ; #67887: <==negation-removal== 47250 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p9_p8
        :precondition (and (Bb_not_blocked_p8)
                           (Pb_not_blocked_p8)
                           (succ_p9_p8)
                           (at_b_p9)
                           (checked_p8))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #29703: origin
                    (at_b_p8)

                    ; #34154: <==negation-removal== 29703 (pos)
                    (not (not_at_b_p8))

                    ; #35402: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p9
        :precondition (and (Bb_not_blocked_p9)
                           (checked_p9)
                           (at_b_p9)
                           (succ_p9_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #13378: <==commonly_known== 35402 (neg)
                    (not_at_b_p9)

                    ; #35402: origin
                    (at_b_p9)

                    ; #13378: <==negation-removal== 35402 (pos)
                    (not (not_at_b_p9))

                    ; #35402: origin
                    (not (at_b_p9))))

    (:action move_c_p1_p1
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #57985: origin
                    (at_c_p1)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #57985: origin
                    (not (at_c_p1))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p1_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p1_p2)
                           (at_c_p1))
        :effect (and
                    ; #44916: origin
                    (at_c_p2)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #57985: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p3
        :precondition (and (at_c_p1)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #66782: origin
                    (at_c_p3)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #57985: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p4
        :precondition (and (at_c_p1)
                           (succ_p1_p4)
                           (Bc_not_blocked_p4)
                           (checked_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #56698: origin
                    (at_c_p4)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #57985: origin
                    (not (at_c_p1))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p1))
        :effect (and
                    ; #70742: origin
                    (at_c_p5)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #57985: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p6
        :precondition (and (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #48012: origin
                    (at_c_p6)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #57985: origin
                    (not (at_c_p1))

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p1_p7
        :precondition (and (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p1))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #57985: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p8
        :precondition (and (Bc_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p1))
        :effect (and
                    ; #62557: origin
                    (at_c_p8)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #57985: origin
                    (not (at_c_p1))))

    (:action move_c_p1_p9
        :precondition (and (Pc_not_blocked_p9)
                           (checked_p9)
                           (succ_p1_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p1))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #79781: <==commonly_known== 57985 (neg)
                    (not_at_c_p1)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #57985: origin
                    (not (at_c_p1))))

    (:action move_c_p2_p1
        :precondition (and (Pc_not_blocked_p1)
                           (succ_p2_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p2))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #57985: origin
                    (at_c_p1)

                    ; #44916: origin
                    (not (at_c_p2))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p2_p2
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #44916: origin
                    (at_c_p2)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #44916: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p3
        :precondition (and (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p2)
                           (Bc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #66782: origin
                    (at_c_p3)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #44916: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p4
        :precondition (and (succ_p2_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p2)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #56698: origin
                    (at_c_p4)

                    ; #44916: origin
                    (not (at_c_p2))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p2_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #70742: origin
                    (at_c_p5)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #44916: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p6
        :precondition (and (Pc_not_blocked_p6)
                           (at_c_p2)
                           (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (checked_p6))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #48012: origin
                    (at_c_p6)

                    ; #44916: origin
                    (not (at_c_p2))

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p2_p7
        :precondition (and (succ_p2_p7)
                           (Bc_not_blocked_p7)
                           (checked_p7)
                           (at_c_p2)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #44916: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_c_p2)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #62557: origin
                    (at_c_p8)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #44916: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p9
        :precondition (and (Pc_not_blocked_p9)
                           (at_c_p2)
                           (succ_p2_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #36999: <==commonly_known== 44916 (neg)
                    (not_at_c_p2)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #44916: origin
                    (not (at_c_p2))))

    (:action move_c_p3_p1
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p3_p1))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #57985: origin
                    (at_c_p1)

                    ; #66782: origin
                    (not (at_c_p3))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p3_p2
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p2)
                           (succ_p3_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #44916: origin
                    (at_c_p2)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p3
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #66782: origin
                    (at_c_p3)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p4
        :precondition (and (at_c_p3)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p3_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #56698: origin
                    (at_c_p4)

                    ; #66782: origin
                    (not (at_c_p3))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p3_p5
        :precondition (and (at_c_p3)
                           (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p3_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #70742: origin
                    (at_c_p5)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p6
        :precondition (and (at_c_p3)
                           (Pc_not_blocked_p6)
                           (succ_p3_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #48012: origin
                    (at_c_p6)

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p7
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p3_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p8
        :precondition (and (at_c_p3)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #62557: origin
                    (at_c_p8)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p3_p9
        :precondition (and (at_c_p3)
                           (succ_p3_p9)
                           (Pc_not_blocked_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #36399: <==commonly_known== 66782 (neg)
                    (not_at_c_p3)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #66782: origin
                    (not (at_c_p3))))

    (:action move_c_p4_p1
        :precondition (and (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p4)
                           (checked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #57985: origin
                    (at_c_p1)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #56698: origin
                    (not (at_c_p4))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p4_p2
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p4)
                           (succ_p4_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #44916: origin
                    (at_c_p2)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #56698: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p3
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #66782: origin
                    (at_c_p3)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #56698: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p4
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #56698: origin
                    (at_c_p4)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #56698: origin
                    (not (at_c_p4))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p4_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p4_p5)
                           (at_c_p4)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #70742: origin
                    (at_c_p5)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #56698: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p6
        :precondition (and (Pc_not_blocked_p6)
                           (at_c_p4)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (succ_p4_p6))
        :effect (and
                    ; #48012: origin
                    (at_c_p6)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #56698: origin
                    (not (at_c_p4))

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p4_p7
        :precondition (and (Bc_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7)
                           (at_c_p4)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #56698: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_c_p4)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #62557: origin
                    (at_c_p8)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #56698: origin
                    (not (at_c_p4))))

    (:action move_c_p4_p9
        :precondition (and (Pc_not_blocked_p9)
                           (at_c_p4)
                           (succ_p4_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #73680: <==commonly_known== 56698 (neg)
                    (not_at_c_p4)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #56698: origin
                    (not (at_c_p4))))

    (:action move_c_p5_p1
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p5_p1))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #57985: origin
                    (at_c_p1)

                    ; #70742: origin
                    (not (at_c_p5))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p5_p2
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p5)
                           (succ_p5_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #44916: origin
                    (at_c_p2)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p3
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #66782: origin
                    (at_c_p3)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p4
        :precondition (and (at_c_p5)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (succ_p5_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #56698: origin
                    (at_c_p4)

                    ; #70742: origin
                    (not (at_c_p5))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p5_p5
        :precondition (and (checked_p5)
                           (at_c_p5)
                           (succ_p5_p5)
                           (Bc_not_blocked_p5)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #70742: origin
                    (at_c_p5)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_c_p5)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #48012: origin
                    (at_c_p6)

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p7
        :precondition (and (Bc_not_blocked_p7)
                           (at_c_p5)
                           (succ_p5_p7)
                           (checked_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p8
        :precondition (and (at_c_p5)
                           (succ_p5_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #62557: origin
                    (at_c_p8)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p9
        :precondition (and (at_c_p5)
                           (Pc_not_blocked_p9)
                           (succ_p5_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #41629: <==commonly_known== 70742 (neg)
                    (not_at_c_p5)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #70742: origin
                    (not (at_c_p5))))

    (:action move_c_p6_p1
        :precondition (and (succ_p6_p1)
                           (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p6))
        :effect (and
                    ; #57985: origin
                    (at_c_p1)

                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #48012: origin
                    (not (at_c_p6))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p6_p2
        :precondition (and (Bc_not_blocked_p2)
                           (checked_p2)
                           (Pc_not_blocked_p2)
                           (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #44916: origin
                    (at_c_p2)

                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #48012: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p3
        :precondition (and (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (succ_p6_p3)
                           (checked_p3)
                           (at_c_p6))
        :effect (and
                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #66782: origin
                    (at_c_p3)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #48012: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p4
        :precondition (and (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p6)
                           (succ_p6_p4)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #56698: origin
                    (at_c_p4)

                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #48012: origin
                    (not (at_c_p6))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p6_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p6_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p6))
        :effect (and
                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #70742: origin
                    (at_c_p5)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #48012: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p6
        :precondition (and (Pc_not_blocked_p6)
                           (succ_p6_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p6))
        :effect (and
                    ; #48012: origin
                    (at_c_p6)

                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #48012: origin
                    (not (at_c_p6))

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p6_p7
        :precondition (and (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p6_p7)
                           (Pc_not_blocked_p7)
                           (at_c_p6))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #48012: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p8
        :precondition (and (succ_p6_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p6))
        :effect (and
                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #62557: origin
                    (at_c_p8)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #48012: origin
                    (not (at_c_p6))))

    (:action move_c_p6_p9
        :precondition (and (succ_p6_p9)
                           (Pc_not_blocked_p9)
                           (checked_p9)
                           (Bc_not_blocked_p9)
                           (at_c_p6))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #58559: <==commonly_known== 48012 (neg)
                    (not_at_c_p6)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #48012: origin
                    (not (at_c_p6))))

    (:action move_c_p7_p1
        :precondition (and (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #57985: origin
                    (at_c_p1)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p7_p2
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p7_p2)
                           (at_c_p7)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #44916: origin
                    (at_c_p2)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p7_p3
        :precondition (and (at_c_p7)
                           (Pc_not_blocked_p3)
                           (succ_p7_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #66782: origin
                    (at_c_p3)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p7_p4
        :precondition (and (succ_p7_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p7)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #56698: origin
                    (at_c_p4)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p7_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p7)
                           (Pc_not_blocked_p5)
                           (succ_p7_p5))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #70742: origin
                    (at_c_p5)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p7_p6
        :precondition (and (succ_p7_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p7)
                           (Bc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #48012: origin
                    (at_c_p6)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p7_p7
        :precondition (and (Bc_not_blocked_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (at_c_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_c_p7)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #62557: origin
                    (at_c_p8)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p7_p9
        :precondition (and (Pc_not_blocked_p9)
                           (succ_p7_p9)
                           (at_c_p7)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #37283: <==commonly_known== 29682 (neg)
                    (not_at_c_p7)

                    ; #29682: origin
                    (not (at_c_p7))

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))))

    (:action move_c_p8_p1
        :precondition (and (Pc_not_blocked_p1)
                           (at_c_p8)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #57985: origin
                    (at_c_p1)

                    ; #62557: origin
                    (not (at_c_p8))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p8_p2
        :precondition (and (Bc_not_blocked_p2)
                           (succ_p8_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p8)
                           (checked_p2))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #44916: origin
                    (at_c_p2)

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p3
        :precondition (and (checked_p3)
                           (succ_p8_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p8))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #66782: origin
                    (at_c_p3)

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p8)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #56698: origin
                    (at_c_p4)

                    ; #62557: origin
                    (not (at_c_p8))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p8_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p8))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #70742: origin
                    (at_c_p5)

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p6
        :precondition (and (succ_p8_p6)
                           (Pc_not_blocked_p6)
                           (Bc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p8))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #48012: origin
                    (at_c_p6)

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p7
        :precondition (and (Bc_not_blocked_p7)
                           (succ_p8_p7)
                           (at_c_p8)
                           (checked_p7)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p8
        :precondition (and (succ_p8_p8)
                           (Bc_not_blocked_p8)
                           (checked_p8)
                           (at_c_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #62557: origin
                    (at_c_p8)

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p9
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (at_c_p8)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #32982: <==commonly_known== 62557 (neg)
                    (not_at_c_p8)

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))

                    ; #62557: origin
                    (not (at_c_p8))))

    (:action move_c_p9_p1
        :precondition (and (Pc_not_blocked_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #57985: origin
                    (at_c_p1)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #79781: <==negation-removal== 57985 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p9_p2
        :precondition (and (Bc_not_blocked_p2)
                           (at_c_p9)
                           (Pc_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #44916: origin
                    (at_c_p2)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #36999: <==negation-removal== 44916 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p9_p3
        :precondition (and (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #66782: origin
                    (at_c_p3)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #36399: <==negation-removal== 66782 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (checked_p4)
                           (Bc_not_blocked_p4)
                           (at_c_p9)
                           (Pc_not_blocked_p4))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #56698: origin
                    (at_c_p4)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #73680: <==negation-removal== 56698 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p9_p5
        :precondition (and (checked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p9_p5)
                           (at_c_p9)
                           (Pc_not_blocked_p5))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #70742: origin
                    (at_c_p5)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #41629: <==negation-removal== 70742 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p9_p6
        :precondition (and (Pc_not_blocked_p6)
                           (at_c_p9)
                           (checked_p6)
                           (succ_p9_p6)
                           (Bc_not_blocked_p6))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #48012: origin
                    (at_c_p6)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #58559: <==negation-removal== 48012 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p9_p7
        :precondition (and (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7)
                           (at_c_p9)
                           (Pc_not_blocked_p7))
        :effect (and
                    ; #29682: origin
                    (at_c_p7)

                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #37283: <==negation-removal== 29682 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p9_p8
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p9)
                           (succ_p9_p8)
                           (checked_p8)
                           (Pc_not_blocked_p8))
        :effect (and
                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #62557: origin
                    (at_c_p8)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #32982: <==negation-removal== 62557 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p9_p9
        :precondition (and (Pc_not_blocked_p9)
                           (at_c_p9)
                           (succ_p9_p9)
                           (Bc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #25161: origin
                    (at_c_p9)

                    ; #44797: <==commonly_known== 25161 (neg)
                    (not_at_c_p9)

                    ; #25161: origin
                    (not (at_c_p9))

                    ; #44797: <==negation-removal== 25161 (pos)
                    (not (not_at_c_p9))))

    (:action move_d_p1_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p1)
                           (Pd_not_blocked_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p2
        :precondition (and (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p1)
                           (succ_p1_p2)
                           (checked_p2))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #55578: origin
                    (at_d_p2)

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p1)
                           (checked_p3)
                           (succ_p1_p3))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #84276: origin
                    (at_d_p3)

                    ; #80212: origin
                    (not (at_d_p1))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p1_p4
        :precondition (and (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p1_p4)
                           (checked_p4)
                           (at_d_p1))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #66693: origin
                    (at_d_p4)

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p5
        :precondition (and (succ_p1_p5)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p1))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #63064: origin
                    (at_d_p5)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p1)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (succ_p1_p6))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p7
        :precondition (and (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p1_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p1))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p1)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #84465: origin
                    (at_d_p8)

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p9
        :precondition (and (Bd_not_blocked_p9)
                           (succ_p1_p9)
                           (at_d_p1)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #45382: <==commonly_known== 80212 (neg)
                    (not_at_d_p1)

                    ; #46874: origin
                    (at_d_p9)

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))

                    ; #80212: origin
                    (not (at_d_p1))))

    (:action move_d_p2_p1
        :precondition (and (at_d_p2)
                           (succ_p2_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #55578: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p2
        :precondition (and (at_d_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (checked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #55578: origin
                    (at_d_p2)

                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #55578: origin
                    (not (at_d_p2))

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p2_p3
        :precondition (and (succ_p2_p3)
                           (Bd_not_blocked_p3)
                           (at_d_p2)
                           (Pd_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #84276: origin
                    (at_d_p3)

                    ; #55578: origin
                    (not (at_d_p2))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p2_p4
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p2_p4)
                           (at_d_p2)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #66693: origin
                    (at_d_p4)

                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #55578: origin
                    (not (at_d_p2))

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p2_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p2)
                           (Bd_not_blocked_p5)
                           (succ_p2_p5))
        :effect (and
                    ; #63064: origin
                    (at_d_p5)

                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #55578: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p6
        :precondition (and (Pd_not_blocked_p6)
                           (at_d_p2)
                           (succ_p2_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #55578: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_d_p2)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #55578: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p8
        :precondition (and (at_d_p2)
                           (succ_p2_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #84465: origin
                    (at_d_p8)

                    ; #55578: origin
                    (not (at_d_p2))

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p2_p9
        :precondition (and (at_d_p2)
                           (Bd_not_blocked_p9)
                           (succ_p2_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #46874: origin
                    (at_d_p9)

                    ; #70943: <==commonly_known== 55578 (neg)
                    (not_at_d_p2)

                    ; #55578: origin
                    (not (at_d_p2))

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p3_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p3)
                           (succ_p3_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #80212: origin
                    (at_d_p1)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p2
        :precondition (and (Bd_not_blocked_p2)
                           (succ_p3_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p3)
                           (checked_p2))
        :effect (and
                    ; #55578: origin
                    (at_d_p2)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p3)
                           (checked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #84276: origin
                    (at_d_p3)

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (at_d_p3)
                           (Pd_not_blocked_p4)
                           (succ_p3_p4))
        :effect (and
                    ; #66693: origin
                    (at_d_p4)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p3_p5)
                           (at_d_p3)
                           (Bd_not_blocked_p5))
        :effect (and
                    ; #63064: origin
                    (at_d_p5)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p6
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p3_p6)
                           (at_d_p3)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #83151: origin
                    (at_d_p6)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p7
        :precondition (and (checked_p7)
                           (at_d_p3)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p3_p7))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p3)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p3_p8))
        :effect (and
                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #84465: origin
                    (at_d_p8)

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p9
        :precondition (and (succ_p3_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p3)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #46874: origin
                    (at_d_p9)

                    ; #83941: <==commonly_known== 84276 (neg)
                    (not_at_d_p3)

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))

                    ; #84276: origin
                    (not (at_d_p3))))

    (:action move_d_p4_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p4)
                           (Pd_not_blocked_p1)
                           (succ_p4_p1))
        :effect (and
                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #66693: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p2
        :precondition (and (Bd_not_blocked_p2)
                           (succ_p4_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p4)
                           (checked_p2))
        :effect (and
                    ; #55578: origin
                    (at_d_p2)

                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #66693: origin
                    (not (at_d_p4))

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p4_p3
        :precondition (and (checked_p3)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #84276: origin
                    (at_d_p3)

                    ; #66693: origin
                    (not (at_d_p4))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p4_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (succ_p4_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p4))
        :effect (and
                    ; #66693: origin
                    (at_d_p4)

                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #66693: origin
                    (not (at_d_p4))

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p4_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p4_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p4))
        :effect (and
                    ; #63064: origin
                    (at_d_p5)

                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #66693: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p6
        :precondition (and (Pd_not_blocked_p6)
                           (checked_p6)
                           (Bd_not_blocked_p6)
                           (succ_p4_p6)
                           (at_d_p4))
        :effect (and
                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #66693: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p7
        :precondition (and (succ_p4_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p4))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #66693: origin
                    (not (at_d_p4))))

    (:action move_d_p4_p8
        :precondition (and (succ_p4_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p4))
        :effect (and
                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #84465: origin
                    (at_d_p8)

                    ; #66693: origin
                    (not (at_d_p4))

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p4_p9
        :precondition (and (Bd_not_blocked_p9)
                           (succ_p4_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p4)
                           (checked_p9))
        :effect (and
                    ; #46874: origin
                    (at_d_p9)

                    ; #79669: <==commonly_known== 66693 (neg)
                    (not_at_d_p4)

                    ; #66693: origin
                    (not (at_d_p4))

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p5_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p5_p1)
                           (at_d_p5)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #63064: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p2
        :precondition (and (Bd_not_blocked_p2)
                           (succ_p5_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p5)
                           (checked_p2))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #55578: origin
                    (at_d_p2)

                    ; #63064: origin
                    (not (at_d_p5))

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p5_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p5)
                           (checked_p3)
                           (succ_p5_p3))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #84276: origin
                    (at_d_p3)

                    ; #63064: origin
                    (not (at_d_p5))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p5_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #66693: origin
                    (at_d_p4)

                    ; #63064: origin
                    (not (at_d_p5))

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p5_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p5_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p5))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #63064: origin
                    (at_d_p5)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #63064: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p6
        :precondition (and (succ_p5_p6)
                           (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p5)
                           (checked_p6))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #63064: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p7
        :precondition (and (checked_p7)
                           (succ_p5_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p5))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #33421: origin
                    (at_d_p7)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #63064: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p5)
                           (checked_p8))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #84465: origin
                    (at_d_p8)

                    ; #63064: origin
                    (not (at_d_p5))

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p5_p9
        :precondition (and (Bd_not_blocked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p5)
                           (succ_p5_p9)
                           (checked_p9))
        :effect (and
                    ; #16487: <==commonly_known== 63064 (neg)
                    (not_at_d_p5)

                    ; #46874: origin
                    (at_d_p9)

                    ; #63064: origin
                    (not (at_d_p5))

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p6_p1
        :precondition (and (succ_p6_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p6)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p2
        :precondition (and (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p6)
                           (succ_p6_p2)
                           (checked_p2))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #55578: origin
                    (at_d_p2)

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p6_p3)
                           (at_d_p6)
                           (checked_p3))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #84276: origin
                    (at_d_p3)

                    ; #83151: origin
                    (not (at_d_p6))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p6_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p6_p4)
                           (at_d_p6))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #66693: origin
                    (at_d_p4)

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p6_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p6))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #63064: origin
                    (at_d_p5)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p6
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p6_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p6)
                           (checked_p6))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p7
        :precondition (and (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #33421: origin
                    (at_d_p7)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p8
        :precondition (and (succ_p6_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p6)
                           (checked_p8))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #84465: origin
                    (at_d_p8)

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p9
        :precondition (and (succ_p6_p9)
                           (Bd_not_blocked_p9)
                           (Pd_not_blocked_p9)
                           (at_d_p6)
                           (checked_p9))
        :effect (and
                    ; #19339: <==commonly_known== 83151 (neg)
                    (not_at_d_p6)

                    ; #46874: origin
                    (at_d_p9)

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))

                    ; #83151: origin
                    (not (at_d_p6))))

    (:action move_d_p7_p1
        :precondition (and (at_d_p7)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (Pd_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #80212: origin
                    (at_d_p1)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p7_p2
        :precondition (and (at_d_p7)
                           (succ_p7_p2)
                           (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #55578: origin
                    (at_d_p2)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p7_p3
        :precondition (and (at_d_p7)
                           (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (checked_p3))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #84276: origin
                    (at_d_p3)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p7_p4
        :precondition (and (at_d_p7)
                           (Bd_not_blocked_p4)
                           (succ_p7_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #66693: origin
                    (at_d_p4)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p7_p5
        :precondition (and (at_d_p7)
                           (Pd_not_blocked_p5)
                           (checked_p5)
                           (Bd_not_blocked_p5)
                           (succ_p7_p5))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #63064: origin
                    (at_d_p5)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #33421: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p6
        :precondition (and (at_d_p7)
                           (succ_p7_p6)
                           (Pd_not_blocked_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #33421: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p7
        :precondition (and (at_d_p7)
                           (succ_p7_p7)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p7_p8
        :precondition (and (at_d_p7)
                           (succ_p7_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #84465: origin
                    (at_d_p8)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p7_p9
        :precondition (and (at_d_p7)
                           (succ_p7_p9)
                           (Bd_not_blocked_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #46460: <==commonly_known== 33421 (neg)
                    (not_at_d_p7)

                    ; #46874: origin
                    (at_d_p9)

                    ; #33421: origin
                    (not (at_d_p7))

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p8_p1
        :precondition (and (at_d_p8)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p8_p1)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p2
        :precondition (and (Bd_not_blocked_p2)
                           (at_d_p8)
                           (Pd_not_blocked_p2)
                           (succ_p8_p2)
                           (checked_p2))
        :effect (and
                    ; #55578: origin
                    (at_d_p2)

                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p3
        :precondition (and (Bd_not_blocked_p3)
                           (at_d_p8)
                           (succ_p8_p3)
                           (Pd_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #84276: origin
                    (at_d_p3)

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p4
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p8_p4)
                           (at_d_p8)
                           (checked_p4)
                           (Pd_not_blocked_p4))
        :effect (and
                    ; #66693: origin
                    (at_d_p4)

                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (at_d_p8)
                           (succ_p8_p5)
                           (Bd_not_blocked_p5))
        :effect (and
                    ; #63064: origin
                    (at_d_p5)

                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p6
        :precondition (and (succ_p8_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p8)
                           (Bd_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_d_p8)
                           (checked_p7)
                           (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_d_p8)
                           (Pd_not_blocked_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #84465: origin
                    (at_d_p8)

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p9
        :precondition (and (at_d_p8)
                           (Bd_not_blocked_p9)
                           (succ_p8_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #46874: origin
                    (at_d_p9)

                    ; #78657: <==commonly_known== 84465 (neg)
                    (not_at_d_p8)

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))

                    ; #84465: origin
                    (not (at_d_p8))))

    (:action move_d_p9_p1
        :precondition (and (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_d_p9)
                           (Pd_not_blocked_p1))
        :effect (and
                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #80212: origin
                    (at_d_p1)

                    ; #45382: <==negation-removal== 80212 (pos)
                    (not (not_at_d_p1))

                    ; #46874: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p2
        :precondition (and (Bd_not_blocked_p2)
                           (Pd_not_blocked_p2)
                           (at_d_p9)
                           (succ_p9_p2)
                           (checked_p2))
        :effect (and
                    ; #55578: origin
                    (at_d_p2)

                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #46874: origin
                    (not (at_d_p9))

                    ; #70943: <==negation-removal== 55578 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p9_p3
        :precondition (and (Bd_not_blocked_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p9)
                           (checked_p3)
                           (succ_p9_p3))
        :effect (and
                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #84276: origin
                    (at_d_p3)

                    ; #46874: origin
                    (not (at_d_p9))

                    ; #83941: <==negation-removal== 84276 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p9_p4
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p9_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p9))
        :effect (and
                    ; #66693: origin
                    (at_d_p4)

                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #46874: origin
                    (not (at_d_p9))

                    ; #79669: <==negation-removal== 66693 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p9_p5
        :precondition (and (Pd_not_blocked_p5)
                           (checked_p5)
                           (succ_p9_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p9))
        :effect (and
                    ; #63064: origin
                    (at_d_p5)

                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #16487: <==negation-removal== 63064 (pos)
                    (not (not_at_d_p5))

                    ; #46874: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p6
        :precondition (and (Pd_not_blocked_p6)
                           (succ_p9_p6)
                           (Bd_not_blocked_p6)
                           (checked_p6)
                           (at_d_p9))
        :effect (and
                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #83151: origin
                    (at_d_p6)

                    ; #19339: <==negation-removal== 83151 (pos)
                    (not (not_at_d_p6))

                    ; #46874: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p7
        :precondition (and (checked_p7)
                           (Bd_not_blocked_p7)
                           (succ_p9_p7)
                           (Pd_not_blocked_p7)
                           (at_d_p9))
        :effect (and
                    ; #33421: origin
                    (at_d_p7)

                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #46460: <==negation-removal== 33421 (pos)
                    (not (not_at_d_p7))

                    ; #46874: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p8
        :precondition (and (Bd_not_blocked_p8)
                           (Pd_not_blocked_p8)
                           (succ_p9_p8)
                           (at_d_p9)
                           (checked_p8))
        :effect (and
                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #84465: origin
                    (at_d_p8)

                    ; #46874: origin
                    (not (at_d_p9))

                    ; #78657: <==negation-removal== 84465 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p9_p9
        :precondition (and (Bd_not_blocked_p9)
                           (at_d_p9)
                           (succ_p9_p9)
                           (Pd_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #46874: origin
                    (at_d_p9)

                    ; #75503: <==commonly_known== 46874 (neg)
                    (not_at_d_p9)

                    ; #46874: origin
                    (not (at_d_p9))

                    ; #75503: <==negation-removal== 46874 (pos)
                    (not (not_at_d_p9))))

    (:action sensecells_a_p1_p1
        :precondition (and (at_a_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_a_p1))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p1_p3
        :precondition (and (at_a_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_a_p1))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_a_p1))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_a_p1))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_a_p1))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_a_p2))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p2_p2
        :precondition (and (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_a_p2))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_a_p2))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_a_p2))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_a_p2))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_a_p2))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_a_p2))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_a_p3))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_a_p3))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_a_p3))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_a_p3))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_a_p3))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_a_p3))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_a_p3))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_a_p3))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_a_p3))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p4_p1
        :precondition (and (at_a_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p4_p2
        :precondition (and (at_a_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p4_p3
        :precondition (and (at_a_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p4_p4
        :precondition (and (at_a_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p4_p5
        :precondition (and (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p4_p6
        :precondition (and (at_a_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p4_p7
        :precondition (and (at_a_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p4_p8
        :precondition (and (at_a_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p4_p9
        :precondition (and (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p5_p2
        :precondition (and (at_a_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p5_p3
        :precondition (and (at_a_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p5_p4
        :precondition (and (at_a_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_a_p5))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_a_p5))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_a_p5))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_a_p5))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p5_p9
        :precondition (and (at_a_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p6_p1
        :precondition (and (at_a_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p6_p2
        :precondition (and (at_a_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_a_p6))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p6_p4
        :precondition (and (at_a_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p6_p5
        :precondition (and (at_a_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p6_p6
        :precondition (and (at_a_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p6_p7
        :precondition (and (at_a_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_a_p6))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p6_p9
        :precondition (and (at_a_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p7_p1
        :precondition (and (at_a_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_a_p7))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p7_p3
        :precondition (and (at_a_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_a_p7))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_a_p7))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_a_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_a_p7))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_a_p7))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_a_p8))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_a_p8))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_a_p8))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p8_p5
        :precondition (and (at_a_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_a_p8))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_a_p8))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_a_p8))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_a_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_a_p9))
        :effect (and
                    ; #26786: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #27008: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #44419: <==closure== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #91212: <==closure== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #62106: <==negation-removal== 27008 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #64419: <==negation-removal== 44419 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))

                    ; #71437: <==uncertain_firing== 27008 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #73722: <==negation-removal== 26786 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #81764: <==negation-removal== 91212 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #84308: <==unclosure== 71437 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))))

    (:action sensecells_a_p9_p2
        :precondition (and (at_a_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #15855: <==closure== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #45816: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #54709: <==closure== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #75005: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #31042: <==negation-removal== 45816 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #43191: <==uncertain_firing== 75005 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #55034: <==negation-removal== 75005 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67259: <==negation-removal== 54709 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))

                    ; #82719: <==unclosure== 43191 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #84196: <==negation-removal== 15855 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_a_p9_p3
        :precondition (and (at_a_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #10306: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #31463: <==closure== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #40706: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #71108: <==closure== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #13235: <==uncertain_firing== 10306 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #14742: <==negation-removal== 71108 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #39109: <==negation-removal== 10306 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #47521: <==negation-removal== 31463 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #49698: <==negation-removal== 40706 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #90742: <==unclosure== 13235 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))))

    (:action sensecells_a_p9_p4
        :precondition (and (at_a_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #27081: <==closure== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #61117: <==closure== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #86468: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #95213: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #31189: <==negation-removal== 61117 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #33348: <==unclosure== 86303 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))

                    ; #49117: <==negation-removal== 86468 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #57120: <==negation-removal== 95213 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #58102: <==negation-removal== 27081 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #86303: <==uncertain_firing== 95213 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))))

    (:action sensecells_a_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_a_p9))
        :effect (and
                    ; #23864: <==closure== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #50354: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #73817: <==closure== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #86854: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #14421: <==negation-removal== 86854 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #22825: <==uncertain_firing== 50354 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #38762: <==unclosure== 22825 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #44650: <==negation-removal== 73817 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #49900: <==negation-removal== 50354 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #77908: <==negation-removal== 23864 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p9_p6
        :precondition (and (at_a_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #42297: <==closure== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #55148: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #56365: <==closure== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #97126: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #14640: <==unclosure== 77495 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #17793: <==negation-removal== 42297 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #33457: <==negation-removal== 56365 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #39525: <==negation-removal== 97126 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))

                    ; #55327: <==negation-removal== 55148 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #77495: <==uncertain_firing== 97126 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_a_p9_p7
        :precondition (and (at_a_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #22471: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #30557: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #31920: <==closure== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #32962: <==closure== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #17555: <==negation-removal== 32962 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #38607: <==unclosure== 85136 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #39038: <==negation-removal== 30557 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #59818: <==negation-removal== 22471 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #61671: <==negation-removal== 31920 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))

                    ; #85136: <==uncertain_firing== 22471 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))))

    (:action sensecells_a_p9_p8
        :precondition (and (at_a_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #42079: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #46596: <==closure== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #52336: <==closure== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87838: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #20619: <==uncertain_firing== 87838 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #52761: <==negation-removal== 52336 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #64433: <==negation-removal== 87838 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #74804: <==negation-removal== 46596 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))

                    ; #82624: <==unclosure== 20619 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #83079: <==negation-removal== 42079 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))))

    (:action sensecells_a_p9_p9
        :precondition (and (at_a_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #13996: <==closure== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #34693: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #47652: <==closure== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #79733: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #12221: <==uncertain_firing== 34693 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #16426: <==negation-removal== 34693 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #44324: <==unclosure== 12221 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #44535: <==negation-removal== 47652 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #57037: <==negation-removal== 13996 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #88936: <==negation-removal== 79733 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))))

    (:action sensecells_b_p1_p1
        :precondition (and (at_b_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_b_p1))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p1_p3
        :precondition (and (at_b_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_b_p1))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_b_p1))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_b_p1))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_b_p1))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_b_p1))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_b_p1))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p2_p1
        :precondition (and (at_b_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p2_p2
        :precondition (and (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p2_p4
        :precondition (and (at_b_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p2_p5
        :precondition (and (at_b_p2)
                           (succ_p2_p5))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p2_p7
        :precondition (and (at_b_p2)
                           (succ_p2_p7))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p2_p8
        :precondition (and (at_b_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p2_p9
        :precondition (and (at_b_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_b_p3))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_b_p3))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p3_p3
        :precondition (and (at_b_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p3_p4
        :precondition (and (succ_p3_p4)
                           (at_b_p3))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_b_p3))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_b_p3))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_b_p3))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_b_p3))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_b_p3))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p4_p1
        :precondition (and (at_b_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p4_p2
        :precondition (and (at_b_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p4_p3
        :precondition (and (at_b_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p4_p4
        :precondition (and (at_b_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p4_p5
        :precondition (and (at_b_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p4_p6
        :precondition (and (at_b_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p4_p7
        :precondition (and (at_b_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p4_p8
        :precondition (and (at_b_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p4_p9
        :precondition (and (at_b_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p5_p1
        :precondition (and (at_b_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p5_p2
        :precondition (and (at_b_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p5_p3
        :precondition (and (at_b_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p5_p4
        :precondition (and (at_b_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p5_p5
        :precondition (and (at_b_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p5_p6
        :precondition (and (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p5_p7
        :precondition (and (at_b_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p5_p8
        :precondition (and (at_b_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p5_p9
        :precondition (and (at_b_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p6_p1
        :precondition (and (at_b_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p6_p2
        :precondition (and (at_b_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p6_p3
        :precondition (and (at_b_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p6_p4
        :precondition (and (at_b_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p6_p5
        :precondition (and (at_b_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p6_p6
        :precondition (and (at_b_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p6_p7
        :precondition (and (at_b_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_b_p6))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p7_p1
        :precondition (and (at_b_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_b_p7))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_b_p7))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_b_p7))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_b_p7))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_b_p7))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_b_p7))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_b_p7))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_b_p8))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_b_p8))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_b_p8))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_b_p8))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p8_p5
        :precondition (and (succ_p8_p5)
                           (at_b_p8))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_b_p8))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_b_p8))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_b_p8))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_b_p8))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_b_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_b_p9))
        :effect (and
                    ; #18177: <==closure== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #29790: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #44923: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #67113: <==closure== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #12333: <==uncertain_firing== 44923 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #50512: <==negation-removal== 29790 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #81282: <==negation-removal== 18177 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #86940: <==negation-removal== 67113 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #87679: <==negation-removal== 44923 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))

                    ; #89247: <==unclosure== 12333 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))))

    (:action sensecells_b_p9_p2
        :precondition (and (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #26784: <==closure== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #43733: <==closure== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #46819: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #87384: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #32086: <==negation-removal== 87384 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #33269: <==negation-removal== 46819 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #48526: <==uncertain_firing== 46819 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #57061: <==unclosure== 48526 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #64303: <==negation-removal== 26784 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))

                    ; #79439: <==negation-removal== 43733 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_b_p9_p3
        :precondition (and (at_b_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #34474: <==closure== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #44976: <==closure== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86419: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #88879: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #10642: <==unclosure== 56806 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #21683: <==negation-removal== 86419 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #24889: <==negation-removal== 44976 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #52351: <==negation-removal== 88879 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #56806: <==uncertain_firing== 86419 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #89425: <==negation-removal== 34474 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))))

    (:action sensecells_b_p9_p4
        :precondition (and (at_b_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #26246: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #45483: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #46745: <==closure== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #83671: <==closure== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #17378: <==negation-removal== 45483 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #25147: <==negation-removal== 46745 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #40565: <==negation-removal== 83671 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #43777: <==uncertain_firing== 45483 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #49892: <==negation-removal== 26246 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #77135: <==unclosure== 43777 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))))

    (:action sensecells_b_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_b_p9))
        :effect (and
                    ; #12139: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #24664: <==closure== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #52093: <==closure== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #76743: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #29068: <==uncertain_firing== 76743 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #47854: <==unclosure== 29068 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))

                    ; #66814: <==negation-removal== 12139 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #71951: <==negation-removal== 52093 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #81084: <==negation-removal== 24664 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #82066: <==negation-removal== 76743 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))))

    (:action sensecells_b_p9_p6
        :precondition (and (at_b_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #12412: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #35648: <==closure== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #39040: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #68325: <==closure== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #39850: <==negation-removal== 39040 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #65643: <==negation-removal== 12412 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #67016: <==negation-removal== 35648 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #72249: <==uncertain_firing== 12412 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #86066: <==unclosure== 72249 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #91848: <==negation-removal== 68325 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))))

    (:action sensecells_b_p9_p7
        :precondition (and (at_b_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #11252: <==closure== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #20612: origin
                    (checked_p7)

                    ; #21201: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #32400: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #33922: <==closure== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #21828: <==negation-removal== 32400 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))

                    ; #43170: <==negation-removal== 33922 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #47580: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #47608: <==unclosure== 47580 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #79860: <==negation-removal== 21201 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #89012: <==negation-removal== 11252 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))))

    (:action sensecells_b_p9_p8
        :precondition (and (at_b_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #38637: <==closure== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #42860: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #63813: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68435: <==closure== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #17742: <==unclosure== 30464 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #30464: <==uncertain_firing== 63813 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #36544: <==negation-removal== 38637 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #64787: <==negation-removal== 68435 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #76674: <==negation-removal== 42860 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #81637: <==negation-removal== 63813 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))))

    (:action sensecells_b_p9_p9
        :precondition (and (at_b_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #17062: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #25804: <==closure== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #37775: <==closure== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #89183: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #13594: <==negation-removal== 25804 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #28201: <==negation-removal== 89183 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #35721: <==negation-removal== 17062 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))

                    ; #82648: <==unclosure== 89305 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #89305: <==uncertain_firing== 89183 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #89476: <==negation-removal== 37775 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))))

    (:action sensecells_c_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_c_p1))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_c_p1))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_c_p1))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_c_p1))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_c_p1))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_c_p1))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_c_p1))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_c_p1))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_c_p2))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_c_p2))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_c_p2))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_c_p2))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_c_p2))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_c_p2))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_c_p2))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_c_p2))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p3_p1
        :precondition (and (at_c_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p3_p2
        :precondition (and (at_c_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p3_p3
        :precondition (and (at_c_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p3_p4
        :precondition (and (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p3_p5
        :precondition (and (at_c_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p3_p6
        :precondition (and (at_c_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p3_p7
        :precondition (and (at_c_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p3_p8
        :precondition (and (at_c_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p3_p9
        :precondition (and (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p4_p1
        :precondition (and (at_c_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p4_p2
        :precondition (and (at_c_p4)
                           (succ_p4_p2))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p4_p3
        :precondition (and (at_c_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p4_p4
        :precondition (and (at_c_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_c_p4))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_c_p4))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_c_p4))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_c_p4))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p4_p9
        :precondition (and (at_c_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_c_p5))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p5_p2
        :precondition (and (at_c_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p5_p3
        :precondition (and (at_c_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p5_p4
        :precondition (and (at_c_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p5_p5
        :precondition (and (at_c_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_c_p5))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p5_p7
        :precondition (and (at_c_p5)
                           (succ_p5_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p5_p8
        :precondition (and (at_c_p5)
                           (succ_p5_p8))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p5_p9
        :precondition (and (at_c_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_c_p6))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_c_p6))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_c_p6))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_c_p6))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p6_p5
        :precondition (and (succ_p6_p5)
                           (at_c_p6))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_c_p6))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p6_p7
        :precondition (and (succ_p6_p7)
                           (at_c_p6))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_c_p6))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_c_p6))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_c_p7))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_c_p7))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p7_p3
        :precondition (and (succ_p7_p3)
                           (at_c_p7))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_c_p7))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_c_p7))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_c_p7))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p7_p7
        :precondition (and (succ_p7_p7)
                           (at_c_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_c_p7))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_c_p7))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_c_p8))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_c_p8))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_c_p8))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p8_p5
        :precondition (and (at_c_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_c_p8))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_c_p8))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_c_p8))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_c_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_c_p9))
        :effect (and
                    ; #23013: <==closure== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #37389: <==closure== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #44568: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #76202: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #29017: <==uncertain_firing== 76202 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #39938: <==negation-removal== 23013 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #43354: <==negation-removal== 44568 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))

                    ; #47964: <==unclosure== 29017 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #53406: <==negation-removal== 37389 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #53519: <==negation-removal== 76202 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))))

    (:action sensecells_c_p9_p2
        :precondition (and (at_c_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #21668: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #53486: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #55730: <==closure== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #80213: <==closure== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #15895: <==negation-removal== 80213 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #22317: <==negation-removal== 53486 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #31163: <==negation-removal== 21668 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #58695: <==uncertain_firing== 53486 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #64446: <==unclosure== 58695 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))

                    ; #66427: <==negation-removal== 55730 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_c_p9_p3
        :precondition (and (at_c_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #17334: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #46332: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #80583: <==closure== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #89714: <==closure== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #15123: <==negation-removal== 89714 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #28659: <==negation-removal== 17334 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #35308: <==uncertain_firing== 46332 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #49100: <==negation-removal== 80583 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #70900: <==negation-removal== 46332 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #87388: <==unclosure== 35308 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))))

    (:action sensecells_c_p9_p4
        :precondition (and (at_c_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #34255: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #63753: <==closure== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #64228: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #85970: <==closure== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #10876: <==negation-removal== 85970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #15317: <==negation-removal== 64228 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #56602: <==unclosure== 87753 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #69628: <==negation-removal== 34255 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))

                    ; #87753: <==uncertain_firing== 64228 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #90186: <==negation-removal== 63753 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))))

    (:action sensecells_c_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_c_p9))
        :effect (and
                    ; #33781: <==closure== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #34276: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #45592: <==closure== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #71902: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18804: <==negation-removal== 45592 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #19655: <==uncertain_firing== 71902 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))

                    ; #72268: <==negation-removal== 34276 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #73089: <==negation-removal== 71902 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #78735: <==negation-removal== 33781 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #79199: <==unclosure== 19655 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))))

    (:action sensecells_c_p9_p6
        :precondition (and (at_c_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #24214: <==closure== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #41368: <==closure== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #76438: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #83606: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #12806: <==negation-removal== 41368 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #14739: <==unclosure== 63097 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #26025: <==negation-removal== 83606 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #46940: <==negation-removal== 24214 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))

                    ; #63097: <==uncertain_firing== 76438 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #75416: <==negation-removal== 76438 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))))

    (:action sensecells_c_p9_p7
        :precondition (and (at_c_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #28823: <==closure== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #47480: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #59688: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #88531: <==closure== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #11825: <==negation-removal== 47480 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #26703: <==negation-removal== 28823 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #57887: <==uncertain_firing== 47480 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #63801: <==unclosure== 57887 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))

                    ; #79245: <==negation-removal== 59688 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #79666: <==negation-removal== 88531 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))))

    (:action sensecells_c_p9_p8
        :precondition (and (at_c_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #59044: <==closure== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #68095: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #76889: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #80814: <==closure== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #32366: <==negation-removal== 76889 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #33086: <==unclosure== 85990 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #53033: <==negation-removal== 59044 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70137: <==negation-removal== 80814 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #83211: <==negation-removal== 68095 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #85990: <==uncertain_firing== 68095 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))))

    (:action sensecells_c_p9_p9
        :precondition (and (at_c_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #23384: <==closure== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #46531: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #73941: <==closure== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #91075: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #31114: <==unclosure== 33402 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #33402: <==uncertain_firing== 91075 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #38310: <==negation-removal== 23384 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))

                    ; #41161: <==negation-removal== 91075 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #78307: <==negation-removal== 73941 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #82715: <==negation-removal== 46531 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))))

    (:action sensecells_d_p1_p1
        :precondition (and (at_d_p1)
                           (succ_p1_p1))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p1_p2
        :precondition (and (at_d_p1)
                           (succ_p1_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p1_p3
        :precondition (and (at_d_p1)
                           (succ_p1_p3))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p1_p4
        :precondition (and (at_d_p1)
                           (succ_p1_p4))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_d_p1))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p1_p6
        :precondition (and (at_d_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p1_p7
        :precondition (and (at_d_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p1_p8
        :precondition (and (at_d_p1)
                           (succ_p1_p8))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p1_p9
        :precondition (and (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p2_p1
        :precondition (and (at_d_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p2_p2
        :precondition (and (at_d_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_d_p2))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_d_p2))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_d_p2))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_d_p2))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_d_p2))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p2_p8
        :precondition (and (at_d_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_d_p2))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p3_p1
        :precondition (and (at_d_p3)
                           (succ_p3_p1))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p3_p2
        :precondition (and (at_d_p3)
                           (succ_p3_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p3_p3
        :precondition (and (at_d_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p3_p4
        :precondition (and (at_d_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p3_p5
        :precondition (and (at_d_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p3_p6
        :precondition (and (at_d_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p3_p7
        :precondition (and (at_d_p3)
                           (succ_p3_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p3_p8
        :precondition (and (at_d_p3)
                           (succ_p3_p8))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p3_p9
        :precondition (and (at_d_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p4_p1
        :precondition (and (at_d_p4)
                           (succ_p4_p1))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_d_p4))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_d_p4))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_d_p4))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_d_p4))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_d_p4))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_d_p4))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_d_p4))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_d_p5))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p5_p2
        :precondition (and (at_d_p5)
                           (succ_p5_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p5_p3
        :precondition (and (at_d_p5)
                           (succ_p5_p3))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p5_p4
        :precondition (and (at_d_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_d_p5))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p5_p6
        :precondition (and (succ_p5_p6)
                           (at_d_p5))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_d_p5))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_d_p5))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p5_p9
        :precondition (and (at_d_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p6_p1
        :precondition (and (succ_p6_p1)
                           (at_d_p6))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p6_p2
        :precondition (and (at_d_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_d_p6))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p6_p4
        :precondition (and (succ_p6_p4)
                           (at_d_p6))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p6_p5
        :precondition (and (at_d_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p6_p6
        :precondition (and (at_d_p6)
                           (succ_p6_p6))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p6_p7
        :precondition (and (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p6_p8
        :precondition (and (succ_p6_p8)
                           (at_d_p6))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_d_p6))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p7_p1
        :precondition (and (at_d_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p7_p2
        :precondition (and (at_d_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p7_p3
        :precondition (and (at_d_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p7_p4
        :precondition (and (at_d_p7)
                           (succ_p7_p4))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p7_p5
        :precondition (and (at_d_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p7_p6
        :precondition (and (at_d_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p7_p7
        :precondition (and (at_d_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p7_p8
        :precondition (and (at_d_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p7_p9
        :precondition (and (at_d_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p8_p1
        :precondition (and (at_d_p8)
                           (succ_p8_p1))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p8_p2
        :precondition (and (succ_p8_p2)
                           (at_d_p8))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p8_p3
        :precondition (and (at_d_p8)
                           (succ_p8_p3))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_d_p8))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p8_p5
        :precondition (and (at_d_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_d_p8))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p8_p8
        :precondition (and (succ_p8_p8)
                           (at_d_p8))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_d_p8))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensecells_d_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_d_p9))
        :effect (and
                    ; #11440: <==closure== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #36485: <==closure== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #38111: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #83819: origin
                    (checked_p1)

                    ; #85497: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #14138: <==uncertain_firing== 38111 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #23078: <==negation-removal== 36485 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))

                    ; #29979: <==negation-removal== 11440 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #39925: <==unclosure== 14138 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #41526: <==negation-removal== 38111 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #61168: <==negation-removal== 83819 (pos)
                    (not (not_checked_p1))

                    ; #70610: <==negation-removal== 85497 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))))

    (:action sensecells_d_p9_p2
        :precondition (and (at_d_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #34408: <==closure== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #34446: origin
                    (checked_p2)

                    ; #61097: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #72497: <==closure== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #76349: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #16322: <==negation-removal== 72497 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #18024: <==unclosure== 28674 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #26844: <==negation-removal== 34408 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #28658: <==negation-removal== 76349 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #28674: <==uncertain_firing== 61097 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #77639: <==negation-removal== 61097 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))

                    ; #89051: <==negation-removal== 34446 (pos)
                    (not (not_checked_p2))))

    (:action sensecells_d_p9_p3
        :precondition (and (at_d_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #17874: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #72835: <==closure== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #78537: <==closure== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #80116: origin
                    (checked_p3)

                    ; #86512: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #15168: <==negation-removal== 80116 (pos)
                    (not (not_checked_p3))

                    ; #20288: <==unclosure== 55361 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #25446: <==negation-removal== 17874 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #28871: <==negation-removal== 72835 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #44244: <==negation-removal== 86512 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #55361: <==uncertain_firing== 86512 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #71684: <==negation-removal== 78537 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))))

    (:action sensecells_d_p9_p4
        :precondition (and (at_d_p9)
                           (succ_p9_p4))
        :effect (and
                    ; #10635: <==closure== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #37116: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #37556: <==closure== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #70538: origin
                    (checked_p4)

                    ; #76189: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #13039: <==negation-removal== 37556 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #44597: <==unclosure== 76258 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #46146: <==negation-removal== 10635 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #51618: <==negation-removal== 70538 (pos)
                    (not (not_checked_p4))

                    ; #61595: <==negation-removal== 37116 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #76258: <==uncertain_firing== 37116 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))

                    ; #95461: <==negation-removal== 76189 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))))

    (:action sensecells_d_p9_p5
        :precondition (and (succ_p9_p5)
                           (at_d_p9))
        :effect (and
                    ; #33652: <==closure== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #56723: <==closure== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #62670: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #71592: origin
                    (checked_p5)

                    ; #78249: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #11673: <==negation-removal== 33652 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #13937: <==negation-removal== 71592 (pos)
                    (not (not_checked_p5))

                    ; #18758: <==unclosure== 91648 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #57944: <==negation-removal== 78249 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))

                    ; #82469: <==negation-removal== 56723 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #83210: <==negation-removal== 62670 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #91648: <==uncertain_firing== 62670 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))))

    (:action sensecells_d_p9_p6
        :precondition (and (at_d_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #35490: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #39711: <==closure== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #52940: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #70178: <==closure== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #76842: origin
                    (checked_p6)

                    ; #16012: <==negation-removal== 35490 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #27571: <==negation-removal== 70178 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #66109: <==negation-removal== 52940 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #66824: <==unclosure== 83369 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))

                    ; #76747: <==negation-removal== 39711 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77866: <==negation-removal== 76842 (pos)
                    (not (not_checked_p6))

                    ; #83369: <==uncertain_firing== 35490 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))))

    (:action sensecells_d_p9_p7
        :precondition (and (at_d_p9)
                           (succ_p9_p7))
        :effect (and
                    ; #20612: origin
                    (checked_p7)

                    ; #37669: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #56578: <==closure== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #75606: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #89872: <==closure== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #21866: <==negation-removal== 75606 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #36440: <==unclosure== 42452 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))

                    ; #42452: <==uncertain_firing== 37669 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #52552: <==negation-removal== 20612 (pos)
                    (not (not_checked_p7))

                    ; #54735: <==negation-removal== 56578 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #74850: <==negation-removal== 37669 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #91330: <==negation-removal== 89872 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p9_p8
        :precondition (and (at_d_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #36042: <==closure== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #46174: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #63381: <==closure== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #63904: origin
                    (checked_p8)

                    ; #87154: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #19523: <==negation-removal== 87154 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #22014: <==unclosure== 68489 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #28239: <==negation-removal== 63904 (pos)
                    (not (not_checked_p8))

                    ; #34146: <==negation-removal== 63381 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #64855: <==negation-removal== 36042 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #68489: <==uncertain_firing== 46174 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))

                    ; #74344: <==negation-removal== 46174 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p9_p9
        :precondition (and (at_d_p9)
                           (succ_p9_p9))
        :effect (and
                    ; #10493: origin
                    (checked_p9)

                    ; #14289: <==closure== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #22401: <==closure== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #34224: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #48133: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #11160: <==unclosure== 41373 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #28124: <==negation-removal== 34224 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #33466: <==negation-removal== 10493 (pos)
                    (not (not_checked_p9))

                    ; #41373: <==uncertain_firing== 34224 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))

                    ; #67912: <==negation-removal== 14289 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #71747: <==negation-removal== 48133 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #81036: <==negation-removal== 22401 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))))

    (:action sensesurvivors_a_p1_s
        :precondition (and (at_a_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #15636: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Ba_not_survivorat_s_p1))

                    ; #29360: <==closure== 32853 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pa_survivorat_s_p1))

                    ; #32853: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Ba_survivorat_s_p1))

                    ; #40756: origin
                    (obs_p1)

                    ; #54121: <==closure== 15636 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pa_not_survivorat_s_p1))

                    ; #18157: <==uncertain_firing== 32853 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #37264: <==negation-removal== 15636 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #38034: <==negation-removal== 29360 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #43171: <==negation-removal== 54121 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #48133: <==negation-removal== 32853 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #81474: <==unclosure== 18157 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #85341: <==negation-removal== 40756 (pos)
                    (not (not_obs_p1))))

    (:action sensesurvivors_a_p2_s
        :precondition (and (at_a_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #17755: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Ba_not_survivorat_s_p2))

                    ; #34765: <==closure== 17755 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pa_not_survivorat_s_p2))

                    ; #35379: origin
                    (obs_p2)

                    ; #57676: <==closure== 80757 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pa_survivorat_s_p2))

                    ; #80757: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Ba_survivorat_s_p2))

                    ; #27995: <==uncertain_firing== 80757 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #49533: <==negation-removal== 57676 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #51886: <==negation-removal== 34765 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #61774: <==negation-removal== 80757 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #72393: <==negation-removal== 35379 (pos)
                    (not (not_obs_p2))

                    ; #83304: <==negation-removal== 17755 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #89210: <==unclosure== 27995 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Ba_not_survivorat_s_p2)))))

    (:action sensesurvivors_a_p3_s
        :precondition (and (at_a_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #54902: <==closure== 72906 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pa_survivorat_s_p3))

                    ; #57706: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Ba_not_survivorat_s_p3))

                    ; #66640: origin
                    (obs_p3)

                    ; #72906: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Ba_survivorat_s_p3))

                    ; #81151: <==closure== 57706 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pa_not_survivorat_s_p3))

                    ; #12589: <==negation-removal== 66640 (pos)
                    (not (not_obs_p3))

                    ; #13887: <==negation-removal== 81151 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #14392: <==negation-removal== 57706 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #16742: <==uncertain_firing== 72906 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #59011: <==negation-removal== 72906 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #74665: <==negation-removal== 54902 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #77481: <==unclosure== 16742 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Ba_not_survivorat_s_p3)))))

    (:action sensesurvivors_a_p4_s
        :precondition (and (at_a_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #32715: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Ba_not_survivorat_s_p4))

                    ; #39305: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Ba_survivorat_s_p4))

                    ; #69682: origin
                    (obs_p4)

                    ; #77380: <==closure== 32715 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pa_not_survivorat_s_p4))

                    ; #92259: <==closure== 39305 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pa_survivorat_s_p4))

                    ; #10489: <==negation-removal== 92259 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #35163: <==negation-removal== 69682 (pos)
                    (not (not_obs_p4))

                    ; #69380: <==uncertain_firing== 39305 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #72755: <==negation-removal== 77380 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Ba_survivorat_s_p4)))

                    ; #75526: <==negation-removal== 39305 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #81823: <==unclosure== 69380 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #86629: <==negation-removal== 32715 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pa_survivorat_s_p4)))))

    (:action sensesurvivors_a_p5_s
        :precondition (and (at_a_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #43824: <==closure== 45816 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pa_survivorat_s_p5))

                    ; #45816: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Ba_survivorat_s_p5))

                    ; #48911: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Ba_not_survivorat_s_p5))

                    ; #54070: origin
                    (obs_p5)

                    ; #77283: <==closure== 48911 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pa_not_survivorat_s_p5))

                    ; #14159: <==negation-removal== 45816 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #18778: <==negation-removal== 54070 (pos)
                    (not (not_obs_p5))

                    ; #19060: <==negation-removal== 77283 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #48596: <==negation-removal== 43824 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #58074: <==negation-removal== 48911 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #60836: <==unclosure== 74163 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #74163: <==uncertain_firing== 45816 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pa_not_survivorat_s_p5)))))

    (:action sensesurvivors_a_p6_s
        :precondition (and (at_a_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #10368: origin
                    (obs_p6)

                    ; #27995: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Ba_not_survivorat_s_p6))

                    ; #65125: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Ba_survivorat_s_p6))

                    ; #69859: <==closure== 65125 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pa_survivorat_s_p6))

                    ; #91211: <==closure== 27995 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pa_not_survivorat_s_p6))

                    ; #21311: <==uncertain_firing== 65125 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #36006: <==negation-removal== 65125 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #47347: <==unclosure== 21311 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #54789: <==negation-removal== 10368 (pos)
                    (not (not_obs_p6))

                    ; #66445: <==negation-removal== 91211 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #66900: <==negation-removal== 69859 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #80995: <==negation-removal== 27995 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pa_survivorat_s_p6)))))

    (:action sensesurvivors_a_p7_s
        :precondition (and (at_a_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #10953: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Ba_survivorat_s_p7))

                    ; #55082: <==closure== 10953 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pa_survivorat_s_p7))

                    ; #68548: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Ba_not_survivorat_s_p7))

                    ; #82823: <==closure== 68548 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pa_not_survivorat_s_p7))

                    ; #89989: origin
                    (obs_p7)

                    ; #10469: <==negation-removal== 82823 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #20222: <==uncertain_firing== 10953 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #35016: <==negation-removal== 55082 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #47551: <==negation-removal== 68548 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pa_survivorat_s_p7)))

                    ; #51611: <==negation-removal== 89989 (pos)
                    (not (not_obs_p7))

                    ; #66816: <==negation-removal== 10953 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #71089: <==unclosure== 20222 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Ba_not_survivorat_s_p7)))))

    (:action sensesurvivors_a_p8_s
        :precondition (and (at_a_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #14848: <==closure== 90638 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pa_not_survivorat_s_p8))

                    ; #30444: <==closure== 84189 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pa_survivorat_s_p8))

                    ; #66091: origin
                    (obs_p8)

                    ; #84189: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Ba_survivorat_s_p8))

                    ; #90638: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Ba_not_survivorat_s_p8))

                    ; #48737: <==negation-removal== 66091 (pos)
                    (not (not_obs_p8))

                    ; #52935: <==uncertain_firing== 84189 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #58017: <==negation-removal== 90638 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #70401: <==negation-removal== 30444 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #75820: <==negation-removal== 84189 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #81959: <==unclosure== 52935 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #83488: <==negation-removal== 14848 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Ba_survivorat_s_p8)))))

    (:action sensesurvivors_a_p9_s
        :precondition (and (at_a_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #16968: <==closure== 76414 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pa_not_survivorat_s_p9))

                    ; #37622: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Ba_survivorat_s_p9))

                    ; #55174: origin
                    (obs_p9)

                    ; #76414: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Ba_not_survivorat_s_p9))

                    ; #85139: <==closure== 37622 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pa_survivorat_s_p9))

                    ; #10990: <==negation-removal== 76414 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #19705: <==uncertain_firing== 37622 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #22765: <==negation-removal== 37622 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #26761: <==negation-removal== 55174 (pos)
                    (not (not_obs_p9))

                    ; #66265: <==negation-removal== 16968 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Ba_survivorat_s_p9)))

                    ; #70317: <==unclosure== 19705 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #83540: <==negation-removal== 85139 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Ba_not_survivorat_s_p9)))))

    (:action sensesurvivors_b_p1_s
        :precondition (and (at_b_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #11886: <==closure== 62427 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pb_survivorat_s_p1))

                    ; #40756: origin
                    (obs_p1)

                    ; #48131: <==closure== 70056 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pb_not_survivorat_s_p1))

                    ; #62427: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bb_survivorat_s_p1))

                    ; #70056: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bb_not_survivorat_s_p1))

                    ; #10047: <==negation-removal== 11886 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #16649: <==negation-removal== 70056 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #40117: <==uncertain_firing== 62427 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #53040: <==negation-removal== 62427 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #76181: <==unclosure== 40117 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #85341: <==negation-removal== 40756 (pos)
                    (not (not_obs_p1))

                    ; #90782: <==negation-removal== 48131 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bb_survivorat_s_p1)))))

    (:action sensesurvivors_b_p2_s
        :precondition (and (at_b_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #11271: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bb_not_survivorat_s_p2))

                    ; #20071: <==closure== 56142 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pb_survivorat_s_p2))

                    ; #35379: origin
                    (obs_p2)

                    ; #56142: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bb_survivorat_s_p2))

                    ; #58056: <==closure== 11271 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pb_not_survivorat_s_p2))

                    ; #10315: <==negation-removal== 56142 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #30400: <==unclosure== 52214 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #41626: <==negation-removal== 20071 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #52214: <==uncertain_firing== 56142 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #66302: <==negation-removal== 58056 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bb_survivorat_s_p2)))

                    ; #72393: <==negation-removal== 35379 (pos)
                    (not (not_obs_p2))

                    ; #91536: <==negation-removal== 11271 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pb_survivorat_s_p2)))))

    (:action sensesurvivors_b_p3_s
        :precondition (and (at_b_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #11758: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bb_not_survivorat_s_p3))

                    ; #15132: <==closure== 19285 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pb_survivorat_s_p3))

                    ; #19285: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bb_survivorat_s_p3))

                    ; #43951: <==closure== 11758 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pb_not_survivorat_s_p3))

                    ; #66640: origin
                    (obs_p3)

                    ; #12589: <==negation-removal== 66640 (pos)
                    (not (not_obs_p3))

                    ; #16719: <==negation-removal== 19285 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #24567: <==negation-removal== 11758 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #36662: <==negation-removal== 43951 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bb_survivorat_s_p3)))

                    ; #62777: <==uncertain_firing== 19285 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #89143: <==negation-removal== 15132 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #90442: <==unclosure== 62777 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bb_not_survivorat_s_p3)))))

    (:action sensesurvivors_b_p4_s
        :precondition (and (at_b_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #31548: <==closure== 69362 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pb_survivorat_s_p4))

                    ; #69362: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bb_survivorat_s_p4))

                    ; #69682: origin
                    (obs_p4)

                    ; #71698: <==closure== 92093 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pb_not_survivorat_s_p4))

                    ; #92093: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bb_not_survivorat_s_p4))

                    ; #11825: <==unclosure== 78071 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #17071: <==negation-removal== 71698 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #35163: <==negation-removal== 69682 (pos)
                    (not (not_obs_p4))

                    ; #37110: <==negation-removal== 92093 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #76126: <==negation-removal== 31548 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #78071: <==uncertain_firing== 69362 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #80465: <==negation-removal== 69362 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pb_not_survivorat_s_p4)))))

    (:action sensesurvivors_b_p5_s
        :precondition (and (at_b_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #54070: origin
                    (obs_p5)

                    ; #64285: <==closure== 76339 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pb_survivorat_s_p5))

                    ; #69997: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bb_not_survivorat_s_p5))

                    ; #71155: <==closure== 69997 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pb_not_survivorat_s_p5))

                    ; #76339: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bb_survivorat_s_p5))

                    ; #18778: <==negation-removal== 54070 (pos)
                    (not (not_obs_p5))

                    ; #25307: <==unclosure== 27802 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #27802: <==uncertain_firing== 76339 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #42695: <==negation-removal== 71155 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #44735: <==negation-removal== 76339 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #65679: <==negation-removal== 64285 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #66562: <==negation-removal== 69997 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pb_survivorat_s_p5)))))

    (:action sensesurvivors_b_p6_s
        :precondition (and (at_b_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #10368: origin
                    (obs_p6)

                    ; #33158: <==closure== 40476 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pb_survivorat_s_p6))

                    ; #34785: <==closure== 67260 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pb_not_survivorat_s_p6))

                    ; #40476: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bb_survivorat_s_p6))

                    ; #67260: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bb_not_survivorat_s_p6))

                    ; #10045: <==negation-removal== 67260 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #23930: <==uncertain_firing== 40476 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #25497: <==negation-removal== 40476 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #34965: <==negation-removal== 33158 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #54789: <==negation-removal== 10368 (pos)
                    (not (not_obs_p6))

                    ; #60766: <==unclosure== 23930 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #74210: <==negation-removal== 34785 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bb_survivorat_s_p6)))))

    (:action sensesurvivors_b_p7_s
        :precondition (and (at_b_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #15253: <==closure== 33373 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pb_survivorat_s_p7))

                    ; #33373: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bb_survivorat_s_p7))

                    ; #58375: <==closure== 86561 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pb_not_survivorat_s_p7))

                    ; #86561: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bb_not_survivorat_s_p7))

                    ; #89989: origin
                    (obs_p7)

                    ; #42243: <==negation-removal== 58375 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #47704: <==negation-removal== 86561 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #51611: <==negation-removal== 89989 (pos)
                    (not (not_obs_p7))

                    ; #58592: <==uncertain_firing== 33373 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #69951: <==negation-removal== 33373 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #72214: <==unclosure== 58592 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #77884: <==negation-removal== 15253 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bb_not_survivorat_s_p7)))))

    (:action sensesurvivors_b_p8_s
        :precondition (and (at_b_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #30105: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bb_survivorat_s_p8))

                    ; #33877: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bb_not_survivorat_s_p8))

                    ; #35026: <==closure== 30105 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pb_survivorat_s_p8))

                    ; #43811: <==closure== 33877 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pb_not_survivorat_s_p8))

                    ; #66091: origin
                    (obs_p8)

                    ; #47613: <==negation-removal== 33877 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #48737: <==negation-removal== 66091 (pos)
                    (not (not_obs_p8))

                    ; #48847: <==negation-removal== 30105 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #57533: <==unclosure== 79792 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #58869: <==negation-removal== 35026 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #67589: <==negation-removal== 43811 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #79792: <==uncertain_firing== 30105 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pb_not_survivorat_s_p8)))))

    (:action sensesurvivors_b_p9_s
        :precondition (and (at_b_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #36631: <==closure== 91892 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pb_survivorat_s_p9))

                    ; #55174: origin
                    (obs_p9)

                    ; #66435: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bb_not_survivorat_s_p9))

                    ; #76201: <==closure== 66435 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pb_not_survivorat_s_p9))

                    ; #91892: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bb_survivorat_s_p9))

                    ; #21119: <==negation-removal== 66435 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pb_survivorat_s_p9)))

                    ; #26761: <==negation-removal== 55174 (pos)
                    (not (not_obs_p9))

                    ; #45767: <==unclosure== 49804 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #47882: <==negation-removal== 76201 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #49804: <==uncertain_firing== 91892 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #61130: <==negation-removal== 91892 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #77422: <==negation-removal== 36631 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bb_not_survivorat_s_p9)))))

    (:action sensesurvivors_c_p1_s
        :precondition (and (at_c_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #19136: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bc_not_survivorat_s_p1))

                    ; #33896: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bc_survivorat_s_p1))

                    ; #40756: origin
                    (obs_p1)

                    ; #59391: <==closure== 19136 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pc_not_survivorat_s_p1))

                    ; #68858: <==closure== 33896 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pc_survivorat_s_p1))

                    ; #11954: <==uncertain_firing== 33896 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #23164: <==negation-removal== 68858 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #34994: <==negation-removal== 33896 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #46780: <==negation-removal== 59391 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #52490: <==negation-removal== 19136 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #53850: <==unclosure== 11954 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #85341: <==negation-removal== 40756 (pos)
                    (not (not_obs_p1))))

    (:action sensesurvivors_c_p2_s
        :precondition (and (at_c_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #12004: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bc_not_survivorat_s_p2))

                    ; #23898: <==closure== 37723 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pc_survivorat_s_p2))

                    ; #26891: <==closure== 12004 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pc_not_survivorat_s_p2))

                    ; #35379: origin
                    (obs_p2)

                    ; #37723: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bc_survivorat_s_p2))

                    ; #14978: <==negation-removal== 12004 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #15594: <==negation-removal== 37723 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #37189: <==negation-removal== 26891 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #38848: <==unclosure== 69953 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #48248: <==negation-removal== 23898 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #69953: <==uncertain_firing== 37723 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #72393: <==negation-removal== 35379 (pos)
                    (not (not_obs_p2))))

    (:action sensesurvivors_c_p3_s
        :precondition (and (at_c_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #42215: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bc_not_survivorat_s_p3))

                    ; #54289: <==closure== 42215 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pc_not_survivorat_s_p3))

                    ; #66022: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bc_survivorat_s_p3))

                    ; #66640: origin
                    (obs_p3)

                    ; #98447: <==closure== 66022 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pc_survivorat_s_p3))

                    ; #12589: <==negation-removal== 66640 (pos)
                    (not (not_obs_p3))

                    ; #14759: <==negation-removal== 66022 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #29388: <==uncertain_firing== 66022 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #31772: <==negation-removal== 42215 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pc_survivorat_s_p3)))

                    ; #52071: <==negation-removal== 54289 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #68135: <==negation-removal== 98447 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #82269: <==unclosure== 29388 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bc_not_survivorat_s_p3)))))

    (:action sensesurvivors_c_p4_s
        :precondition (and (at_c_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #16684: <==closure== 27381 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pc_survivorat_s_p4))

                    ; #27381: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bc_survivorat_s_p4))

                    ; #41173: <==closure== 45190 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pc_not_survivorat_s_p4))

                    ; #45190: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bc_not_survivorat_s_p4))

                    ; #69682: origin
                    (obs_p4)

                    ; #21855: <==negation-removal== 27381 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #24650: <==unclosure== 31376 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #26925: <==negation-removal== 41173 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #30688: <==negation-removal== 45190 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pc_survivorat_s_p4)))

                    ; #31376: <==uncertain_firing== 27381 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #35163: <==negation-removal== 69682 (pos)
                    (not (not_obs_p4))

                    ; #71216: <==negation-removal== 16684 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bc_not_survivorat_s_p4)))))

    (:action sensesurvivors_c_p5_s
        :precondition (and (at_c_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #23639: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bc_survivorat_s_p5))

                    ; #48844: <==closure== 68082 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pc_not_survivorat_s_p5))

                    ; #53350: <==closure== 23639 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pc_survivorat_s_p5))

                    ; #54070: origin
                    (obs_p5)

                    ; #68082: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bc_not_survivorat_s_p5))

                    ; #10106: <==negation-removal== 23639 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #18778: <==negation-removal== 54070 (pos)
                    (not (not_obs_p5))

                    ; #29538: <==negation-removal== 68082 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #39087: <==negation-removal== 53350 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #48776: <==negation-removal== 48844 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #51092: <==uncertain_firing== 23639 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #61913: <==unclosure== 51092 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bc_not_survivorat_s_p5)))))

    (:action sensesurvivors_c_p6_s
        :precondition (and (at_c_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #10368: origin
                    (obs_p6)

                    ; #17723: <==closure== 21747 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pc_not_survivorat_s_p6))

                    ; #21747: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bc_not_survivorat_s_p6))

                    ; #56569: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bc_survivorat_s_p6))

                    ; #64880: <==closure== 56569 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pc_survivorat_s_p6))

                    ; #22816: <==negation-removal== 17723 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #23222: <==negation-removal== 21747 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #45427: <==negation-removal== 56569 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #47277: <==unclosure== 77221 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #47988: <==negation-removal== 64880 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #54789: <==negation-removal== 10368 (pos)
                    (not (not_obs_p6))

                    ; #77221: <==uncertain_firing== 56569 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pc_not_survivorat_s_p6)))))

    (:action sensesurvivors_c_p7_s
        :precondition (and (at_c_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #12376: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bc_not_survivorat_s_p7))

                    ; #27905: <==closure== 12376 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pc_not_survivorat_s_p7))

                    ; #29641: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bc_survivorat_s_p7))

                    ; #33285: <==closure== 29641 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pc_survivorat_s_p7))

                    ; #89989: origin
                    (obs_p7)

                    ; #30510: <==negation-removal== 12376 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #40035: <==negation-removal== 29641 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #48962: <==unclosure== 57619 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #51611: <==negation-removal== 89989 (pos)
                    (not (not_obs_p7))

                    ; #56375: <==negation-removal== 27905 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bc_survivorat_s_p7)))

                    ; #57619: <==uncertain_firing== 29641 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #71896: <==negation-removal== 33285 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bc_not_survivorat_s_p7)))))

    (:action sensesurvivors_c_p8_s
        :precondition (and (at_c_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #14716: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bc_survivorat_s_p8))

                    ; #24615: <==closure== 86640 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pc_not_survivorat_s_p8))

                    ; #66091: origin
                    (obs_p8)

                    ; #67053: <==closure== 14716 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pc_survivorat_s_p8))

                    ; #86640: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bc_not_survivorat_s_p8))

                    ; #10830: <==unclosure== 28217 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #28217: <==uncertain_firing== 14716 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #31927: <==negation-removal== 86640 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #41272: <==negation-removal== 14716 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #48737: <==negation-removal== 66091 (pos)
                    (not (not_obs_p8))

                    ; #53212: <==negation-removal== 67053 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #74859: <==negation-removal== 24615 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bc_survivorat_s_p8)))))

    (:action sensesurvivors_c_p9_s
        :precondition (and (at_c_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #36676: <==closure== 66962 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pc_survivorat_s_p9))

                    ; #38870: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bc_not_survivorat_s_p9))

                    ; #41240: <==closure== 38870 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pc_not_survivorat_s_p9))

                    ; #55174: origin
                    (obs_p9)

                    ; #66962: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bc_survivorat_s_p9))

                    ; #26761: <==negation-removal== 55174 (pos)
                    (not (not_obs_p9))

                    ; #28860: <==negation-removal== 66962 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #32323: <==negation-removal== 41240 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bc_survivorat_s_p9)))

                    ; #32371: <==negation-removal== 36676 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #36591: <==unclosure== 67978 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #61341: <==negation-removal== 38870 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #67978: <==uncertain_firing== 66962 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pc_not_survivorat_s_p9)))))

    (:action sensesurvivors_d_p1_s
        :precondition (and (at_d_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #19152: <==closure== 55402 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pd_not_survivorat_s_p1))

                    ; #25277: <==closure== 54693 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pd_survivorat_s_p1))

                    ; #40756: origin
                    (obs_p1)

                    ; #54693: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bd_survivorat_s_p1))

                    ; #55402: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bd_not_survivorat_s_p1))

                    ; #38530: <==negation-removal== 55402 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #41678: <==negation-removal== 19152 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #42835: <==uncertain_firing== 54693 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #66025: <==negation-removal== 25277 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #70275: <==unclosure== 42835 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #75908: <==negation-removal== 54693 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #85341: <==negation-removal== 40756 (pos)
                    (not (not_obs_p1))))

    (:action sensesurvivors_d_p2_s
        :precondition (and (at_d_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #25872: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bd_not_survivorat_s_p2))

                    ; #35379: origin
                    (obs_p2)

                    ; #73410: <==closure== 80617 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pd_survivorat_s_p2))

                    ; #76773: <==closure== 25872 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pd_not_survivorat_s_p2))

                    ; #80617: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bd_survivorat_s_p2))

                    ; #36730: <==negation-removal== 25872 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #37910: <==uncertain_firing== 80617 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #58791: <==negation-removal== 76773 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bd_survivorat_s_p2)))

                    ; #72393: <==negation-removal== 35379 (pos)
                    (not (not_obs_p2))

                    ; #72723: <==unclosure== 37910 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #86892: <==negation-removal== 73410 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #87813: <==negation-removal== 80617 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pd_not_survivorat_s_p2)))))

    (:action sensesurvivors_d_p3_s
        :precondition (and (at_d_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #13514: <==closure== 41900 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pd_not_survivorat_s_p3))

                    ; #22353: <==closure== 60408 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pd_survivorat_s_p3))

                    ; #41900: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bd_not_survivorat_s_p3))

                    ; #60408: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bd_survivorat_s_p3))

                    ; #66640: origin
                    (obs_p3)

                    ; #12589: <==negation-removal== 66640 (pos)
                    (not (not_obs_p3))

                    ; #16414: <==unclosure== 78397 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #48725: <==negation-removal== 13514 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bd_survivorat_s_p3)))

                    ; #50770: <==negation-removal== 22353 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #60469: <==negation-removal== 60408 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #78397: <==uncertain_firing== 60408 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #91410: <==negation-removal== 41900 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pd_survivorat_s_p3)))))

    (:action sensesurvivors_d_p4_s
        :precondition (and (at_d_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #35251: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bd_survivorat_s_p4))

                    ; #55244: <==closure== 35251 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pd_survivorat_s_p4))

                    ; #69682: origin
                    (obs_p4)

                    ; #75237: <==closure== 91302 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pd_not_survivorat_s_p4))

                    ; #91302: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bd_not_survivorat_s_p4))

                    ; #30488: <==negation-removal== 91302 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pd_survivorat_s_p4)))

                    ; #35163: <==negation-removal== 69682 (pos)
                    (not (not_obs_p4))

                    ; #47888: <==negation-removal== 75237 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #49809: <==uncertain_firing== 35251 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #65764: <==unclosure== 49809 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #72768: <==negation-removal== 35251 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #88016: <==negation-removal== 55244 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bd_not_survivorat_s_p4)))))

    (:action sensesurvivors_d_p5_s
        :precondition (and (at_d_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #15407: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bd_survivorat_s_p5))

                    ; #16829: <==closure== 19545 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pd_not_survivorat_s_p5))

                    ; #19545: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bd_not_survivorat_s_p5))

                    ; #54070: origin
                    (obs_p5)

                    ; #92101: <==closure== 15407 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pd_survivorat_s_p5))

                    ; #13234: <==uncertain_firing== 15407 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #13981: <==negation-removal== 15407 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #18778: <==negation-removal== 54070 (pos)
                    (not (not_obs_p5))

                    ; #46582: <==negation-removal== 16829 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #65602: <==negation-removal== 19545 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #76158: <==negation-removal== 92101 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #78441: <==unclosure== 13234 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bd_not_survivorat_s_p5)))))

    (:action sensesurvivors_d_p6_s
        :precondition (and (at_d_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #10368: origin
                    (obs_p6)

                    ; #34328: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bd_survivorat_s_p6))

                    ; #61565: <==closure== 34328 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pd_survivorat_s_p6))

                    ; #86430: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bd_not_survivorat_s_p6))

                    ; #89534: <==closure== 86430 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pd_not_survivorat_s_p6))

                    ; #30726: <==unclosure== 58776 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #32722: <==negation-removal== 61565 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #49279: <==negation-removal== 34328 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #54789: <==negation-removal== 10368 (pos)
                    (not (not_obs_p6))

                    ; #58776: <==uncertain_firing== 34328 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #68750: <==negation-removal== 89534 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #88675: <==negation-removal== 86430 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pd_survivorat_s_p6)))))

    (:action sensesurvivors_d_p7_s
        :precondition (and (at_d_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #25703: <==closure== 27919 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pd_not_survivorat_s_p7))

                    ; #27919: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bd_not_survivorat_s_p7))

                    ; #30543: <==closure== 32784 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pd_survivorat_s_p7))

                    ; #32784: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bd_survivorat_s_p7))

                    ; #89989: origin
                    (obs_p7)

                    ; #19384: <==uncertain_firing== 32784 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #36762: <==negation-removal== 27919 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #51611: <==negation-removal== 89989 (pos)
                    (not (not_obs_p7))

                    ; #52803: <==unclosure== 19384 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #65888: <==negation-removal== 30543 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #80425: <==negation-removal== 32784 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #87852: <==negation-removal== 25703 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bd_survivorat_s_p7)))))

    (:action sensesurvivors_d_p8_s
        :precondition (and (at_d_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #35589: <==closure== 65494 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pd_not_survivorat_s_p8))

                    ; #65494: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bd_not_survivorat_s_p8))

                    ; #66091: origin
                    (obs_p8)

                    ; #76858: <==closure== 80064 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pd_survivorat_s_p8))

                    ; #80064: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bd_survivorat_s_p8))

                    ; #20350: <==negation-removal== 80064 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #22749: <==negation-removal== 35589 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #45649: <==negation-removal== 76858 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #48737: <==negation-removal== 66091 (pos)
                    (not (not_obs_p8))

                    ; #63704: <==unclosure== 87717 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #68264: <==negation-removal== 65494 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #87717: <==uncertain_firing== 80064 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pd_not_survivorat_s_p8)))))

    (:action sensesurvivors_d_p9_s
        :precondition (and (at_d_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #10052: <==closure== 59538 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pd_not_survivorat_s_p9))

                    ; #15808: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bd_survivorat_s_p9))

                    ; #33947: <==closure== 15808 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pd_survivorat_s_p9))

                    ; #55174: origin
                    (obs_p9)

                    ; #59538: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bd_not_survivorat_s_p9))

                    ; #24303: <==uncertain_firing== 15808 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #25877: <==negation-removal== 15808 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #26761: <==negation-removal== 55174 (pos)
                    (not (not_obs_p9))

                    ; #54874: <==negation-removal== 33947 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #62813: <==negation-removal== 10052 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #74266: <==negation-removal== 59538 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #90307: <==unclosure== 24303 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bd_not_survivorat_s_p9)))))

)