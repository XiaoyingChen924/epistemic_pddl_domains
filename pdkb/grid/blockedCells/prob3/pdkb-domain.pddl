(define (domain grid)

    (:requirements :strips :conditional-effects)

    (:predicates
        (not_--)
        (not_at_a_p1)
        (not_at_a_p2)
        (not_at_a_p3)
        (not_at_a_p4)
        (not_at_a_p5)
        (not_at_a_p6)
        (not_at_a_p7)
        (not_at_a_p8)
        (not_at_a_p9)
        (not_at_b_p1)
        (not_at_b_p2)
        (not_at_b_p3)
        (not_at_b_p4)
        (not_at_b_p5)
        (not_at_b_p6)
        (not_at_b_p7)
        (not_at_b_p8)
        (not_at_b_p9)
        (not_at_c_p1)
        (not_at_c_p2)
        (not_at_c_p3)
        (not_at_c_p4)
        (not_at_c_p5)
        (not_at_c_p6)
        (not_at_c_p7)
        (not_at_c_p8)
        (not_at_c_p9)
        (not_at_d_p1)
        (not_at_d_p2)
        (not_at_d_p3)
        (not_at_d_p4)
        (not_at_d_p5)
        (not_at_d_p6)
        (not_at_d_p7)
        (not_at_d_p8)
        (not_at_d_p9)
        (not_blocked_p1)
        (not_blocked_p2)
        (not_blocked_p3)
        (not_blocked_p4)
        (not_blocked_p5)
        (not_blocked_p6)
        (not_blocked_p7)
        (not_blocked_p8)
        (not_blocked_p9)
        (not_checked_p1)
        (not_checked_p2)
        (not_checked_p3)
        (not_checked_p4)
        (not_checked_p5)
        (not_checked_p6)
        (not_checked_p7)
        (not_checked_p8)
        (not_checked_p9)
        (not_communicate)
        (not_communicating_a_a)
        (not_communicating_a_b)
        (not_communicating_a_c)
        (not_communicating_a_d)
        (not_communicating_b_a)
        (not_communicating_b_b)
        (not_communicating_b_c)
        (not_communicating_b_d)
        (not_communicating_c_a)
        (not_communicating_c_b)
        (not_communicating_c_c)
        (not_communicating_c_d)
        (not_communicating_d_a)
        (not_communicating_d_b)
        (not_communicating_d_c)
        (not_communicating_d_d)
        (not_force)
        (not_hiddenblockedcell_p1)
        (not_hiddenblockedcell_p2)
        (not_hiddenblockedcell_p3)
        (not_hiddenblockedcell_p4)
        (not_hiddenblockedcell_p5)
        (not_hiddenblockedcell_p6)
        (not_hiddenblockedcell_p7)
        (not_hiddenblockedcell_p8)
        (not_hiddenblockedcell_p9)
        (not_hiddensurvivorat_s_p1)
        (not_hiddensurvivorat_s_p2)
        (not_hiddensurvivorat_s_p3)
        (not_hiddensurvivorat_s_p4)
        (not_hiddensurvivorat_s_p5)
        (not_hiddensurvivorat_s_p6)
        (not_hiddensurvivorat_s_p7)
        (not_hiddensurvivorat_s_p8)
        (not_hiddensurvivorat_s_p9)
        (not_msg_p1)
        (not_msg_p2)
        (not_msg_p3)
        (not_msg_p4)
        (not_msg_p5)
        (not_msg_p6)
        (not_msg_p7)
        (not_msg_p8)
        (not_msg_p9)
        (not_obs_p1)
        (not_obs_p2)
        (not_obs_p3)
        (not_obs_p4)
        (not_obs_p5)
        (not_obs_p6)
        (not_obs_p7)
        (not_obs_p8)
        (not_obs_p9)
        (not_obss_p1)
        (not_obss_p2)
        (not_obss_p3)
        (not_obss_p4)
        (not_obss_p5)
        (not_obss_p6)
        (not_obss_p7)
        (not_obss_p8)
        (not_obss_p9)
        (not_planner)
        (not_succ_p1_p1)
        (not_succ_p1_p2)
        (not_succ_p1_p3)
        (not_succ_p1_p4)
        (not_succ_p1_p5)
        (not_succ_p1_p6)
        (not_succ_p1_p7)
        (not_succ_p1_p8)
        (not_succ_p1_p9)
        (not_succ_p2_p1)
        (not_succ_p2_p2)
        (not_succ_p2_p3)
        (not_succ_p2_p4)
        (not_succ_p2_p5)
        (not_succ_p2_p6)
        (not_succ_p2_p7)
        (not_succ_p2_p8)
        (not_succ_p2_p9)
        (not_succ_p3_p1)
        (not_succ_p3_p2)
        (not_succ_p3_p3)
        (not_succ_p3_p4)
        (not_succ_p3_p5)
        (not_succ_p3_p6)
        (not_succ_p3_p7)
        (not_succ_p3_p8)
        (not_succ_p3_p9)
        (not_succ_p4_p1)
        (not_succ_p4_p2)
        (not_succ_p4_p3)
        (not_succ_p4_p4)
        (not_succ_p4_p5)
        (not_succ_p4_p6)
        (not_succ_p4_p7)
        (not_succ_p4_p8)
        (not_succ_p4_p9)
        (not_succ_p5_p1)
        (not_succ_p5_p2)
        (not_succ_p5_p3)
        (not_succ_p5_p4)
        (not_succ_p5_p5)
        (not_succ_p5_p6)
        (not_succ_p5_p7)
        (not_succ_p5_p8)
        (not_succ_p5_p9)
        (not_succ_p6_p1)
        (not_succ_p6_p2)
        (not_succ_p6_p3)
        (not_succ_p6_p4)
        (not_succ_p6_p5)
        (not_succ_p6_p6)
        (not_succ_p6_p7)
        (not_succ_p6_p8)
        (not_succ_p6_p9)
        (not_succ_p7_p1)
        (not_succ_p7_p2)
        (not_succ_p7_p3)
        (not_succ_p7_p4)
        (not_succ_p7_p5)
        (not_succ_p7_p6)
        (not_succ_p7_p7)
        (not_succ_p7_p8)
        (not_succ_p7_p9)
        (not_succ_p8_p1)
        (not_succ_p8_p2)
        (not_succ_p8_p3)
        (not_succ_p8_p4)
        (not_succ_p8_p5)
        (not_succ_p8_p6)
        (not_succ_p8_p7)
        (not_succ_p8_p8)
        (not_succ_p8_p9)
        (not_succ_p9_p1)
        (not_succ_p9_p2)
        (not_succ_p9_p3)
        (not_succ_p9_p4)
        (not_succ_p9_p5)
        (not_succ_p9_p6)
        (not_succ_p9_p7)
        (not_succ_p9_p8)
        (not_succ_p9_p9)
        (not_survivorat_s_p1)
        (not_survivorat_s_p2)
        (not_survivorat_s_p3)
        (not_survivorat_s_p4)
        (not_survivorat_s_p5)
        (not_survivorat_s_p6)
        (not_survivorat_s_p7)
        (not_survivorat_s_p8)
        (not_survivorat_s_p9)
        (not_to)
        (--)
        (Ba_not_--)
        (Ba_not_blocked_p1)
        (Ba_not_blocked_p2)
        (Ba_not_blocked_p3)
        (Ba_not_blocked_p4)
        (Ba_not_blocked_p5)
        (Ba_not_blocked_p6)
        (Ba_not_blocked_p7)
        (Ba_not_blocked_p8)
        (Ba_not_blocked_p9)
        (Ba_not_communicate)
        (Ba_not_communicating_a_a)
        (Ba_not_communicating_a_b)
        (Ba_not_communicating_a_c)
        (Ba_not_communicating_a_d)
        (Ba_not_communicating_b_a)
        (Ba_not_communicating_b_b)
        (Ba_not_communicating_b_c)
        (Ba_not_communicating_b_d)
        (Ba_not_communicating_c_a)
        (Ba_not_communicating_c_b)
        (Ba_not_communicating_c_c)
        (Ba_not_communicating_c_d)
        (Ba_not_communicating_d_a)
        (Ba_not_communicating_d_b)
        (Ba_not_communicating_d_c)
        (Ba_not_communicating_d_d)
        (Ba_not_force)
        (Ba_not_hiddenblockedcell_p1)
        (Ba_not_hiddenblockedcell_p2)
        (Ba_not_hiddenblockedcell_p3)
        (Ba_not_hiddenblockedcell_p4)
        (Ba_not_hiddenblockedcell_p5)
        (Ba_not_hiddenblockedcell_p6)
        (Ba_not_hiddenblockedcell_p7)
        (Ba_not_hiddenblockedcell_p8)
        (Ba_not_hiddenblockedcell_p9)
        (Ba_not_hiddensurvivorat_s_p1)
        (Ba_not_hiddensurvivorat_s_p2)
        (Ba_not_hiddensurvivorat_s_p3)
        (Ba_not_hiddensurvivorat_s_p4)
        (Ba_not_hiddensurvivorat_s_p5)
        (Ba_not_hiddensurvivorat_s_p6)
        (Ba_not_hiddensurvivorat_s_p7)
        (Ba_not_hiddensurvivorat_s_p8)
        (Ba_not_hiddensurvivorat_s_p9)
        (Ba_not_msg_p1)
        (Ba_not_msg_p2)
        (Ba_not_msg_p3)
        (Ba_not_msg_p4)
        (Ba_not_msg_p5)
        (Ba_not_msg_p6)
        (Ba_not_msg_p7)
        (Ba_not_msg_p8)
        (Ba_not_msg_p9)
        (Ba_not_obss_p1)
        (Ba_not_obss_p2)
        (Ba_not_obss_p3)
        (Ba_not_obss_p4)
        (Ba_not_obss_p5)
        (Ba_not_obss_p6)
        (Ba_not_obss_p7)
        (Ba_not_obss_p8)
        (Ba_not_obss_p9)
        (Ba_not_planner)
        (Ba_not_survivorat_s_p1)
        (Ba_not_survivorat_s_p2)
        (Ba_not_survivorat_s_p3)
        (Ba_not_survivorat_s_p4)
        (Ba_not_survivorat_s_p5)
        (Ba_not_survivorat_s_p6)
        (Ba_not_survivorat_s_p7)
        (Ba_not_survivorat_s_p8)
        (Ba_not_survivorat_s_p9)
        (Ba_not_to)
        (Ba_--)
        (Ba_blocked_p1)
        (Ba_blocked_p2)
        (Ba_blocked_p3)
        (Ba_blocked_p4)
        (Ba_blocked_p5)
        (Ba_blocked_p6)
        (Ba_blocked_p7)
        (Ba_blocked_p8)
        (Ba_blocked_p9)
        (Ba_communicate)
        (Ba_communicating_a_a)
        (Ba_communicating_a_b)
        (Ba_communicating_a_c)
        (Ba_communicating_a_d)
        (Ba_communicating_b_a)
        (Ba_communicating_b_b)
        (Ba_communicating_b_c)
        (Ba_communicating_b_d)
        (Ba_communicating_c_a)
        (Ba_communicating_c_b)
        (Ba_communicating_c_c)
        (Ba_communicating_c_d)
        (Ba_communicating_d_a)
        (Ba_communicating_d_b)
        (Ba_communicating_d_c)
        (Ba_communicating_d_d)
        (Ba_force)
        (Ba_hiddenblockedcell_p1)
        (Ba_hiddenblockedcell_p2)
        (Ba_hiddenblockedcell_p3)
        (Ba_hiddenblockedcell_p4)
        (Ba_hiddenblockedcell_p5)
        (Ba_hiddenblockedcell_p6)
        (Ba_hiddenblockedcell_p7)
        (Ba_hiddenblockedcell_p8)
        (Ba_hiddenblockedcell_p9)
        (Ba_hiddensurvivorat_s_p1)
        (Ba_hiddensurvivorat_s_p2)
        (Ba_hiddensurvivorat_s_p3)
        (Ba_hiddensurvivorat_s_p4)
        (Ba_hiddensurvivorat_s_p5)
        (Ba_hiddensurvivorat_s_p6)
        (Ba_hiddensurvivorat_s_p7)
        (Ba_hiddensurvivorat_s_p8)
        (Ba_hiddensurvivorat_s_p9)
        (Ba_msg_p1)
        (Ba_msg_p2)
        (Ba_msg_p3)
        (Ba_msg_p4)
        (Ba_msg_p5)
        (Ba_msg_p6)
        (Ba_msg_p7)
        (Ba_msg_p8)
        (Ba_msg_p9)
        (Ba_obss_p1)
        (Ba_obss_p2)
        (Ba_obss_p3)
        (Ba_obss_p4)
        (Ba_obss_p5)
        (Ba_obss_p6)
        (Ba_obss_p7)
        (Ba_obss_p8)
        (Ba_obss_p9)
        (Ba_planner)
        (Ba_survivorat_s_p1)
        (Ba_survivorat_s_p2)
        (Ba_survivorat_s_p3)
        (Ba_survivorat_s_p4)
        (Ba_survivorat_s_p5)
        (Ba_survivorat_s_p6)
        (Ba_survivorat_s_p7)
        (Ba_survivorat_s_p8)
        (Ba_survivorat_s_p9)
        (Ba_to)
        (Bb_not_--)
        (Bb_not_blocked_p1)
        (Bb_not_blocked_p2)
        (Bb_not_blocked_p3)
        (Bb_not_blocked_p4)
        (Bb_not_blocked_p5)
        (Bb_not_blocked_p6)
        (Bb_not_blocked_p7)
        (Bb_not_blocked_p8)
        (Bb_not_blocked_p9)
        (Bb_not_communicate)
        (Bb_not_communicating_a_a)
        (Bb_not_communicating_a_b)
        (Bb_not_communicating_a_c)
        (Bb_not_communicating_a_d)
        (Bb_not_communicating_b_a)
        (Bb_not_communicating_b_b)
        (Bb_not_communicating_b_c)
        (Bb_not_communicating_b_d)
        (Bb_not_communicating_c_a)
        (Bb_not_communicating_c_b)
        (Bb_not_communicating_c_c)
        (Bb_not_communicating_c_d)
        (Bb_not_communicating_d_a)
        (Bb_not_communicating_d_b)
        (Bb_not_communicating_d_c)
        (Bb_not_communicating_d_d)
        (Bb_not_force)
        (Bb_not_hiddenblockedcell_p1)
        (Bb_not_hiddenblockedcell_p2)
        (Bb_not_hiddenblockedcell_p3)
        (Bb_not_hiddenblockedcell_p4)
        (Bb_not_hiddenblockedcell_p5)
        (Bb_not_hiddenblockedcell_p6)
        (Bb_not_hiddenblockedcell_p7)
        (Bb_not_hiddenblockedcell_p8)
        (Bb_not_hiddenblockedcell_p9)
        (Bb_not_hiddensurvivorat_s_p1)
        (Bb_not_hiddensurvivorat_s_p2)
        (Bb_not_hiddensurvivorat_s_p3)
        (Bb_not_hiddensurvivorat_s_p4)
        (Bb_not_hiddensurvivorat_s_p5)
        (Bb_not_hiddensurvivorat_s_p6)
        (Bb_not_hiddensurvivorat_s_p7)
        (Bb_not_hiddensurvivorat_s_p8)
        (Bb_not_hiddensurvivorat_s_p9)
        (Bb_not_msg_p1)
        (Bb_not_msg_p2)
        (Bb_not_msg_p3)
        (Bb_not_msg_p4)
        (Bb_not_msg_p5)
        (Bb_not_msg_p6)
        (Bb_not_msg_p7)
        (Bb_not_msg_p8)
        (Bb_not_msg_p9)
        (Bb_not_obss_p1)
        (Bb_not_obss_p2)
        (Bb_not_obss_p3)
        (Bb_not_obss_p4)
        (Bb_not_obss_p5)
        (Bb_not_obss_p6)
        (Bb_not_obss_p7)
        (Bb_not_obss_p8)
        (Bb_not_obss_p9)
        (Bb_not_planner)
        (Bb_not_survivorat_s_p1)
        (Bb_not_survivorat_s_p2)
        (Bb_not_survivorat_s_p3)
        (Bb_not_survivorat_s_p4)
        (Bb_not_survivorat_s_p5)
        (Bb_not_survivorat_s_p6)
        (Bb_not_survivorat_s_p7)
        (Bb_not_survivorat_s_p8)
        (Bb_not_survivorat_s_p9)
        (Bb_not_to)
        (Bb_--)
        (Bb_blocked_p1)
        (Bb_blocked_p2)
        (Bb_blocked_p3)
        (Bb_blocked_p4)
        (Bb_blocked_p5)
        (Bb_blocked_p6)
        (Bb_blocked_p7)
        (Bb_blocked_p8)
        (Bb_blocked_p9)
        (Bb_communicate)
        (Bb_communicating_a_a)
        (Bb_communicating_a_b)
        (Bb_communicating_a_c)
        (Bb_communicating_a_d)
        (Bb_communicating_b_a)
        (Bb_communicating_b_b)
        (Bb_communicating_b_c)
        (Bb_communicating_b_d)
        (Bb_communicating_c_a)
        (Bb_communicating_c_b)
        (Bb_communicating_c_c)
        (Bb_communicating_c_d)
        (Bb_communicating_d_a)
        (Bb_communicating_d_b)
        (Bb_communicating_d_c)
        (Bb_communicating_d_d)
        (Bb_force)
        (Bb_hiddenblockedcell_p1)
        (Bb_hiddenblockedcell_p2)
        (Bb_hiddenblockedcell_p3)
        (Bb_hiddenblockedcell_p4)
        (Bb_hiddenblockedcell_p5)
        (Bb_hiddenblockedcell_p6)
        (Bb_hiddenblockedcell_p7)
        (Bb_hiddenblockedcell_p8)
        (Bb_hiddenblockedcell_p9)
        (Bb_hiddensurvivorat_s_p1)
        (Bb_hiddensurvivorat_s_p2)
        (Bb_hiddensurvivorat_s_p3)
        (Bb_hiddensurvivorat_s_p4)
        (Bb_hiddensurvivorat_s_p5)
        (Bb_hiddensurvivorat_s_p6)
        (Bb_hiddensurvivorat_s_p7)
        (Bb_hiddensurvivorat_s_p8)
        (Bb_hiddensurvivorat_s_p9)
        (Bb_msg_p1)
        (Bb_msg_p2)
        (Bb_msg_p3)
        (Bb_msg_p4)
        (Bb_msg_p5)
        (Bb_msg_p6)
        (Bb_msg_p7)
        (Bb_msg_p8)
        (Bb_msg_p9)
        (Bb_obss_p1)
        (Bb_obss_p2)
        (Bb_obss_p3)
        (Bb_obss_p4)
        (Bb_obss_p5)
        (Bb_obss_p6)
        (Bb_obss_p7)
        (Bb_obss_p8)
        (Bb_obss_p9)
        (Bb_planner)
        (Bb_survivorat_s_p1)
        (Bb_survivorat_s_p2)
        (Bb_survivorat_s_p3)
        (Bb_survivorat_s_p4)
        (Bb_survivorat_s_p5)
        (Bb_survivorat_s_p6)
        (Bb_survivorat_s_p7)
        (Bb_survivorat_s_p8)
        (Bb_survivorat_s_p9)
        (Bb_to)
        (Bc_not_--)
        (Bc_not_blocked_p1)
        (Bc_not_blocked_p2)
        (Bc_not_blocked_p3)
        (Bc_not_blocked_p4)
        (Bc_not_blocked_p5)
        (Bc_not_blocked_p6)
        (Bc_not_blocked_p7)
        (Bc_not_blocked_p8)
        (Bc_not_blocked_p9)
        (Bc_not_communicate)
        (Bc_not_communicating_a_a)
        (Bc_not_communicating_a_b)
        (Bc_not_communicating_a_c)
        (Bc_not_communicating_a_d)
        (Bc_not_communicating_b_a)
        (Bc_not_communicating_b_b)
        (Bc_not_communicating_b_c)
        (Bc_not_communicating_b_d)
        (Bc_not_communicating_c_a)
        (Bc_not_communicating_c_b)
        (Bc_not_communicating_c_c)
        (Bc_not_communicating_c_d)
        (Bc_not_communicating_d_a)
        (Bc_not_communicating_d_b)
        (Bc_not_communicating_d_c)
        (Bc_not_communicating_d_d)
        (Bc_not_force)
        (Bc_not_hiddenblockedcell_p1)
        (Bc_not_hiddenblockedcell_p2)
        (Bc_not_hiddenblockedcell_p3)
        (Bc_not_hiddenblockedcell_p4)
        (Bc_not_hiddenblockedcell_p5)
        (Bc_not_hiddenblockedcell_p6)
        (Bc_not_hiddenblockedcell_p7)
        (Bc_not_hiddenblockedcell_p8)
        (Bc_not_hiddenblockedcell_p9)
        (Bc_not_hiddensurvivorat_s_p1)
        (Bc_not_hiddensurvivorat_s_p2)
        (Bc_not_hiddensurvivorat_s_p3)
        (Bc_not_hiddensurvivorat_s_p4)
        (Bc_not_hiddensurvivorat_s_p5)
        (Bc_not_hiddensurvivorat_s_p6)
        (Bc_not_hiddensurvivorat_s_p7)
        (Bc_not_hiddensurvivorat_s_p8)
        (Bc_not_hiddensurvivorat_s_p9)
        (Bc_not_msg_p1)
        (Bc_not_msg_p2)
        (Bc_not_msg_p3)
        (Bc_not_msg_p4)
        (Bc_not_msg_p5)
        (Bc_not_msg_p6)
        (Bc_not_msg_p7)
        (Bc_not_msg_p8)
        (Bc_not_msg_p9)
        (Bc_not_obss_p1)
        (Bc_not_obss_p2)
        (Bc_not_obss_p3)
        (Bc_not_obss_p4)
        (Bc_not_obss_p5)
        (Bc_not_obss_p6)
        (Bc_not_obss_p7)
        (Bc_not_obss_p8)
        (Bc_not_obss_p9)
        (Bc_not_planner)
        (Bc_not_survivorat_s_p1)
        (Bc_not_survivorat_s_p2)
        (Bc_not_survivorat_s_p3)
        (Bc_not_survivorat_s_p4)
        (Bc_not_survivorat_s_p5)
        (Bc_not_survivorat_s_p6)
        (Bc_not_survivorat_s_p7)
        (Bc_not_survivorat_s_p8)
        (Bc_not_survivorat_s_p9)
        (Bc_not_to)
        (Bc_--)
        (Bc_blocked_p1)
        (Bc_blocked_p2)
        (Bc_blocked_p3)
        (Bc_blocked_p4)
        (Bc_blocked_p5)
        (Bc_blocked_p6)
        (Bc_blocked_p7)
        (Bc_blocked_p8)
        (Bc_blocked_p9)
        (Bc_communicate)
        (Bc_communicating_a_a)
        (Bc_communicating_a_b)
        (Bc_communicating_a_c)
        (Bc_communicating_a_d)
        (Bc_communicating_b_a)
        (Bc_communicating_b_b)
        (Bc_communicating_b_c)
        (Bc_communicating_b_d)
        (Bc_communicating_c_a)
        (Bc_communicating_c_b)
        (Bc_communicating_c_c)
        (Bc_communicating_c_d)
        (Bc_communicating_d_a)
        (Bc_communicating_d_b)
        (Bc_communicating_d_c)
        (Bc_communicating_d_d)
        (Bc_force)
        (Bc_hiddenblockedcell_p1)
        (Bc_hiddenblockedcell_p2)
        (Bc_hiddenblockedcell_p3)
        (Bc_hiddenblockedcell_p4)
        (Bc_hiddenblockedcell_p5)
        (Bc_hiddenblockedcell_p6)
        (Bc_hiddenblockedcell_p7)
        (Bc_hiddenblockedcell_p8)
        (Bc_hiddenblockedcell_p9)
        (Bc_hiddensurvivorat_s_p1)
        (Bc_hiddensurvivorat_s_p2)
        (Bc_hiddensurvivorat_s_p3)
        (Bc_hiddensurvivorat_s_p4)
        (Bc_hiddensurvivorat_s_p5)
        (Bc_hiddensurvivorat_s_p6)
        (Bc_hiddensurvivorat_s_p7)
        (Bc_hiddensurvivorat_s_p8)
        (Bc_hiddensurvivorat_s_p9)
        (Bc_msg_p1)
        (Bc_msg_p2)
        (Bc_msg_p3)
        (Bc_msg_p4)
        (Bc_msg_p5)
        (Bc_msg_p6)
        (Bc_msg_p7)
        (Bc_msg_p8)
        (Bc_msg_p9)
        (Bc_obss_p1)
        (Bc_obss_p2)
        (Bc_obss_p3)
        (Bc_obss_p4)
        (Bc_obss_p5)
        (Bc_obss_p6)
        (Bc_obss_p7)
        (Bc_obss_p8)
        (Bc_obss_p9)
        (Bc_planner)
        (Bc_survivorat_s_p1)
        (Bc_survivorat_s_p2)
        (Bc_survivorat_s_p3)
        (Bc_survivorat_s_p4)
        (Bc_survivorat_s_p5)
        (Bc_survivorat_s_p6)
        (Bc_survivorat_s_p7)
        (Bc_survivorat_s_p8)
        (Bc_survivorat_s_p9)
        (Bc_to)
        (Bd_not_--)
        (Bd_not_blocked_p1)
        (Bd_not_blocked_p2)
        (Bd_not_blocked_p3)
        (Bd_not_blocked_p4)
        (Bd_not_blocked_p5)
        (Bd_not_blocked_p6)
        (Bd_not_blocked_p7)
        (Bd_not_blocked_p8)
        (Bd_not_blocked_p9)
        (Bd_not_communicate)
        (Bd_not_communicating_a_a)
        (Bd_not_communicating_a_b)
        (Bd_not_communicating_a_c)
        (Bd_not_communicating_a_d)
        (Bd_not_communicating_b_a)
        (Bd_not_communicating_b_b)
        (Bd_not_communicating_b_c)
        (Bd_not_communicating_b_d)
        (Bd_not_communicating_c_a)
        (Bd_not_communicating_c_b)
        (Bd_not_communicating_c_c)
        (Bd_not_communicating_c_d)
        (Bd_not_communicating_d_a)
        (Bd_not_communicating_d_b)
        (Bd_not_communicating_d_c)
        (Bd_not_communicating_d_d)
        (Bd_not_force)
        (Bd_not_hiddenblockedcell_p1)
        (Bd_not_hiddenblockedcell_p2)
        (Bd_not_hiddenblockedcell_p3)
        (Bd_not_hiddenblockedcell_p4)
        (Bd_not_hiddenblockedcell_p5)
        (Bd_not_hiddenblockedcell_p6)
        (Bd_not_hiddenblockedcell_p7)
        (Bd_not_hiddenblockedcell_p8)
        (Bd_not_hiddenblockedcell_p9)
        (Bd_not_hiddensurvivorat_s_p1)
        (Bd_not_hiddensurvivorat_s_p2)
        (Bd_not_hiddensurvivorat_s_p3)
        (Bd_not_hiddensurvivorat_s_p4)
        (Bd_not_hiddensurvivorat_s_p5)
        (Bd_not_hiddensurvivorat_s_p6)
        (Bd_not_hiddensurvivorat_s_p7)
        (Bd_not_hiddensurvivorat_s_p8)
        (Bd_not_hiddensurvivorat_s_p9)
        (Bd_not_msg_p1)
        (Bd_not_msg_p2)
        (Bd_not_msg_p3)
        (Bd_not_msg_p4)
        (Bd_not_msg_p5)
        (Bd_not_msg_p6)
        (Bd_not_msg_p7)
        (Bd_not_msg_p8)
        (Bd_not_msg_p9)
        (Bd_not_obss_p1)
        (Bd_not_obss_p2)
        (Bd_not_obss_p3)
        (Bd_not_obss_p4)
        (Bd_not_obss_p5)
        (Bd_not_obss_p6)
        (Bd_not_obss_p7)
        (Bd_not_obss_p8)
        (Bd_not_obss_p9)
        (Bd_not_planner)
        (Bd_not_survivorat_s_p1)
        (Bd_not_survivorat_s_p2)
        (Bd_not_survivorat_s_p3)
        (Bd_not_survivorat_s_p4)
        (Bd_not_survivorat_s_p5)
        (Bd_not_survivorat_s_p6)
        (Bd_not_survivorat_s_p7)
        (Bd_not_survivorat_s_p8)
        (Bd_not_survivorat_s_p9)
        (Bd_not_to)
        (Bd_--)
        (Bd_blocked_p1)
        (Bd_blocked_p2)
        (Bd_blocked_p3)
        (Bd_blocked_p4)
        (Bd_blocked_p5)
        (Bd_blocked_p6)
        (Bd_blocked_p7)
        (Bd_blocked_p8)
        (Bd_blocked_p9)
        (Bd_communicate)
        (Bd_communicating_a_a)
        (Bd_communicating_a_b)
        (Bd_communicating_a_c)
        (Bd_communicating_a_d)
        (Bd_communicating_b_a)
        (Bd_communicating_b_b)
        (Bd_communicating_b_c)
        (Bd_communicating_b_d)
        (Bd_communicating_c_a)
        (Bd_communicating_c_b)
        (Bd_communicating_c_c)
        (Bd_communicating_c_d)
        (Bd_communicating_d_a)
        (Bd_communicating_d_b)
        (Bd_communicating_d_c)
        (Bd_communicating_d_d)
        (Bd_force)
        (Bd_hiddenblockedcell_p1)
        (Bd_hiddenblockedcell_p2)
        (Bd_hiddenblockedcell_p3)
        (Bd_hiddenblockedcell_p4)
        (Bd_hiddenblockedcell_p5)
        (Bd_hiddenblockedcell_p6)
        (Bd_hiddenblockedcell_p7)
        (Bd_hiddenblockedcell_p8)
        (Bd_hiddenblockedcell_p9)
        (Bd_hiddensurvivorat_s_p1)
        (Bd_hiddensurvivorat_s_p2)
        (Bd_hiddensurvivorat_s_p3)
        (Bd_hiddensurvivorat_s_p4)
        (Bd_hiddensurvivorat_s_p5)
        (Bd_hiddensurvivorat_s_p6)
        (Bd_hiddensurvivorat_s_p7)
        (Bd_hiddensurvivorat_s_p8)
        (Bd_hiddensurvivorat_s_p9)
        (Bd_msg_p1)
        (Bd_msg_p2)
        (Bd_msg_p3)
        (Bd_msg_p4)
        (Bd_msg_p5)
        (Bd_msg_p6)
        (Bd_msg_p7)
        (Bd_msg_p8)
        (Bd_msg_p9)
        (Bd_obss_p1)
        (Bd_obss_p2)
        (Bd_obss_p3)
        (Bd_obss_p4)
        (Bd_obss_p5)
        (Bd_obss_p6)
        (Bd_obss_p7)
        (Bd_obss_p8)
        (Bd_obss_p9)
        (Bd_planner)
        (Bd_survivorat_s_p1)
        (Bd_survivorat_s_p2)
        (Bd_survivorat_s_p3)
        (Bd_survivorat_s_p4)
        (Bd_survivorat_s_p5)
        (Bd_survivorat_s_p6)
        (Bd_survivorat_s_p7)
        (Bd_survivorat_s_p8)
        (Bd_survivorat_s_p9)
        (Bd_to)
        (Pa_not_--)
        (Pa_not_blocked_p1)
        (Pa_not_blocked_p2)
        (Pa_not_blocked_p3)
        (Pa_not_blocked_p4)
        (Pa_not_blocked_p5)
        (Pa_not_blocked_p6)
        (Pa_not_blocked_p7)
        (Pa_not_blocked_p8)
        (Pa_not_blocked_p9)
        (Pa_not_communicate)
        (Pa_not_communicating_a_a)
        (Pa_not_communicating_a_b)
        (Pa_not_communicating_a_c)
        (Pa_not_communicating_a_d)
        (Pa_not_communicating_b_a)
        (Pa_not_communicating_b_b)
        (Pa_not_communicating_b_c)
        (Pa_not_communicating_b_d)
        (Pa_not_communicating_c_a)
        (Pa_not_communicating_c_b)
        (Pa_not_communicating_c_c)
        (Pa_not_communicating_c_d)
        (Pa_not_communicating_d_a)
        (Pa_not_communicating_d_b)
        (Pa_not_communicating_d_c)
        (Pa_not_communicating_d_d)
        (Pa_not_force)
        (Pa_not_hiddenblockedcell_p1)
        (Pa_not_hiddenblockedcell_p2)
        (Pa_not_hiddenblockedcell_p3)
        (Pa_not_hiddenblockedcell_p4)
        (Pa_not_hiddenblockedcell_p5)
        (Pa_not_hiddenblockedcell_p6)
        (Pa_not_hiddenblockedcell_p7)
        (Pa_not_hiddenblockedcell_p8)
        (Pa_not_hiddenblockedcell_p9)
        (Pa_not_hiddensurvivorat_s_p1)
        (Pa_not_hiddensurvivorat_s_p2)
        (Pa_not_hiddensurvivorat_s_p3)
        (Pa_not_hiddensurvivorat_s_p4)
        (Pa_not_hiddensurvivorat_s_p5)
        (Pa_not_hiddensurvivorat_s_p6)
        (Pa_not_hiddensurvivorat_s_p7)
        (Pa_not_hiddensurvivorat_s_p8)
        (Pa_not_hiddensurvivorat_s_p9)
        (Pa_not_msg_p1)
        (Pa_not_msg_p2)
        (Pa_not_msg_p3)
        (Pa_not_msg_p4)
        (Pa_not_msg_p5)
        (Pa_not_msg_p6)
        (Pa_not_msg_p7)
        (Pa_not_msg_p8)
        (Pa_not_msg_p9)
        (Pa_not_obss_p1)
        (Pa_not_obss_p2)
        (Pa_not_obss_p3)
        (Pa_not_obss_p4)
        (Pa_not_obss_p5)
        (Pa_not_obss_p6)
        (Pa_not_obss_p7)
        (Pa_not_obss_p8)
        (Pa_not_obss_p9)
        (Pa_not_planner)
        (Pa_not_survivorat_s_p1)
        (Pa_not_survivorat_s_p2)
        (Pa_not_survivorat_s_p3)
        (Pa_not_survivorat_s_p4)
        (Pa_not_survivorat_s_p5)
        (Pa_not_survivorat_s_p6)
        (Pa_not_survivorat_s_p7)
        (Pa_not_survivorat_s_p8)
        (Pa_not_survivorat_s_p9)
        (Pa_not_to)
        (Pa_--)
        (Pa_blocked_p1)
        (Pa_blocked_p2)
        (Pa_blocked_p3)
        (Pa_blocked_p4)
        (Pa_blocked_p5)
        (Pa_blocked_p6)
        (Pa_blocked_p7)
        (Pa_blocked_p8)
        (Pa_blocked_p9)
        (Pa_communicate)
        (Pa_communicating_a_a)
        (Pa_communicating_a_b)
        (Pa_communicating_a_c)
        (Pa_communicating_a_d)
        (Pa_communicating_b_a)
        (Pa_communicating_b_b)
        (Pa_communicating_b_c)
        (Pa_communicating_b_d)
        (Pa_communicating_c_a)
        (Pa_communicating_c_b)
        (Pa_communicating_c_c)
        (Pa_communicating_c_d)
        (Pa_communicating_d_a)
        (Pa_communicating_d_b)
        (Pa_communicating_d_c)
        (Pa_communicating_d_d)
        (Pa_force)
        (Pa_hiddenblockedcell_p1)
        (Pa_hiddenblockedcell_p2)
        (Pa_hiddenblockedcell_p3)
        (Pa_hiddenblockedcell_p4)
        (Pa_hiddenblockedcell_p5)
        (Pa_hiddenblockedcell_p6)
        (Pa_hiddenblockedcell_p7)
        (Pa_hiddenblockedcell_p8)
        (Pa_hiddenblockedcell_p9)
        (Pa_hiddensurvivorat_s_p1)
        (Pa_hiddensurvivorat_s_p2)
        (Pa_hiddensurvivorat_s_p3)
        (Pa_hiddensurvivorat_s_p4)
        (Pa_hiddensurvivorat_s_p5)
        (Pa_hiddensurvivorat_s_p6)
        (Pa_hiddensurvivorat_s_p7)
        (Pa_hiddensurvivorat_s_p8)
        (Pa_hiddensurvivorat_s_p9)
        (Pa_msg_p1)
        (Pa_msg_p2)
        (Pa_msg_p3)
        (Pa_msg_p4)
        (Pa_msg_p5)
        (Pa_msg_p6)
        (Pa_msg_p7)
        (Pa_msg_p8)
        (Pa_msg_p9)
        (Pa_obss_p1)
        (Pa_obss_p2)
        (Pa_obss_p3)
        (Pa_obss_p4)
        (Pa_obss_p5)
        (Pa_obss_p6)
        (Pa_obss_p7)
        (Pa_obss_p8)
        (Pa_obss_p9)
        (Pa_planner)
        (Pa_survivorat_s_p1)
        (Pa_survivorat_s_p2)
        (Pa_survivorat_s_p3)
        (Pa_survivorat_s_p4)
        (Pa_survivorat_s_p5)
        (Pa_survivorat_s_p6)
        (Pa_survivorat_s_p7)
        (Pa_survivorat_s_p8)
        (Pa_survivorat_s_p9)
        (Pa_to)
        (Pb_not_--)
        (Pb_not_blocked_p1)
        (Pb_not_blocked_p2)
        (Pb_not_blocked_p3)
        (Pb_not_blocked_p4)
        (Pb_not_blocked_p5)
        (Pb_not_blocked_p6)
        (Pb_not_blocked_p7)
        (Pb_not_blocked_p8)
        (Pb_not_blocked_p9)
        (Pb_not_communicate)
        (Pb_not_communicating_a_a)
        (Pb_not_communicating_a_b)
        (Pb_not_communicating_a_c)
        (Pb_not_communicating_a_d)
        (Pb_not_communicating_b_a)
        (Pb_not_communicating_b_b)
        (Pb_not_communicating_b_c)
        (Pb_not_communicating_b_d)
        (Pb_not_communicating_c_a)
        (Pb_not_communicating_c_b)
        (Pb_not_communicating_c_c)
        (Pb_not_communicating_c_d)
        (Pb_not_communicating_d_a)
        (Pb_not_communicating_d_b)
        (Pb_not_communicating_d_c)
        (Pb_not_communicating_d_d)
        (Pb_not_force)
        (Pb_not_hiddenblockedcell_p1)
        (Pb_not_hiddenblockedcell_p2)
        (Pb_not_hiddenblockedcell_p3)
        (Pb_not_hiddenblockedcell_p4)
        (Pb_not_hiddenblockedcell_p5)
        (Pb_not_hiddenblockedcell_p6)
        (Pb_not_hiddenblockedcell_p7)
        (Pb_not_hiddenblockedcell_p8)
        (Pb_not_hiddenblockedcell_p9)
        (Pb_not_hiddensurvivorat_s_p1)
        (Pb_not_hiddensurvivorat_s_p2)
        (Pb_not_hiddensurvivorat_s_p3)
        (Pb_not_hiddensurvivorat_s_p4)
        (Pb_not_hiddensurvivorat_s_p5)
        (Pb_not_hiddensurvivorat_s_p6)
        (Pb_not_hiddensurvivorat_s_p7)
        (Pb_not_hiddensurvivorat_s_p8)
        (Pb_not_hiddensurvivorat_s_p9)
        (Pb_not_msg_p1)
        (Pb_not_msg_p2)
        (Pb_not_msg_p3)
        (Pb_not_msg_p4)
        (Pb_not_msg_p5)
        (Pb_not_msg_p6)
        (Pb_not_msg_p7)
        (Pb_not_msg_p8)
        (Pb_not_msg_p9)
        (Pb_not_obss_p1)
        (Pb_not_obss_p2)
        (Pb_not_obss_p3)
        (Pb_not_obss_p4)
        (Pb_not_obss_p5)
        (Pb_not_obss_p6)
        (Pb_not_obss_p7)
        (Pb_not_obss_p8)
        (Pb_not_obss_p9)
        (Pb_not_planner)
        (Pb_not_survivorat_s_p1)
        (Pb_not_survivorat_s_p2)
        (Pb_not_survivorat_s_p3)
        (Pb_not_survivorat_s_p4)
        (Pb_not_survivorat_s_p5)
        (Pb_not_survivorat_s_p6)
        (Pb_not_survivorat_s_p7)
        (Pb_not_survivorat_s_p8)
        (Pb_not_survivorat_s_p9)
        (Pb_not_to)
        (Pb_--)
        (Pb_blocked_p1)
        (Pb_blocked_p2)
        (Pb_blocked_p3)
        (Pb_blocked_p4)
        (Pb_blocked_p5)
        (Pb_blocked_p6)
        (Pb_blocked_p7)
        (Pb_blocked_p8)
        (Pb_blocked_p9)
        (Pb_communicate)
        (Pb_communicating_a_a)
        (Pb_communicating_a_b)
        (Pb_communicating_a_c)
        (Pb_communicating_a_d)
        (Pb_communicating_b_a)
        (Pb_communicating_b_b)
        (Pb_communicating_b_c)
        (Pb_communicating_b_d)
        (Pb_communicating_c_a)
        (Pb_communicating_c_b)
        (Pb_communicating_c_c)
        (Pb_communicating_c_d)
        (Pb_communicating_d_a)
        (Pb_communicating_d_b)
        (Pb_communicating_d_c)
        (Pb_communicating_d_d)
        (Pb_force)
        (Pb_hiddenblockedcell_p1)
        (Pb_hiddenblockedcell_p2)
        (Pb_hiddenblockedcell_p3)
        (Pb_hiddenblockedcell_p4)
        (Pb_hiddenblockedcell_p5)
        (Pb_hiddenblockedcell_p6)
        (Pb_hiddenblockedcell_p7)
        (Pb_hiddenblockedcell_p8)
        (Pb_hiddenblockedcell_p9)
        (Pb_hiddensurvivorat_s_p1)
        (Pb_hiddensurvivorat_s_p2)
        (Pb_hiddensurvivorat_s_p3)
        (Pb_hiddensurvivorat_s_p4)
        (Pb_hiddensurvivorat_s_p5)
        (Pb_hiddensurvivorat_s_p6)
        (Pb_hiddensurvivorat_s_p7)
        (Pb_hiddensurvivorat_s_p8)
        (Pb_hiddensurvivorat_s_p9)
        (Pb_msg_p1)
        (Pb_msg_p2)
        (Pb_msg_p3)
        (Pb_msg_p4)
        (Pb_msg_p5)
        (Pb_msg_p6)
        (Pb_msg_p7)
        (Pb_msg_p8)
        (Pb_msg_p9)
        (Pb_obss_p1)
        (Pb_obss_p2)
        (Pb_obss_p3)
        (Pb_obss_p4)
        (Pb_obss_p5)
        (Pb_obss_p6)
        (Pb_obss_p7)
        (Pb_obss_p8)
        (Pb_obss_p9)
        (Pb_planner)
        (Pb_survivorat_s_p1)
        (Pb_survivorat_s_p2)
        (Pb_survivorat_s_p3)
        (Pb_survivorat_s_p4)
        (Pb_survivorat_s_p5)
        (Pb_survivorat_s_p6)
        (Pb_survivorat_s_p7)
        (Pb_survivorat_s_p8)
        (Pb_survivorat_s_p9)
        (Pb_to)
        (Pc_not_--)
        (Pc_not_blocked_p1)
        (Pc_not_blocked_p2)
        (Pc_not_blocked_p3)
        (Pc_not_blocked_p4)
        (Pc_not_blocked_p5)
        (Pc_not_blocked_p6)
        (Pc_not_blocked_p7)
        (Pc_not_blocked_p8)
        (Pc_not_blocked_p9)
        (Pc_not_communicate)
        (Pc_not_communicating_a_a)
        (Pc_not_communicating_a_b)
        (Pc_not_communicating_a_c)
        (Pc_not_communicating_a_d)
        (Pc_not_communicating_b_a)
        (Pc_not_communicating_b_b)
        (Pc_not_communicating_b_c)
        (Pc_not_communicating_b_d)
        (Pc_not_communicating_c_a)
        (Pc_not_communicating_c_b)
        (Pc_not_communicating_c_c)
        (Pc_not_communicating_c_d)
        (Pc_not_communicating_d_a)
        (Pc_not_communicating_d_b)
        (Pc_not_communicating_d_c)
        (Pc_not_communicating_d_d)
        (Pc_not_force)
        (Pc_not_hiddenblockedcell_p1)
        (Pc_not_hiddenblockedcell_p2)
        (Pc_not_hiddenblockedcell_p3)
        (Pc_not_hiddenblockedcell_p4)
        (Pc_not_hiddenblockedcell_p5)
        (Pc_not_hiddenblockedcell_p6)
        (Pc_not_hiddenblockedcell_p7)
        (Pc_not_hiddenblockedcell_p8)
        (Pc_not_hiddenblockedcell_p9)
        (Pc_not_hiddensurvivorat_s_p1)
        (Pc_not_hiddensurvivorat_s_p2)
        (Pc_not_hiddensurvivorat_s_p3)
        (Pc_not_hiddensurvivorat_s_p4)
        (Pc_not_hiddensurvivorat_s_p5)
        (Pc_not_hiddensurvivorat_s_p6)
        (Pc_not_hiddensurvivorat_s_p7)
        (Pc_not_hiddensurvivorat_s_p8)
        (Pc_not_hiddensurvivorat_s_p9)
        (Pc_not_msg_p1)
        (Pc_not_msg_p2)
        (Pc_not_msg_p3)
        (Pc_not_msg_p4)
        (Pc_not_msg_p5)
        (Pc_not_msg_p6)
        (Pc_not_msg_p7)
        (Pc_not_msg_p8)
        (Pc_not_msg_p9)
        (Pc_not_obss_p1)
        (Pc_not_obss_p2)
        (Pc_not_obss_p3)
        (Pc_not_obss_p4)
        (Pc_not_obss_p5)
        (Pc_not_obss_p6)
        (Pc_not_obss_p7)
        (Pc_not_obss_p8)
        (Pc_not_obss_p9)
        (Pc_not_planner)
        (Pc_not_survivorat_s_p1)
        (Pc_not_survivorat_s_p2)
        (Pc_not_survivorat_s_p3)
        (Pc_not_survivorat_s_p4)
        (Pc_not_survivorat_s_p5)
        (Pc_not_survivorat_s_p6)
        (Pc_not_survivorat_s_p7)
        (Pc_not_survivorat_s_p8)
        (Pc_not_survivorat_s_p9)
        (Pc_not_to)
        (Pc_--)
        (Pc_blocked_p1)
        (Pc_blocked_p2)
        (Pc_blocked_p3)
        (Pc_blocked_p4)
        (Pc_blocked_p5)
        (Pc_blocked_p6)
        (Pc_blocked_p7)
        (Pc_blocked_p8)
        (Pc_blocked_p9)
        (Pc_communicate)
        (Pc_communicating_a_a)
        (Pc_communicating_a_b)
        (Pc_communicating_a_c)
        (Pc_communicating_a_d)
        (Pc_communicating_b_a)
        (Pc_communicating_b_b)
        (Pc_communicating_b_c)
        (Pc_communicating_b_d)
        (Pc_communicating_c_a)
        (Pc_communicating_c_b)
        (Pc_communicating_c_c)
        (Pc_communicating_c_d)
        (Pc_communicating_d_a)
        (Pc_communicating_d_b)
        (Pc_communicating_d_c)
        (Pc_communicating_d_d)
        (Pc_force)
        (Pc_hiddenblockedcell_p1)
        (Pc_hiddenblockedcell_p2)
        (Pc_hiddenblockedcell_p3)
        (Pc_hiddenblockedcell_p4)
        (Pc_hiddenblockedcell_p5)
        (Pc_hiddenblockedcell_p6)
        (Pc_hiddenblockedcell_p7)
        (Pc_hiddenblockedcell_p8)
        (Pc_hiddenblockedcell_p9)
        (Pc_hiddensurvivorat_s_p1)
        (Pc_hiddensurvivorat_s_p2)
        (Pc_hiddensurvivorat_s_p3)
        (Pc_hiddensurvivorat_s_p4)
        (Pc_hiddensurvivorat_s_p5)
        (Pc_hiddensurvivorat_s_p6)
        (Pc_hiddensurvivorat_s_p7)
        (Pc_hiddensurvivorat_s_p8)
        (Pc_hiddensurvivorat_s_p9)
        (Pc_msg_p1)
        (Pc_msg_p2)
        (Pc_msg_p3)
        (Pc_msg_p4)
        (Pc_msg_p5)
        (Pc_msg_p6)
        (Pc_msg_p7)
        (Pc_msg_p8)
        (Pc_msg_p9)
        (Pc_obss_p1)
        (Pc_obss_p2)
        (Pc_obss_p3)
        (Pc_obss_p4)
        (Pc_obss_p5)
        (Pc_obss_p6)
        (Pc_obss_p7)
        (Pc_obss_p8)
        (Pc_obss_p9)
        (Pc_planner)
        (Pc_survivorat_s_p1)
        (Pc_survivorat_s_p2)
        (Pc_survivorat_s_p3)
        (Pc_survivorat_s_p4)
        (Pc_survivorat_s_p5)
        (Pc_survivorat_s_p6)
        (Pc_survivorat_s_p7)
        (Pc_survivorat_s_p8)
        (Pc_survivorat_s_p9)
        (Pc_to)
        (Pd_not_--)
        (Pd_not_blocked_p1)
        (Pd_not_blocked_p2)
        (Pd_not_blocked_p3)
        (Pd_not_blocked_p4)
        (Pd_not_blocked_p5)
        (Pd_not_blocked_p6)
        (Pd_not_blocked_p7)
        (Pd_not_blocked_p8)
        (Pd_not_blocked_p9)
        (Pd_not_communicate)
        (Pd_not_communicating_a_a)
        (Pd_not_communicating_a_b)
        (Pd_not_communicating_a_c)
        (Pd_not_communicating_a_d)
        (Pd_not_communicating_b_a)
        (Pd_not_communicating_b_b)
        (Pd_not_communicating_b_c)
        (Pd_not_communicating_b_d)
        (Pd_not_communicating_c_a)
        (Pd_not_communicating_c_b)
        (Pd_not_communicating_c_c)
        (Pd_not_communicating_c_d)
        (Pd_not_communicating_d_a)
        (Pd_not_communicating_d_b)
        (Pd_not_communicating_d_c)
        (Pd_not_communicating_d_d)
        (Pd_not_force)
        (Pd_not_hiddenblockedcell_p1)
        (Pd_not_hiddenblockedcell_p2)
        (Pd_not_hiddenblockedcell_p3)
        (Pd_not_hiddenblockedcell_p4)
        (Pd_not_hiddenblockedcell_p5)
        (Pd_not_hiddenblockedcell_p6)
        (Pd_not_hiddenblockedcell_p7)
        (Pd_not_hiddenblockedcell_p8)
        (Pd_not_hiddenblockedcell_p9)
        (Pd_not_hiddensurvivorat_s_p1)
        (Pd_not_hiddensurvivorat_s_p2)
        (Pd_not_hiddensurvivorat_s_p3)
        (Pd_not_hiddensurvivorat_s_p4)
        (Pd_not_hiddensurvivorat_s_p5)
        (Pd_not_hiddensurvivorat_s_p6)
        (Pd_not_hiddensurvivorat_s_p7)
        (Pd_not_hiddensurvivorat_s_p8)
        (Pd_not_hiddensurvivorat_s_p9)
        (Pd_not_msg_p1)
        (Pd_not_msg_p2)
        (Pd_not_msg_p3)
        (Pd_not_msg_p4)
        (Pd_not_msg_p5)
        (Pd_not_msg_p6)
        (Pd_not_msg_p7)
        (Pd_not_msg_p8)
        (Pd_not_msg_p9)
        (Pd_not_obss_p1)
        (Pd_not_obss_p2)
        (Pd_not_obss_p3)
        (Pd_not_obss_p4)
        (Pd_not_obss_p5)
        (Pd_not_obss_p6)
        (Pd_not_obss_p7)
        (Pd_not_obss_p8)
        (Pd_not_obss_p9)
        (Pd_not_planner)
        (Pd_not_survivorat_s_p1)
        (Pd_not_survivorat_s_p2)
        (Pd_not_survivorat_s_p3)
        (Pd_not_survivorat_s_p4)
        (Pd_not_survivorat_s_p5)
        (Pd_not_survivorat_s_p6)
        (Pd_not_survivorat_s_p7)
        (Pd_not_survivorat_s_p8)
        (Pd_not_survivorat_s_p9)
        (Pd_not_to)
        (Pd_--)
        (Pd_blocked_p1)
        (Pd_blocked_p2)
        (Pd_blocked_p3)
        (Pd_blocked_p4)
        (Pd_blocked_p5)
        (Pd_blocked_p6)
        (Pd_blocked_p7)
        (Pd_blocked_p8)
        (Pd_blocked_p9)
        (Pd_communicate)
        (Pd_communicating_a_a)
        (Pd_communicating_a_b)
        (Pd_communicating_a_c)
        (Pd_communicating_a_d)
        (Pd_communicating_b_a)
        (Pd_communicating_b_b)
        (Pd_communicating_b_c)
        (Pd_communicating_b_d)
        (Pd_communicating_c_a)
        (Pd_communicating_c_b)
        (Pd_communicating_c_c)
        (Pd_communicating_c_d)
        (Pd_communicating_d_a)
        (Pd_communicating_d_b)
        (Pd_communicating_d_c)
        (Pd_communicating_d_d)
        (Pd_force)
        (Pd_hiddenblockedcell_p1)
        (Pd_hiddenblockedcell_p2)
        (Pd_hiddenblockedcell_p3)
        (Pd_hiddenblockedcell_p4)
        (Pd_hiddenblockedcell_p5)
        (Pd_hiddenblockedcell_p6)
        (Pd_hiddenblockedcell_p7)
        (Pd_hiddenblockedcell_p8)
        (Pd_hiddenblockedcell_p9)
        (Pd_hiddensurvivorat_s_p1)
        (Pd_hiddensurvivorat_s_p2)
        (Pd_hiddensurvivorat_s_p3)
        (Pd_hiddensurvivorat_s_p4)
        (Pd_hiddensurvivorat_s_p5)
        (Pd_hiddensurvivorat_s_p6)
        (Pd_hiddensurvivorat_s_p7)
        (Pd_hiddensurvivorat_s_p8)
        (Pd_hiddensurvivorat_s_p9)
        (Pd_msg_p1)
        (Pd_msg_p2)
        (Pd_msg_p3)
        (Pd_msg_p4)
        (Pd_msg_p5)
        (Pd_msg_p6)
        (Pd_msg_p7)
        (Pd_msg_p8)
        (Pd_msg_p9)
        (Pd_obss_p1)
        (Pd_obss_p2)
        (Pd_obss_p3)
        (Pd_obss_p4)
        (Pd_obss_p5)
        (Pd_obss_p6)
        (Pd_obss_p7)
        (Pd_obss_p8)
        (Pd_obss_p9)
        (Pd_planner)
        (Pd_survivorat_s_p1)
        (Pd_survivorat_s_p2)
        (Pd_survivorat_s_p3)
        (Pd_survivorat_s_p4)
        (Pd_survivorat_s_p5)
        (Pd_survivorat_s_p6)
        (Pd_survivorat_s_p7)
        (Pd_survivorat_s_p8)
        (Pd_survivorat_s_p9)
        (Pd_to)
        (at_a_p1)
        (at_a_p2)
        (at_a_p3)
        (at_a_p4)
        (at_a_p5)
        (at_a_p6)
        (at_a_p7)
        (at_a_p8)
        (at_a_p9)
        (at_b_p1)
        (at_b_p2)
        (at_b_p3)
        (at_b_p4)
        (at_b_p5)
        (at_b_p6)
        (at_b_p7)
        (at_b_p8)
        (at_b_p9)
        (at_c_p1)
        (at_c_p2)
        (at_c_p3)
        (at_c_p4)
        (at_c_p5)
        (at_c_p6)
        (at_c_p7)
        (at_c_p8)
        (at_c_p9)
        (at_d_p1)
        (at_d_p2)
        (at_d_p3)
        (at_d_p4)
        (at_d_p5)
        (at_d_p6)
        (at_d_p7)
        (at_d_p8)
        (at_d_p9)
        (blocked_p1)
        (blocked_p2)
        (blocked_p3)
        (blocked_p4)
        (blocked_p5)
        (blocked_p6)
        (blocked_p7)
        (blocked_p8)
        (blocked_p9)
        (checked_p1)
        (checked_p2)
        (checked_p3)
        (checked_p4)
        (checked_p5)
        (checked_p6)
        (checked_p7)
        (checked_p8)
        (checked_p9)
        (communicate)
        (communicating_a_a)
        (communicating_a_b)
        (communicating_a_c)
        (communicating_a_d)
        (communicating_b_a)
        (communicating_b_b)
        (communicating_b_c)
        (communicating_b_d)
        (communicating_c_a)
        (communicating_c_b)
        (communicating_c_c)
        (communicating_c_d)
        (communicating_d_a)
        (communicating_d_b)
        (communicating_d_c)
        (communicating_d_d)
        (force)
        (hiddenblockedcell_p1)
        (hiddenblockedcell_p2)
        (hiddenblockedcell_p3)
        (hiddenblockedcell_p4)
        (hiddenblockedcell_p5)
        (hiddenblockedcell_p6)
        (hiddenblockedcell_p7)
        (hiddenblockedcell_p8)
        (hiddenblockedcell_p9)
        (hiddensurvivorat_s_p1)
        (hiddensurvivorat_s_p2)
        (hiddensurvivorat_s_p3)
        (hiddensurvivorat_s_p4)
        (hiddensurvivorat_s_p5)
        (hiddensurvivorat_s_p6)
        (hiddensurvivorat_s_p7)
        (hiddensurvivorat_s_p8)
        (hiddensurvivorat_s_p9)
        (msg_p1)
        (msg_p2)
        (msg_p3)
        (msg_p4)
        (msg_p5)
        (msg_p6)
        (msg_p7)
        (msg_p8)
        (msg_p9)
        (obs_p1)
        (obs_p2)
        (obs_p3)
        (obs_p4)
        (obs_p5)
        (obs_p6)
        (obs_p7)
        (obs_p8)
        (obs_p9)
        (obss_p1)
        (obss_p2)
        (obss_p3)
        (obss_p4)
        (obss_p5)
        (obss_p6)
        (obss_p7)
        (obss_p8)
        (obss_p9)
        (planner)
        (succ_p1_p1)
        (succ_p1_p2)
        (succ_p1_p3)
        (succ_p1_p4)
        (succ_p1_p5)
        (succ_p1_p6)
        (succ_p1_p7)
        (succ_p1_p8)
        (succ_p1_p9)
        (succ_p2_p1)
        (succ_p2_p2)
        (succ_p2_p3)
        (succ_p2_p4)
        (succ_p2_p5)
        (succ_p2_p6)
        (succ_p2_p7)
        (succ_p2_p8)
        (succ_p2_p9)
        (succ_p3_p1)
        (succ_p3_p2)
        (succ_p3_p3)
        (succ_p3_p4)
        (succ_p3_p5)
        (succ_p3_p6)
        (succ_p3_p7)
        (succ_p3_p8)
        (succ_p3_p9)
        (succ_p4_p1)
        (succ_p4_p2)
        (succ_p4_p3)
        (succ_p4_p4)
        (succ_p4_p5)
        (succ_p4_p6)
        (succ_p4_p7)
        (succ_p4_p8)
        (succ_p4_p9)
        (succ_p5_p1)
        (succ_p5_p2)
        (succ_p5_p3)
        (succ_p5_p4)
        (succ_p5_p5)
        (succ_p5_p6)
        (succ_p5_p7)
        (succ_p5_p8)
        (succ_p5_p9)
        (succ_p6_p1)
        (succ_p6_p2)
        (succ_p6_p3)
        (succ_p6_p4)
        (succ_p6_p5)
        (succ_p6_p6)
        (succ_p6_p7)
        (succ_p6_p8)
        (succ_p6_p9)
        (succ_p7_p1)
        (succ_p7_p2)
        (succ_p7_p3)
        (succ_p7_p4)
        (succ_p7_p5)
        (succ_p7_p6)
        (succ_p7_p7)
        (succ_p7_p8)
        (succ_p7_p9)
        (succ_p8_p1)
        (succ_p8_p2)
        (succ_p8_p3)
        (succ_p8_p4)
        (succ_p8_p5)
        (succ_p8_p6)
        (succ_p8_p7)
        (succ_p8_p8)
        (succ_p8_p9)
        (succ_p9_p1)
        (succ_p9_p2)
        (succ_p9_p3)
        (succ_p9_p4)
        (succ_p9_p5)
        (succ_p9_p6)
        (succ_p9_p7)
        (succ_p9_p8)
        (succ_p9_p9)
        (survivorat_s_p1)
        (survivorat_s_p2)
        (survivorat_s_p3)
        (survivorat_s_p4)
        (survivorat_s_p5)
        (survivorat_s_p6)
        (survivorat_s_p7)
        (survivorat_s_p8)
        (survivorat_s_p9)
        (to)
    )

    (:action commsurvivor_p1_a_s
        :precondition (and (Pa_survivorat_s_p1)
                           (at_a_p1)
                           (Ba_survivorat_s_p1))
        :effect (and
                    ; #10437: <==closure== 16843 (pos)
                    (Pb_survivorat_s_p1)

                    ; #16073: <==closure== 69908 (pos)
                    (Pc_survivorat_s_p1)

                    ; #16843: origin
                    (Bb_survivorat_s_p1)

                    ; #19765: <==closure== 34346 (pos)
                    (Pc_msg_p1)

                    ; #24133: origin
                    (Bd_survivorat_s_p1)

                    ; #28259: origin
                    (msg_p1)

                    ; #34346: <==commonly_known== 28259 (pos)
                    (Bc_msg_p1)

                    ; #35183: <==commonly_known== 28259 (pos)
                    (Bb_msg_p1)

                    ; #37996: <==commonly_known== 28259 (pos)
                    (Ba_msg_p1)

                    ; #38028: <==closure== 24133 (pos)
                    (Pd_survivorat_s_p1)

                    ; #39680: <==commonly_known== 28259 (pos)
                    (Bd_msg_p1)

                    ; #48659: <==closure== 39680 (pos)
                    (Pd_msg_p1)

                    ; #60381: <==closure== 37996 (pos)
                    (Pa_msg_p1)

                    ; #66566: <==closure== 95856 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69908: origin
                    (Bc_survivorat_s_p1)

                    ; #85653: <==closure== 35183 (pos)
                    (Pb_msg_p1)

                    ; #95856: origin
                    (Ba_survivorat_s_p1)

                    ; #11478: <==negation-removal== 16843 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #18847: <==negation-removal== 66566 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #19624: <==negation-removal== 24133 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #21262: <==negation-removal== 39680 (pos)
                    (not (Pd_not_msg_p1))

                    ; #38231: <==negation-removal== 37996 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42292: <==negation-removal== 95856 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #42332: <==negation-removal== 60381 (pos)
                    (not (Ba_not_msg_p1))

                    ; #52598: <==negation-removal== 48659 (pos)
                    (not (Bd_not_msg_p1))

                    ; #54406: <==negation-removal== 19765 (pos)
                    (not (Bc_not_msg_p1))

                    ; #59351: <==negation-removal== 85653 (pos)
                    (not (Bb_not_msg_p1))

                    ; #65122: <==negation-removal== 16073 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #71128: <==negation-removal== 10437 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #71942: <==negation-removal== 28259 (pos)
                    (not (not_msg_p1))

                    ; #75199: <==negation-removal== 69908 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #79907: <==negation-removal== 38028 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #83694: <==negation-removal== 35183 (pos)
                    (not (Pb_not_msg_p1))

                    ; #84524: <==negation-removal== 34346 (pos)
                    (not (Pc_not_msg_p1))))

    (:action commsurvivor_p1_b_s
        :precondition (and (Bb_survivorat_s_p1)
                           (at_b_p1)
                           (Pb_survivorat_s_p1))
        :effect (and
                    ; #10437: <==closure== 16843 (pos)
                    (Pb_survivorat_s_p1)

                    ; #16073: <==closure== 69908 (pos)
                    (Pc_survivorat_s_p1)

                    ; #16843: origin
                    (Bb_survivorat_s_p1)

                    ; #19765: <==closure== 34346 (pos)
                    (Pc_msg_p1)

                    ; #24133: origin
                    (Bd_survivorat_s_p1)

                    ; #28259: origin
                    (msg_p1)

                    ; #34346: <==commonly_known== 28259 (pos)
                    (Bc_msg_p1)

                    ; #35183: <==commonly_known== 28259 (pos)
                    (Bb_msg_p1)

                    ; #37996: <==commonly_known== 28259 (pos)
                    (Ba_msg_p1)

                    ; #38028: <==closure== 24133 (pos)
                    (Pd_survivorat_s_p1)

                    ; #39680: <==commonly_known== 28259 (pos)
                    (Bd_msg_p1)

                    ; #48659: <==closure== 39680 (pos)
                    (Pd_msg_p1)

                    ; #60381: <==closure== 37996 (pos)
                    (Pa_msg_p1)

                    ; #66566: <==closure== 95856 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69908: origin
                    (Bc_survivorat_s_p1)

                    ; #85653: <==closure== 35183 (pos)
                    (Pb_msg_p1)

                    ; #95856: origin
                    (Ba_survivorat_s_p1)

                    ; #11478: <==negation-removal== 16843 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #18847: <==negation-removal== 66566 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #19624: <==negation-removal== 24133 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #21262: <==negation-removal== 39680 (pos)
                    (not (Pd_not_msg_p1))

                    ; #38231: <==negation-removal== 37996 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42292: <==negation-removal== 95856 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #42332: <==negation-removal== 60381 (pos)
                    (not (Ba_not_msg_p1))

                    ; #52598: <==negation-removal== 48659 (pos)
                    (not (Bd_not_msg_p1))

                    ; #54406: <==negation-removal== 19765 (pos)
                    (not (Bc_not_msg_p1))

                    ; #59351: <==negation-removal== 85653 (pos)
                    (not (Bb_not_msg_p1))

                    ; #65122: <==negation-removal== 16073 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #71128: <==negation-removal== 10437 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #71942: <==negation-removal== 28259 (pos)
                    (not (not_msg_p1))

                    ; #75199: <==negation-removal== 69908 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #79907: <==negation-removal== 38028 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #83694: <==negation-removal== 35183 (pos)
                    (not (Pb_not_msg_p1))

                    ; #84524: <==negation-removal== 34346 (pos)
                    (not (Pc_not_msg_p1))))

    (:action commsurvivor_p1_c_s
        :precondition (and (Pc_survivorat_s_p1)
                           (Bc_survivorat_s_p1)
                           (at_c_p1))
        :effect (and
                    ; #10437: <==closure== 16843 (pos)
                    (Pb_survivorat_s_p1)

                    ; #16073: <==closure== 69908 (pos)
                    (Pc_survivorat_s_p1)

                    ; #16843: origin
                    (Bb_survivorat_s_p1)

                    ; #19765: <==closure== 34346 (pos)
                    (Pc_msg_p1)

                    ; #24133: origin
                    (Bd_survivorat_s_p1)

                    ; #28259: origin
                    (msg_p1)

                    ; #34346: <==commonly_known== 28259 (pos)
                    (Bc_msg_p1)

                    ; #35183: <==commonly_known== 28259 (pos)
                    (Bb_msg_p1)

                    ; #37996: <==commonly_known== 28259 (pos)
                    (Ba_msg_p1)

                    ; #38028: <==closure== 24133 (pos)
                    (Pd_survivorat_s_p1)

                    ; #39680: <==commonly_known== 28259 (pos)
                    (Bd_msg_p1)

                    ; #48659: <==closure== 39680 (pos)
                    (Pd_msg_p1)

                    ; #60381: <==closure== 37996 (pos)
                    (Pa_msg_p1)

                    ; #66566: <==closure== 95856 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69908: origin
                    (Bc_survivorat_s_p1)

                    ; #85653: <==closure== 35183 (pos)
                    (Pb_msg_p1)

                    ; #95856: origin
                    (Ba_survivorat_s_p1)

                    ; #11478: <==negation-removal== 16843 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #18847: <==negation-removal== 66566 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #19624: <==negation-removal== 24133 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #21262: <==negation-removal== 39680 (pos)
                    (not (Pd_not_msg_p1))

                    ; #38231: <==negation-removal== 37996 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42292: <==negation-removal== 95856 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #42332: <==negation-removal== 60381 (pos)
                    (not (Ba_not_msg_p1))

                    ; #52598: <==negation-removal== 48659 (pos)
                    (not (Bd_not_msg_p1))

                    ; #54406: <==negation-removal== 19765 (pos)
                    (not (Bc_not_msg_p1))

                    ; #59351: <==negation-removal== 85653 (pos)
                    (not (Bb_not_msg_p1))

                    ; #65122: <==negation-removal== 16073 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #71128: <==negation-removal== 10437 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #71942: <==negation-removal== 28259 (pos)
                    (not (not_msg_p1))

                    ; #75199: <==negation-removal== 69908 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #79907: <==negation-removal== 38028 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #83694: <==negation-removal== 35183 (pos)
                    (not (Pb_not_msg_p1))

                    ; #84524: <==negation-removal== 34346 (pos)
                    (not (Pc_not_msg_p1))))

    (:action commsurvivor_p1_d_s
        :precondition (and (Pd_survivorat_s_p1)
                           (Bd_survivorat_s_p1)
                           (at_d_p1))
        :effect (and
                    ; #10437: <==closure== 16843 (pos)
                    (Pb_survivorat_s_p1)

                    ; #16073: <==closure== 69908 (pos)
                    (Pc_survivorat_s_p1)

                    ; #16843: origin
                    (Bb_survivorat_s_p1)

                    ; #19765: <==closure== 34346 (pos)
                    (Pc_msg_p1)

                    ; #24133: origin
                    (Bd_survivorat_s_p1)

                    ; #28259: origin
                    (msg_p1)

                    ; #34346: <==commonly_known== 28259 (pos)
                    (Bc_msg_p1)

                    ; #35183: <==commonly_known== 28259 (pos)
                    (Bb_msg_p1)

                    ; #37996: <==commonly_known== 28259 (pos)
                    (Ba_msg_p1)

                    ; #38028: <==closure== 24133 (pos)
                    (Pd_survivorat_s_p1)

                    ; #39680: <==commonly_known== 28259 (pos)
                    (Bd_msg_p1)

                    ; #48659: <==closure== 39680 (pos)
                    (Pd_msg_p1)

                    ; #60381: <==closure== 37996 (pos)
                    (Pa_msg_p1)

                    ; #66566: <==closure== 95856 (pos)
                    (Pa_survivorat_s_p1)

                    ; #69908: origin
                    (Bc_survivorat_s_p1)

                    ; #85653: <==closure== 35183 (pos)
                    (Pb_msg_p1)

                    ; #95856: origin
                    (Ba_survivorat_s_p1)

                    ; #11478: <==negation-removal== 16843 (pos)
                    (not (Pb_not_survivorat_s_p1))

                    ; #18847: <==negation-removal== 66566 (pos)
                    (not (Ba_not_survivorat_s_p1))

                    ; #19624: <==negation-removal== 24133 (pos)
                    (not (Pd_not_survivorat_s_p1))

                    ; #21262: <==negation-removal== 39680 (pos)
                    (not (Pd_not_msg_p1))

                    ; #38231: <==negation-removal== 37996 (pos)
                    (not (Pa_not_msg_p1))

                    ; #42292: <==negation-removal== 95856 (pos)
                    (not (Pa_not_survivorat_s_p1))

                    ; #42332: <==negation-removal== 60381 (pos)
                    (not (Ba_not_msg_p1))

                    ; #52598: <==negation-removal== 48659 (pos)
                    (not (Bd_not_msg_p1))

                    ; #54406: <==negation-removal== 19765 (pos)
                    (not (Bc_not_msg_p1))

                    ; #59351: <==negation-removal== 85653 (pos)
                    (not (Bb_not_msg_p1))

                    ; #65122: <==negation-removal== 16073 (pos)
                    (not (Bc_not_survivorat_s_p1))

                    ; #71128: <==negation-removal== 10437 (pos)
                    (not (Bb_not_survivorat_s_p1))

                    ; #71942: <==negation-removal== 28259 (pos)
                    (not (not_msg_p1))

                    ; #75199: <==negation-removal== 69908 (pos)
                    (not (Pc_not_survivorat_s_p1))

                    ; #79907: <==negation-removal== 38028 (pos)
                    (not (Bd_not_survivorat_s_p1))

                    ; #83694: <==negation-removal== 35183 (pos)
                    (not (Pb_not_msg_p1))

                    ; #84524: <==negation-removal== 34346 (pos)
                    (not (Pc_not_msg_p1))))

    (:action commsurvivor_p2_a_s
        :precondition (and (at_a_p2)
                           (Ba_survivorat_s_p2)
                           (Pa_survivorat_s_p2))
        :effect (and
                    ; #16120: origin
                    (msg_p2)

                    ; #20315: <==commonly_known== 16120 (pos)
                    (Bc_msg_p2)

                    ; #24366: origin
                    (Bd_survivorat_s_p2)

                    ; #24446: <==closure== 24366 (pos)
                    (Pd_survivorat_s_p2)

                    ; #24981: origin
                    (Bc_survivorat_s_p2)

                    ; #25675: origin
                    (Bb_survivorat_s_p2)

                    ; #27231: <==closure== 57528 (pos)
                    (Pd_msg_p2)

                    ; #28791: <==commonly_known== 16120 (pos)
                    (Ba_msg_p2)

                    ; #29384: <==closure== 28791 (pos)
                    (Pa_msg_p2)

                    ; #47966: <==closure== 24981 (pos)
                    (Pc_survivorat_s_p2)

                    ; #51328: <==closure== 72779 (pos)
                    (Pb_msg_p2)

                    ; #55735: <==closure== 20315 (pos)
                    (Pc_msg_p2)

                    ; #57528: <==commonly_known== 16120 (pos)
                    (Bd_msg_p2)

                    ; #59605: origin
                    (Ba_survivorat_s_p2)

                    ; #71661: <==closure== 59605 (pos)
                    (Pa_survivorat_s_p2)

                    ; #72779: <==commonly_known== 16120 (pos)
                    (Bb_msg_p2)

                    ; #87138: <==closure== 25675 (pos)
                    (Pb_survivorat_s_p2)

                    ; #22664: <==negation-removal== 72779 (pos)
                    (not (Pb_not_msg_p2))

                    ; #29201: <==negation-removal== 51328 (pos)
                    (not (Bb_not_msg_p2))

                    ; #38312: <==negation-removal== 28791 (pos)
                    (not (Pa_not_msg_p2))

                    ; #38845: <==negation-removal== 59605 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #47746: <==negation-removal== 16120 (pos)
                    (not (not_msg_p2))

                    ; #52427: <==negation-removal== 71661 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #54878: <==negation-removal== 55735 (pos)
                    (not (Bc_not_msg_p2))

                    ; #56486: <==negation-removal== 20315 (pos)
                    (not (Pc_not_msg_p2))

                    ; #57260: <==negation-removal== 25675 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #68871: <==negation-removal== 24981 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73401: <==negation-removal== 57528 (pos)
                    (not (Pd_not_msg_p2))

                    ; #73916: <==negation-removal== 24446 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #77595: <==negation-removal== 29384 (pos)
                    (not (Ba_not_msg_p2))

                    ; #78173: <==negation-removal== 47966 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #79445: <==negation-removal== 87138 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #81206: <==negation-removal== 24366 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #84409: <==negation-removal== 27231 (pos)
                    (not (Bd_not_msg_p2))))

    (:action commsurvivor_p2_b_s
        :precondition (and (at_b_p2)
                           (Bb_survivorat_s_p2)
                           (Pb_survivorat_s_p2))
        :effect (and
                    ; #16120: origin
                    (msg_p2)

                    ; #20315: <==commonly_known== 16120 (pos)
                    (Bc_msg_p2)

                    ; #24366: origin
                    (Bd_survivorat_s_p2)

                    ; #24446: <==closure== 24366 (pos)
                    (Pd_survivorat_s_p2)

                    ; #24981: origin
                    (Bc_survivorat_s_p2)

                    ; #25675: origin
                    (Bb_survivorat_s_p2)

                    ; #27231: <==closure== 57528 (pos)
                    (Pd_msg_p2)

                    ; #28791: <==commonly_known== 16120 (pos)
                    (Ba_msg_p2)

                    ; #29384: <==closure== 28791 (pos)
                    (Pa_msg_p2)

                    ; #47966: <==closure== 24981 (pos)
                    (Pc_survivorat_s_p2)

                    ; #51328: <==closure== 72779 (pos)
                    (Pb_msg_p2)

                    ; #55735: <==closure== 20315 (pos)
                    (Pc_msg_p2)

                    ; #57528: <==commonly_known== 16120 (pos)
                    (Bd_msg_p2)

                    ; #59605: origin
                    (Ba_survivorat_s_p2)

                    ; #71661: <==closure== 59605 (pos)
                    (Pa_survivorat_s_p2)

                    ; #72779: <==commonly_known== 16120 (pos)
                    (Bb_msg_p2)

                    ; #87138: <==closure== 25675 (pos)
                    (Pb_survivorat_s_p2)

                    ; #22664: <==negation-removal== 72779 (pos)
                    (not (Pb_not_msg_p2))

                    ; #29201: <==negation-removal== 51328 (pos)
                    (not (Bb_not_msg_p2))

                    ; #38312: <==negation-removal== 28791 (pos)
                    (not (Pa_not_msg_p2))

                    ; #38845: <==negation-removal== 59605 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #47746: <==negation-removal== 16120 (pos)
                    (not (not_msg_p2))

                    ; #52427: <==negation-removal== 71661 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #54878: <==negation-removal== 55735 (pos)
                    (not (Bc_not_msg_p2))

                    ; #56486: <==negation-removal== 20315 (pos)
                    (not (Pc_not_msg_p2))

                    ; #57260: <==negation-removal== 25675 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #68871: <==negation-removal== 24981 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73401: <==negation-removal== 57528 (pos)
                    (not (Pd_not_msg_p2))

                    ; #73916: <==negation-removal== 24446 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #77595: <==negation-removal== 29384 (pos)
                    (not (Ba_not_msg_p2))

                    ; #78173: <==negation-removal== 47966 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #79445: <==negation-removal== 87138 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #81206: <==negation-removal== 24366 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #84409: <==negation-removal== 27231 (pos)
                    (not (Bd_not_msg_p2))))

    (:action commsurvivor_p2_c_s
        :precondition (and (Pc_survivorat_s_p2)
                           (Bc_survivorat_s_p2)
                           (at_c_p2))
        :effect (and
                    ; #16120: origin
                    (msg_p2)

                    ; #20315: <==commonly_known== 16120 (pos)
                    (Bc_msg_p2)

                    ; #24366: origin
                    (Bd_survivorat_s_p2)

                    ; #24446: <==closure== 24366 (pos)
                    (Pd_survivorat_s_p2)

                    ; #24981: origin
                    (Bc_survivorat_s_p2)

                    ; #25675: origin
                    (Bb_survivorat_s_p2)

                    ; #27231: <==closure== 57528 (pos)
                    (Pd_msg_p2)

                    ; #28791: <==commonly_known== 16120 (pos)
                    (Ba_msg_p2)

                    ; #29384: <==closure== 28791 (pos)
                    (Pa_msg_p2)

                    ; #47966: <==closure== 24981 (pos)
                    (Pc_survivorat_s_p2)

                    ; #51328: <==closure== 72779 (pos)
                    (Pb_msg_p2)

                    ; #55735: <==closure== 20315 (pos)
                    (Pc_msg_p2)

                    ; #57528: <==commonly_known== 16120 (pos)
                    (Bd_msg_p2)

                    ; #59605: origin
                    (Ba_survivorat_s_p2)

                    ; #71661: <==closure== 59605 (pos)
                    (Pa_survivorat_s_p2)

                    ; #72779: <==commonly_known== 16120 (pos)
                    (Bb_msg_p2)

                    ; #87138: <==closure== 25675 (pos)
                    (Pb_survivorat_s_p2)

                    ; #22664: <==negation-removal== 72779 (pos)
                    (not (Pb_not_msg_p2))

                    ; #29201: <==negation-removal== 51328 (pos)
                    (not (Bb_not_msg_p2))

                    ; #38312: <==negation-removal== 28791 (pos)
                    (not (Pa_not_msg_p2))

                    ; #38845: <==negation-removal== 59605 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #47746: <==negation-removal== 16120 (pos)
                    (not (not_msg_p2))

                    ; #52427: <==negation-removal== 71661 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #54878: <==negation-removal== 55735 (pos)
                    (not (Bc_not_msg_p2))

                    ; #56486: <==negation-removal== 20315 (pos)
                    (not (Pc_not_msg_p2))

                    ; #57260: <==negation-removal== 25675 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #68871: <==negation-removal== 24981 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73401: <==negation-removal== 57528 (pos)
                    (not (Pd_not_msg_p2))

                    ; #73916: <==negation-removal== 24446 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #77595: <==negation-removal== 29384 (pos)
                    (not (Ba_not_msg_p2))

                    ; #78173: <==negation-removal== 47966 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #79445: <==negation-removal== 87138 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #81206: <==negation-removal== 24366 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #84409: <==negation-removal== 27231 (pos)
                    (not (Bd_not_msg_p2))))

    (:action commsurvivor_p2_d_s
        :precondition (and (at_d_p2)
                           (Pd_survivorat_s_p2)
                           (Bd_survivorat_s_p2))
        :effect (and
                    ; #16120: origin
                    (msg_p2)

                    ; #20315: <==commonly_known== 16120 (pos)
                    (Bc_msg_p2)

                    ; #24366: origin
                    (Bd_survivorat_s_p2)

                    ; #24446: <==closure== 24366 (pos)
                    (Pd_survivorat_s_p2)

                    ; #24981: origin
                    (Bc_survivorat_s_p2)

                    ; #25675: origin
                    (Bb_survivorat_s_p2)

                    ; #27231: <==closure== 57528 (pos)
                    (Pd_msg_p2)

                    ; #28791: <==commonly_known== 16120 (pos)
                    (Ba_msg_p2)

                    ; #29384: <==closure== 28791 (pos)
                    (Pa_msg_p2)

                    ; #47966: <==closure== 24981 (pos)
                    (Pc_survivorat_s_p2)

                    ; #51328: <==closure== 72779 (pos)
                    (Pb_msg_p2)

                    ; #55735: <==closure== 20315 (pos)
                    (Pc_msg_p2)

                    ; #57528: <==commonly_known== 16120 (pos)
                    (Bd_msg_p2)

                    ; #59605: origin
                    (Ba_survivorat_s_p2)

                    ; #71661: <==closure== 59605 (pos)
                    (Pa_survivorat_s_p2)

                    ; #72779: <==commonly_known== 16120 (pos)
                    (Bb_msg_p2)

                    ; #87138: <==closure== 25675 (pos)
                    (Pb_survivorat_s_p2)

                    ; #22664: <==negation-removal== 72779 (pos)
                    (not (Pb_not_msg_p2))

                    ; #29201: <==negation-removal== 51328 (pos)
                    (not (Bb_not_msg_p2))

                    ; #38312: <==negation-removal== 28791 (pos)
                    (not (Pa_not_msg_p2))

                    ; #38845: <==negation-removal== 59605 (pos)
                    (not (Pa_not_survivorat_s_p2))

                    ; #47746: <==negation-removal== 16120 (pos)
                    (not (not_msg_p2))

                    ; #52427: <==negation-removal== 71661 (pos)
                    (not (Ba_not_survivorat_s_p2))

                    ; #54878: <==negation-removal== 55735 (pos)
                    (not (Bc_not_msg_p2))

                    ; #56486: <==negation-removal== 20315 (pos)
                    (not (Pc_not_msg_p2))

                    ; #57260: <==negation-removal== 25675 (pos)
                    (not (Pb_not_survivorat_s_p2))

                    ; #68871: <==negation-removal== 24981 (pos)
                    (not (Pc_not_survivorat_s_p2))

                    ; #73401: <==negation-removal== 57528 (pos)
                    (not (Pd_not_msg_p2))

                    ; #73916: <==negation-removal== 24446 (pos)
                    (not (Bd_not_survivorat_s_p2))

                    ; #77595: <==negation-removal== 29384 (pos)
                    (not (Ba_not_msg_p2))

                    ; #78173: <==negation-removal== 47966 (pos)
                    (not (Bc_not_survivorat_s_p2))

                    ; #79445: <==negation-removal== 87138 (pos)
                    (not (Bb_not_survivorat_s_p2))

                    ; #81206: <==negation-removal== 24366 (pos)
                    (not (Pd_not_survivorat_s_p2))

                    ; #84409: <==negation-removal== 27231 (pos)
                    (not (Bd_not_msg_p2))))

    (:action commsurvivor_p3_a_s
        :precondition (and (Ba_survivorat_s_p3)
                           (Pa_survivorat_s_p3)
                           (at_a_p3))
        :effect (and
                    ; #15650: origin
                    (Bc_survivorat_s_p3)

                    ; #16464: <==closure== 31869 (pos)
                    (Pb_msg_p3)

                    ; #19468: <==closure== 83298 (pos)
                    (Pa_msg_p3)

                    ; #19538: origin
                    (Ba_survivorat_s_p3)

                    ; #28111: <==closure== 35041 (pos)
                    (Pc_msg_p3)

                    ; #29163: origin
                    (msg_p3)

                    ; #31869: <==commonly_known== 29163 (pos)
                    (Bb_msg_p3)

                    ; #35030: <==closure== 15650 (pos)
                    (Pc_survivorat_s_p3)

                    ; #35041: <==commonly_known== 29163 (pos)
                    (Bc_msg_p3)

                    ; #44204: <==closure== 19538 (pos)
                    (Pa_survivorat_s_p3)

                    ; #51238: <==closure== 88582 (pos)
                    (Pd_msg_p3)

                    ; #54255: origin
                    (Bb_survivorat_s_p3)

                    ; #80276: origin
                    (Bd_survivorat_s_p3)

                    ; #83298: <==commonly_known== 29163 (pos)
                    (Ba_msg_p3)

                    ; #83507: <==closure== 80276 (pos)
                    (Pd_survivorat_s_p3)

                    ; #88582: <==commonly_known== 29163 (pos)
                    (Bd_msg_p3)

                    ; #88712: <==closure== 54255 (pos)
                    (Pb_survivorat_s_p3)

                    ; #11500: <==negation-removal== 44204 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #12697: <==negation-removal== 54255 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #21354: <==negation-removal== 51238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #28403: <==negation-removal== 88582 (pos)
                    (not (Pd_not_msg_p3))

                    ; #33633: <==negation-removal== 19468 (pos)
                    (not (Ba_not_msg_p3))

                    ; #41964: <==negation-removal== 83507 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #48501: <==negation-removal== 31869 (pos)
                    (not (Pb_not_msg_p3))

                    ; #48756: <==negation-removal== 80276 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #56581: <==negation-removal== 19538 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59414: <==negation-removal== 15650 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #61733: <==negation-removal== 29163 (pos)
                    (not (not_msg_p3))

                    ; #65696: <==negation-removal== 28111 (pos)
                    (not (Bc_not_msg_p3))

                    ; #76404: <==negation-removal== 83298 (pos)
                    (not (Pa_not_msg_p3))

                    ; #78449: <==negation-removal== 88712 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #81450: <==negation-removal== 16464 (pos)
                    (not (Bb_not_msg_p3))

                    ; #90265: <==negation-removal== 35030 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #90664: <==negation-removal== 35041 (pos)
                    (not (Pc_not_msg_p3))))

    (:action commsurvivor_p3_b_s
        :precondition (and (at_b_p3)
                           (Bb_survivorat_s_p3)
                           (Pb_survivorat_s_p3))
        :effect (and
                    ; #15650: origin
                    (Bc_survivorat_s_p3)

                    ; #16464: <==closure== 31869 (pos)
                    (Pb_msg_p3)

                    ; #19468: <==closure== 83298 (pos)
                    (Pa_msg_p3)

                    ; #19538: origin
                    (Ba_survivorat_s_p3)

                    ; #28111: <==closure== 35041 (pos)
                    (Pc_msg_p3)

                    ; #29163: origin
                    (msg_p3)

                    ; #31869: <==commonly_known== 29163 (pos)
                    (Bb_msg_p3)

                    ; #35030: <==closure== 15650 (pos)
                    (Pc_survivorat_s_p3)

                    ; #35041: <==commonly_known== 29163 (pos)
                    (Bc_msg_p3)

                    ; #44204: <==closure== 19538 (pos)
                    (Pa_survivorat_s_p3)

                    ; #51238: <==closure== 88582 (pos)
                    (Pd_msg_p3)

                    ; #54255: origin
                    (Bb_survivorat_s_p3)

                    ; #80276: origin
                    (Bd_survivorat_s_p3)

                    ; #83298: <==commonly_known== 29163 (pos)
                    (Ba_msg_p3)

                    ; #83507: <==closure== 80276 (pos)
                    (Pd_survivorat_s_p3)

                    ; #88582: <==commonly_known== 29163 (pos)
                    (Bd_msg_p3)

                    ; #88712: <==closure== 54255 (pos)
                    (Pb_survivorat_s_p3)

                    ; #11500: <==negation-removal== 44204 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #12697: <==negation-removal== 54255 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #21354: <==negation-removal== 51238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #28403: <==negation-removal== 88582 (pos)
                    (not (Pd_not_msg_p3))

                    ; #33633: <==negation-removal== 19468 (pos)
                    (not (Ba_not_msg_p3))

                    ; #41964: <==negation-removal== 83507 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #48501: <==negation-removal== 31869 (pos)
                    (not (Pb_not_msg_p3))

                    ; #48756: <==negation-removal== 80276 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #56581: <==negation-removal== 19538 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59414: <==negation-removal== 15650 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #61733: <==negation-removal== 29163 (pos)
                    (not (not_msg_p3))

                    ; #65696: <==negation-removal== 28111 (pos)
                    (not (Bc_not_msg_p3))

                    ; #76404: <==negation-removal== 83298 (pos)
                    (not (Pa_not_msg_p3))

                    ; #78449: <==negation-removal== 88712 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #81450: <==negation-removal== 16464 (pos)
                    (not (Bb_not_msg_p3))

                    ; #90265: <==negation-removal== 35030 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #90664: <==negation-removal== 35041 (pos)
                    (not (Pc_not_msg_p3))))

    (:action commsurvivor_p3_c_s
        :precondition (and (Pc_survivorat_s_p3)
                           (at_c_p3)
                           (Bc_survivorat_s_p3))
        :effect (and
                    ; #15650: origin
                    (Bc_survivorat_s_p3)

                    ; #16464: <==closure== 31869 (pos)
                    (Pb_msg_p3)

                    ; #19468: <==closure== 83298 (pos)
                    (Pa_msg_p3)

                    ; #19538: origin
                    (Ba_survivorat_s_p3)

                    ; #28111: <==closure== 35041 (pos)
                    (Pc_msg_p3)

                    ; #29163: origin
                    (msg_p3)

                    ; #31869: <==commonly_known== 29163 (pos)
                    (Bb_msg_p3)

                    ; #35030: <==closure== 15650 (pos)
                    (Pc_survivorat_s_p3)

                    ; #35041: <==commonly_known== 29163 (pos)
                    (Bc_msg_p3)

                    ; #44204: <==closure== 19538 (pos)
                    (Pa_survivorat_s_p3)

                    ; #51238: <==closure== 88582 (pos)
                    (Pd_msg_p3)

                    ; #54255: origin
                    (Bb_survivorat_s_p3)

                    ; #80276: origin
                    (Bd_survivorat_s_p3)

                    ; #83298: <==commonly_known== 29163 (pos)
                    (Ba_msg_p3)

                    ; #83507: <==closure== 80276 (pos)
                    (Pd_survivorat_s_p3)

                    ; #88582: <==commonly_known== 29163 (pos)
                    (Bd_msg_p3)

                    ; #88712: <==closure== 54255 (pos)
                    (Pb_survivorat_s_p3)

                    ; #11500: <==negation-removal== 44204 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #12697: <==negation-removal== 54255 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #21354: <==negation-removal== 51238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #28403: <==negation-removal== 88582 (pos)
                    (not (Pd_not_msg_p3))

                    ; #33633: <==negation-removal== 19468 (pos)
                    (not (Ba_not_msg_p3))

                    ; #41964: <==negation-removal== 83507 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #48501: <==negation-removal== 31869 (pos)
                    (not (Pb_not_msg_p3))

                    ; #48756: <==negation-removal== 80276 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #56581: <==negation-removal== 19538 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59414: <==negation-removal== 15650 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #61733: <==negation-removal== 29163 (pos)
                    (not (not_msg_p3))

                    ; #65696: <==negation-removal== 28111 (pos)
                    (not (Bc_not_msg_p3))

                    ; #76404: <==negation-removal== 83298 (pos)
                    (not (Pa_not_msg_p3))

                    ; #78449: <==negation-removal== 88712 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #81450: <==negation-removal== 16464 (pos)
                    (not (Bb_not_msg_p3))

                    ; #90265: <==negation-removal== 35030 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #90664: <==negation-removal== 35041 (pos)
                    (not (Pc_not_msg_p3))))

    (:action commsurvivor_p3_d_s
        :precondition (and (Bd_survivorat_s_p3)
                           (Pd_survivorat_s_p3)
                           (at_d_p3))
        :effect (and
                    ; #15650: origin
                    (Bc_survivorat_s_p3)

                    ; #16464: <==closure== 31869 (pos)
                    (Pb_msg_p3)

                    ; #19468: <==closure== 83298 (pos)
                    (Pa_msg_p3)

                    ; #19538: origin
                    (Ba_survivorat_s_p3)

                    ; #28111: <==closure== 35041 (pos)
                    (Pc_msg_p3)

                    ; #29163: origin
                    (msg_p3)

                    ; #31869: <==commonly_known== 29163 (pos)
                    (Bb_msg_p3)

                    ; #35030: <==closure== 15650 (pos)
                    (Pc_survivorat_s_p3)

                    ; #35041: <==commonly_known== 29163 (pos)
                    (Bc_msg_p3)

                    ; #44204: <==closure== 19538 (pos)
                    (Pa_survivorat_s_p3)

                    ; #51238: <==closure== 88582 (pos)
                    (Pd_msg_p3)

                    ; #54255: origin
                    (Bb_survivorat_s_p3)

                    ; #80276: origin
                    (Bd_survivorat_s_p3)

                    ; #83298: <==commonly_known== 29163 (pos)
                    (Ba_msg_p3)

                    ; #83507: <==closure== 80276 (pos)
                    (Pd_survivorat_s_p3)

                    ; #88582: <==commonly_known== 29163 (pos)
                    (Bd_msg_p3)

                    ; #88712: <==closure== 54255 (pos)
                    (Pb_survivorat_s_p3)

                    ; #11500: <==negation-removal== 44204 (pos)
                    (not (Ba_not_survivorat_s_p3))

                    ; #12697: <==negation-removal== 54255 (pos)
                    (not (Pb_not_survivorat_s_p3))

                    ; #21354: <==negation-removal== 51238 (pos)
                    (not (Bd_not_msg_p3))

                    ; #28403: <==negation-removal== 88582 (pos)
                    (not (Pd_not_msg_p3))

                    ; #33633: <==negation-removal== 19468 (pos)
                    (not (Ba_not_msg_p3))

                    ; #41964: <==negation-removal== 83507 (pos)
                    (not (Bd_not_survivorat_s_p3))

                    ; #48501: <==negation-removal== 31869 (pos)
                    (not (Pb_not_msg_p3))

                    ; #48756: <==negation-removal== 80276 (pos)
                    (not (Pd_not_survivorat_s_p3))

                    ; #56581: <==negation-removal== 19538 (pos)
                    (not (Pa_not_survivorat_s_p3))

                    ; #59414: <==negation-removal== 15650 (pos)
                    (not (Pc_not_survivorat_s_p3))

                    ; #61733: <==negation-removal== 29163 (pos)
                    (not (not_msg_p3))

                    ; #65696: <==negation-removal== 28111 (pos)
                    (not (Bc_not_msg_p3))

                    ; #76404: <==negation-removal== 83298 (pos)
                    (not (Pa_not_msg_p3))

                    ; #78449: <==negation-removal== 88712 (pos)
                    (not (Bb_not_survivorat_s_p3))

                    ; #81450: <==negation-removal== 16464 (pos)
                    (not (Bb_not_msg_p3))

                    ; #90265: <==negation-removal== 35030 (pos)
                    (not (Bc_not_survivorat_s_p3))

                    ; #90664: <==negation-removal== 35041 (pos)
                    (not (Pc_not_msg_p3))))

    (:action commsurvivor_p4_a_s
        :precondition (and (Ba_survivorat_s_p4)
                           (at_a_p4)
                           (Pa_survivorat_s_p4))
        :effect (and
                    ; #12404: <==commonly_known== 61838 (pos)
                    (Ba_msg_p4)

                    ; #13722: <==closure== 74141 (pos)
                    (Pd_msg_p4)

                    ; #19966: <==closure== 25369 (pos)
                    (Pb_survivorat_s_p4)

                    ; #20353: <==closure== 81147 (pos)
                    (Pc_msg_p4)

                    ; #21107: <==commonly_known== 61838 (pos)
                    (Bb_msg_p4)

                    ; #24684: <==closure== 12404 (pos)
                    (Pa_msg_p4)

                    ; #25369: origin
                    (Bb_survivorat_s_p4)

                    ; #28615: <==closure== 87439 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37294: origin
                    (Bd_survivorat_s_p4)

                    ; #44124: <==closure== 21107 (pos)
                    (Pb_msg_p4)

                    ; #44151: origin
                    (Bc_survivorat_s_p4)

                    ; #61838: origin
                    (msg_p4)

                    ; #64404: <==closure== 44151 (pos)
                    (Pc_survivorat_s_p4)

                    ; #64469: <==closure== 37294 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74141: <==commonly_known== 61838 (pos)
                    (Bd_msg_p4)

                    ; #81147: <==commonly_known== 61838 (pos)
                    (Bc_msg_p4)

                    ; #87439: origin
                    (Ba_survivorat_s_p4)

                    ; #11346: <==negation-removal== 44151 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #25351: <==negation-removal== 13722 (pos)
                    (not (Bd_not_msg_p4))

                    ; #26663: <==negation-removal== 37294 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #32262: <==negation-removal== 20353 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35349: <==negation-removal== 25369 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #39766: <==negation-removal== 19966 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #49616: <==negation-removal== 24684 (pos)
                    (not (Ba_not_msg_p4))

                    ; #54178: <==negation-removal== 21107 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57149: <==negation-removal== 28615 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #59273: <==negation-removal== 81147 (pos)
                    (not (Pc_not_msg_p4))

                    ; #71882: <==negation-removal== 87439 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #78603: <==negation-removal== 44124 (pos)
                    (not (Bb_not_msg_p4))

                    ; #84381: <==negation-removal== 12404 (pos)
                    (not (Pa_not_msg_p4))

                    ; #85713: <==negation-removal== 74141 (pos)
                    (not (Pd_not_msg_p4))

                    ; #91257: <==negation-removal== 61838 (pos)
                    (not (not_msg_p4))

                    ; #91664: <==negation-removal== 64469 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #98363: <==negation-removal== 64404 (pos)
                    (not (Bc_not_survivorat_s_p4))))

    (:action commsurvivor_p4_b_s
        :precondition (and (Pb_survivorat_s_p4)
                           (at_b_p4)
                           (Bb_survivorat_s_p4))
        :effect (and
                    ; #12404: <==commonly_known== 61838 (pos)
                    (Ba_msg_p4)

                    ; #13722: <==closure== 74141 (pos)
                    (Pd_msg_p4)

                    ; #19966: <==closure== 25369 (pos)
                    (Pb_survivorat_s_p4)

                    ; #20353: <==closure== 81147 (pos)
                    (Pc_msg_p4)

                    ; #21107: <==commonly_known== 61838 (pos)
                    (Bb_msg_p4)

                    ; #24684: <==closure== 12404 (pos)
                    (Pa_msg_p4)

                    ; #25369: origin
                    (Bb_survivorat_s_p4)

                    ; #28615: <==closure== 87439 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37294: origin
                    (Bd_survivorat_s_p4)

                    ; #44124: <==closure== 21107 (pos)
                    (Pb_msg_p4)

                    ; #44151: origin
                    (Bc_survivorat_s_p4)

                    ; #61838: origin
                    (msg_p4)

                    ; #64404: <==closure== 44151 (pos)
                    (Pc_survivorat_s_p4)

                    ; #64469: <==closure== 37294 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74141: <==commonly_known== 61838 (pos)
                    (Bd_msg_p4)

                    ; #81147: <==commonly_known== 61838 (pos)
                    (Bc_msg_p4)

                    ; #87439: origin
                    (Ba_survivorat_s_p4)

                    ; #11346: <==negation-removal== 44151 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #25351: <==negation-removal== 13722 (pos)
                    (not (Bd_not_msg_p4))

                    ; #26663: <==negation-removal== 37294 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #32262: <==negation-removal== 20353 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35349: <==negation-removal== 25369 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #39766: <==negation-removal== 19966 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #49616: <==negation-removal== 24684 (pos)
                    (not (Ba_not_msg_p4))

                    ; #54178: <==negation-removal== 21107 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57149: <==negation-removal== 28615 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #59273: <==negation-removal== 81147 (pos)
                    (not (Pc_not_msg_p4))

                    ; #71882: <==negation-removal== 87439 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #78603: <==negation-removal== 44124 (pos)
                    (not (Bb_not_msg_p4))

                    ; #84381: <==negation-removal== 12404 (pos)
                    (not (Pa_not_msg_p4))

                    ; #85713: <==negation-removal== 74141 (pos)
                    (not (Pd_not_msg_p4))

                    ; #91257: <==negation-removal== 61838 (pos)
                    (not (not_msg_p4))

                    ; #91664: <==negation-removal== 64469 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #98363: <==negation-removal== 64404 (pos)
                    (not (Bc_not_survivorat_s_p4))))

    (:action commsurvivor_p4_c_s
        :precondition (and (at_c_p4)
                           (Pc_survivorat_s_p4)
                           (Bc_survivorat_s_p4))
        :effect (and
                    ; #12404: <==commonly_known== 61838 (pos)
                    (Ba_msg_p4)

                    ; #13722: <==closure== 74141 (pos)
                    (Pd_msg_p4)

                    ; #19966: <==closure== 25369 (pos)
                    (Pb_survivorat_s_p4)

                    ; #20353: <==closure== 81147 (pos)
                    (Pc_msg_p4)

                    ; #21107: <==commonly_known== 61838 (pos)
                    (Bb_msg_p4)

                    ; #24684: <==closure== 12404 (pos)
                    (Pa_msg_p4)

                    ; #25369: origin
                    (Bb_survivorat_s_p4)

                    ; #28615: <==closure== 87439 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37294: origin
                    (Bd_survivorat_s_p4)

                    ; #44124: <==closure== 21107 (pos)
                    (Pb_msg_p4)

                    ; #44151: origin
                    (Bc_survivorat_s_p4)

                    ; #61838: origin
                    (msg_p4)

                    ; #64404: <==closure== 44151 (pos)
                    (Pc_survivorat_s_p4)

                    ; #64469: <==closure== 37294 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74141: <==commonly_known== 61838 (pos)
                    (Bd_msg_p4)

                    ; #81147: <==commonly_known== 61838 (pos)
                    (Bc_msg_p4)

                    ; #87439: origin
                    (Ba_survivorat_s_p4)

                    ; #11346: <==negation-removal== 44151 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #25351: <==negation-removal== 13722 (pos)
                    (not (Bd_not_msg_p4))

                    ; #26663: <==negation-removal== 37294 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #32262: <==negation-removal== 20353 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35349: <==negation-removal== 25369 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #39766: <==negation-removal== 19966 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #49616: <==negation-removal== 24684 (pos)
                    (not (Ba_not_msg_p4))

                    ; #54178: <==negation-removal== 21107 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57149: <==negation-removal== 28615 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #59273: <==negation-removal== 81147 (pos)
                    (not (Pc_not_msg_p4))

                    ; #71882: <==negation-removal== 87439 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #78603: <==negation-removal== 44124 (pos)
                    (not (Bb_not_msg_p4))

                    ; #84381: <==negation-removal== 12404 (pos)
                    (not (Pa_not_msg_p4))

                    ; #85713: <==negation-removal== 74141 (pos)
                    (not (Pd_not_msg_p4))

                    ; #91257: <==negation-removal== 61838 (pos)
                    (not (not_msg_p4))

                    ; #91664: <==negation-removal== 64469 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #98363: <==negation-removal== 64404 (pos)
                    (not (Bc_not_survivorat_s_p4))))

    (:action commsurvivor_p4_d_s
        :precondition (and (Bd_survivorat_s_p4)
                           (Pd_survivorat_s_p4)
                           (at_d_p4))
        :effect (and
                    ; #12404: <==commonly_known== 61838 (pos)
                    (Ba_msg_p4)

                    ; #13722: <==closure== 74141 (pos)
                    (Pd_msg_p4)

                    ; #19966: <==closure== 25369 (pos)
                    (Pb_survivorat_s_p4)

                    ; #20353: <==closure== 81147 (pos)
                    (Pc_msg_p4)

                    ; #21107: <==commonly_known== 61838 (pos)
                    (Bb_msg_p4)

                    ; #24684: <==closure== 12404 (pos)
                    (Pa_msg_p4)

                    ; #25369: origin
                    (Bb_survivorat_s_p4)

                    ; #28615: <==closure== 87439 (pos)
                    (Pa_survivorat_s_p4)

                    ; #37294: origin
                    (Bd_survivorat_s_p4)

                    ; #44124: <==closure== 21107 (pos)
                    (Pb_msg_p4)

                    ; #44151: origin
                    (Bc_survivorat_s_p4)

                    ; #61838: origin
                    (msg_p4)

                    ; #64404: <==closure== 44151 (pos)
                    (Pc_survivorat_s_p4)

                    ; #64469: <==closure== 37294 (pos)
                    (Pd_survivorat_s_p4)

                    ; #74141: <==commonly_known== 61838 (pos)
                    (Bd_msg_p4)

                    ; #81147: <==commonly_known== 61838 (pos)
                    (Bc_msg_p4)

                    ; #87439: origin
                    (Ba_survivorat_s_p4)

                    ; #11346: <==negation-removal== 44151 (pos)
                    (not (Pc_not_survivorat_s_p4))

                    ; #25351: <==negation-removal== 13722 (pos)
                    (not (Bd_not_msg_p4))

                    ; #26663: <==negation-removal== 37294 (pos)
                    (not (Pd_not_survivorat_s_p4))

                    ; #32262: <==negation-removal== 20353 (pos)
                    (not (Bc_not_msg_p4))

                    ; #35349: <==negation-removal== 25369 (pos)
                    (not (Pb_not_survivorat_s_p4))

                    ; #39766: <==negation-removal== 19966 (pos)
                    (not (Bb_not_survivorat_s_p4))

                    ; #49616: <==negation-removal== 24684 (pos)
                    (not (Ba_not_msg_p4))

                    ; #54178: <==negation-removal== 21107 (pos)
                    (not (Pb_not_msg_p4))

                    ; #57149: <==negation-removal== 28615 (pos)
                    (not (Ba_not_survivorat_s_p4))

                    ; #59273: <==negation-removal== 81147 (pos)
                    (not (Pc_not_msg_p4))

                    ; #71882: <==negation-removal== 87439 (pos)
                    (not (Pa_not_survivorat_s_p4))

                    ; #78603: <==negation-removal== 44124 (pos)
                    (not (Bb_not_msg_p4))

                    ; #84381: <==negation-removal== 12404 (pos)
                    (not (Pa_not_msg_p4))

                    ; #85713: <==negation-removal== 74141 (pos)
                    (not (Pd_not_msg_p4))

                    ; #91257: <==negation-removal== 61838 (pos)
                    (not (not_msg_p4))

                    ; #91664: <==negation-removal== 64469 (pos)
                    (not (Bd_not_survivorat_s_p4))

                    ; #98363: <==negation-removal== 64404 (pos)
                    (not (Bc_not_survivorat_s_p4))))

    (:action commsurvivor_p5_a_s
        :precondition (and (Ba_survivorat_s_p5)
                           (Pa_survivorat_s_p5)
                           (at_a_p5))
        :effect (and
                    ; #10643: <==closure== 69126 (pos)
                    (Pc_survivorat_s_p5)

                    ; #11147: origin
                    (Bd_survivorat_s_p5)

                    ; #14218: <==closure== 48685 (pos)
                    (Pb_survivorat_s_p5)

                    ; #35532: origin
                    (Ba_survivorat_s_p5)

                    ; #39494: <==closure== 11147 (pos)
                    (Pd_survivorat_s_p5)

                    ; #45731: <==closure== 56866 (pos)
                    (Pc_msg_p5)

                    ; #48685: origin
                    (Bb_survivorat_s_p5)

                    ; #49908: <==closure== 85741 (pos)
                    (Pb_msg_p5)

                    ; #52096: <==commonly_known== 88748 (pos)
                    (Bd_msg_p5)

                    ; #53491: <==commonly_known== 88748 (pos)
                    (Ba_msg_p5)

                    ; #56866: <==commonly_known== 88748 (pos)
                    (Bc_msg_p5)

                    ; #69126: origin
                    (Bc_survivorat_s_p5)

                    ; #74295: <==closure== 52096 (pos)
                    (Pd_msg_p5)

                    ; #85741: <==commonly_known== 88748 (pos)
                    (Bb_msg_p5)

                    ; #88720: <==closure== 53491 (pos)
                    (Pa_msg_p5)

                    ; #88748: origin
                    (msg_p5)

                    ; #89980: <==closure== 35532 (pos)
                    (Pa_survivorat_s_p5)

                    ; #13514: <==negation-removal== 39494 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #16386: <==negation-removal== 69126 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #16531: <==negation-removal== 49908 (pos)
                    (not (Bb_not_msg_p5))

                    ; #21885: <==negation-removal== 88748 (pos)
                    (not (not_msg_p5))

                    ; #22572: <==negation-removal== 35532 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #23218: <==negation-removal== 74295 (pos)
                    (not (Bd_not_msg_p5))

                    ; #24874: <==negation-removal== 48685 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #30192: <==negation-removal== 56866 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35565: <==negation-removal== 89980 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #37155: <==negation-removal== 85741 (pos)
                    (not (Pb_not_msg_p5))

                    ; #38811: <==negation-removal== 45731 (pos)
                    (not (Bc_not_msg_p5))

                    ; #38935: <==negation-removal== 10643 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #48761: <==negation-removal== 52096 (pos)
                    (not (Pd_not_msg_p5))

                    ; #56986: <==negation-removal== 88720 (pos)
                    (not (Ba_not_msg_p5))

                    ; #67626: <==negation-removal== 53491 (pos)
                    (not (Pa_not_msg_p5))

                    ; #71698: <==negation-removal== 11147 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #72808: <==negation-removal== 14218 (pos)
                    (not (Bb_not_survivorat_s_p5))))

    (:action commsurvivor_p5_b_s
        :precondition (and (Pb_survivorat_s_p5)
                           (at_b_p5)
                           (Bb_survivorat_s_p5))
        :effect (and
                    ; #10643: <==closure== 69126 (pos)
                    (Pc_survivorat_s_p5)

                    ; #11147: origin
                    (Bd_survivorat_s_p5)

                    ; #14218: <==closure== 48685 (pos)
                    (Pb_survivorat_s_p5)

                    ; #35532: origin
                    (Ba_survivorat_s_p5)

                    ; #39494: <==closure== 11147 (pos)
                    (Pd_survivorat_s_p5)

                    ; #45731: <==closure== 56866 (pos)
                    (Pc_msg_p5)

                    ; #48685: origin
                    (Bb_survivorat_s_p5)

                    ; #49908: <==closure== 85741 (pos)
                    (Pb_msg_p5)

                    ; #52096: <==commonly_known== 88748 (pos)
                    (Bd_msg_p5)

                    ; #53491: <==commonly_known== 88748 (pos)
                    (Ba_msg_p5)

                    ; #56866: <==commonly_known== 88748 (pos)
                    (Bc_msg_p5)

                    ; #69126: origin
                    (Bc_survivorat_s_p5)

                    ; #74295: <==closure== 52096 (pos)
                    (Pd_msg_p5)

                    ; #85741: <==commonly_known== 88748 (pos)
                    (Bb_msg_p5)

                    ; #88720: <==closure== 53491 (pos)
                    (Pa_msg_p5)

                    ; #88748: origin
                    (msg_p5)

                    ; #89980: <==closure== 35532 (pos)
                    (Pa_survivorat_s_p5)

                    ; #13514: <==negation-removal== 39494 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #16386: <==negation-removal== 69126 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #16531: <==negation-removal== 49908 (pos)
                    (not (Bb_not_msg_p5))

                    ; #21885: <==negation-removal== 88748 (pos)
                    (not (not_msg_p5))

                    ; #22572: <==negation-removal== 35532 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #23218: <==negation-removal== 74295 (pos)
                    (not (Bd_not_msg_p5))

                    ; #24874: <==negation-removal== 48685 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #30192: <==negation-removal== 56866 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35565: <==negation-removal== 89980 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #37155: <==negation-removal== 85741 (pos)
                    (not (Pb_not_msg_p5))

                    ; #38811: <==negation-removal== 45731 (pos)
                    (not (Bc_not_msg_p5))

                    ; #38935: <==negation-removal== 10643 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #48761: <==negation-removal== 52096 (pos)
                    (not (Pd_not_msg_p5))

                    ; #56986: <==negation-removal== 88720 (pos)
                    (not (Ba_not_msg_p5))

                    ; #67626: <==negation-removal== 53491 (pos)
                    (not (Pa_not_msg_p5))

                    ; #71698: <==negation-removal== 11147 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #72808: <==negation-removal== 14218 (pos)
                    (not (Bb_not_survivorat_s_p5))))

    (:action commsurvivor_p5_c_s
        :precondition (and (at_c_p5)
                           (Bc_survivorat_s_p5)
                           (Pc_survivorat_s_p5))
        :effect (and
                    ; #10643: <==closure== 69126 (pos)
                    (Pc_survivorat_s_p5)

                    ; #11147: origin
                    (Bd_survivorat_s_p5)

                    ; #14218: <==closure== 48685 (pos)
                    (Pb_survivorat_s_p5)

                    ; #35532: origin
                    (Ba_survivorat_s_p5)

                    ; #39494: <==closure== 11147 (pos)
                    (Pd_survivorat_s_p5)

                    ; #45731: <==closure== 56866 (pos)
                    (Pc_msg_p5)

                    ; #48685: origin
                    (Bb_survivorat_s_p5)

                    ; #49908: <==closure== 85741 (pos)
                    (Pb_msg_p5)

                    ; #52096: <==commonly_known== 88748 (pos)
                    (Bd_msg_p5)

                    ; #53491: <==commonly_known== 88748 (pos)
                    (Ba_msg_p5)

                    ; #56866: <==commonly_known== 88748 (pos)
                    (Bc_msg_p5)

                    ; #69126: origin
                    (Bc_survivorat_s_p5)

                    ; #74295: <==closure== 52096 (pos)
                    (Pd_msg_p5)

                    ; #85741: <==commonly_known== 88748 (pos)
                    (Bb_msg_p5)

                    ; #88720: <==closure== 53491 (pos)
                    (Pa_msg_p5)

                    ; #88748: origin
                    (msg_p5)

                    ; #89980: <==closure== 35532 (pos)
                    (Pa_survivorat_s_p5)

                    ; #13514: <==negation-removal== 39494 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #16386: <==negation-removal== 69126 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #16531: <==negation-removal== 49908 (pos)
                    (not (Bb_not_msg_p5))

                    ; #21885: <==negation-removal== 88748 (pos)
                    (not (not_msg_p5))

                    ; #22572: <==negation-removal== 35532 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #23218: <==negation-removal== 74295 (pos)
                    (not (Bd_not_msg_p5))

                    ; #24874: <==negation-removal== 48685 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #30192: <==negation-removal== 56866 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35565: <==negation-removal== 89980 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #37155: <==negation-removal== 85741 (pos)
                    (not (Pb_not_msg_p5))

                    ; #38811: <==negation-removal== 45731 (pos)
                    (not (Bc_not_msg_p5))

                    ; #38935: <==negation-removal== 10643 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #48761: <==negation-removal== 52096 (pos)
                    (not (Pd_not_msg_p5))

                    ; #56986: <==negation-removal== 88720 (pos)
                    (not (Ba_not_msg_p5))

                    ; #67626: <==negation-removal== 53491 (pos)
                    (not (Pa_not_msg_p5))

                    ; #71698: <==negation-removal== 11147 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #72808: <==negation-removal== 14218 (pos)
                    (not (Bb_not_survivorat_s_p5))))

    (:action commsurvivor_p5_d_s
        :precondition (and (Pd_survivorat_s_p5)
                           (at_d_p5)
                           (Bd_survivorat_s_p5))
        :effect (and
                    ; #10643: <==closure== 69126 (pos)
                    (Pc_survivorat_s_p5)

                    ; #11147: origin
                    (Bd_survivorat_s_p5)

                    ; #14218: <==closure== 48685 (pos)
                    (Pb_survivorat_s_p5)

                    ; #35532: origin
                    (Ba_survivorat_s_p5)

                    ; #39494: <==closure== 11147 (pos)
                    (Pd_survivorat_s_p5)

                    ; #45731: <==closure== 56866 (pos)
                    (Pc_msg_p5)

                    ; #48685: origin
                    (Bb_survivorat_s_p5)

                    ; #49908: <==closure== 85741 (pos)
                    (Pb_msg_p5)

                    ; #52096: <==commonly_known== 88748 (pos)
                    (Bd_msg_p5)

                    ; #53491: <==commonly_known== 88748 (pos)
                    (Ba_msg_p5)

                    ; #56866: <==commonly_known== 88748 (pos)
                    (Bc_msg_p5)

                    ; #69126: origin
                    (Bc_survivorat_s_p5)

                    ; #74295: <==closure== 52096 (pos)
                    (Pd_msg_p5)

                    ; #85741: <==commonly_known== 88748 (pos)
                    (Bb_msg_p5)

                    ; #88720: <==closure== 53491 (pos)
                    (Pa_msg_p5)

                    ; #88748: origin
                    (msg_p5)

                    ; #89980: <==closure== 35532 (pos)
                    (Pa_survivorat_s_p5)

                    ; #13514: <==negation-removal== 39494 (pos)
                    (not (Bd_not_survivorat_s_p5))

                    ; #16386: <==negation-removal== 69126 (pos)
                    (not (Pc_not_survivorat_s_p5))

                    ; #16531: <==negation-removal== 49908 (pos)
                    (not (Bb_not_msg_p5))

                    ; #21885: <==negation-removal== 88748 (pos)
                    (not (not_msg_p5))

                    ; #22572: <==negation-removal== 35532 (pos)
                    (not (Pa_not_survivorat_s_p5))

                    ; #23218: <==negation-removal== 74295 (pos)
                    (not (Bd_not_msg_p5))

                    ; #24874: <==negation-removal== 48685 (pos)
                    (not (Pb_not_survivorat_s_p5))

                    ; #30192: <==negation-removal== 56866 (pos)
                    (not (Pc_not_msg_p5))

                    ; #35565: <==negation-removal== 89980 (pos)
                    (not (Ba_not_survivorat_s_p5))

                    ; #37155: <==negation-removal== 85741 (pos)
                    (not (Pb_not_msg_p5))

                    ; #38811: <==negation-removal== 45731 (pos)
                    (not (Bc_not_msg_p5))

                    ; #38935: <==negation-removal== 10643 (pos)
                    (not (Bc_not_survivorat_s_p5))

                    ; #48761: <==negation-removal== 52096 (pos)
                    (not (Pd_not_msg_p5))

                    ; #56986: <==negation-removal== 88720 (pos)
                    (not (Ba_not_msg_p5))

                    ; #67626: <==negation-removal== 53491 (pos)
                    (not (Pa_not_msg_p5))

                    ; #71698: <==negation-removal== 11147 (pos)
                    (not (Pd_not_survivorat_s_p5))

                    ; #72808: <==negation-removal== 14218 (pos)
                    (not (Bb_not_survivorat_s_p5))))

    (:action commsurvivor_p6_a_s
        :precondition (and (at_a_p6)
                           (Ba_survivorat_s_p6)
                           (Pa_survivorat_s_p6))
        :effect (and
                    ; #15893: <==closure== 53916 (pos)
                    (Pd_survivorat_s_p6)

                    ; #22456: <==commonly_known== 27657 (pos)
                    (Bc_msg_p6)

                    ; #25241: <==closure== 69689 (pos)
                    (Pc_survivorat_s_p6)

                    ; #27657: origin
                    (msg_p6)

                    ; #34200: <==closure== 40015 (pos)
                    (Pa_survivorat_s_p6)

                    ; #37236: <==commonly_known== 27657 (pos)
                    (Bd_msg_p6)

                    ; #40015: origin
                    (Ba_survivorat_s_p6)

                    ; #41121: <==closure== 49994 (pos)
                    (Pb_survivorat_s_p6)

                    ; #44191: <==commonly_known== 27657 (pos)
                    (Bb_msg_p6)

                    ; #49994: origin
                    (Bb_survivorat_s_p6)

                    ; #53916: origin
                    (Bd_survivorat_s_p6)

                    ; #68779: <==closure== 44191 (pos)
                    (Pb_msg_p6)

                    ; #69273: <==closure== 22456 (pos)
                    (Pc_msg_p6)

                    ; #69689: origin
                    (Bc_survivorat_s_p6)

                    ; #70222: <==commonly_known== 27657 (pos)
                    (Ba_msg_p6)

                    ; #88861: <==closure== 70222 (pos)
                    (Pa_msg_p6)

                    ; #89621: <==closure== 37236 (pos)
                    (Pd_msg_p6)

                    ; #16496: <==negation-removal== 70222 (pos)
                    (not (Pa_not_msg_p6))

                    ; #19703: <==negation-removal== 89621 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20218: <==negation-removal== 40015 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #25076: <==negation-removal== 15893 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #27625: <==negation-removal== 69689 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #45857: <==negation-removal== 41121 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #51576: <==negation-removal== 34200 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #54254: <==negation-removal== 53916 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #54987: <==negation-removal== 22456 (pos)
                    (not (Pc_not_msg_p6))

                    ; #55041: <==negation-removal== 25241 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #60230: <==negation-removal== 44191 (pos)
                    (not (Pb_not_msg_p6))

                    ; #66998: <==negation-removal== 69273 (pos)
                    (not (Bc_not_msg_p6))

                    ; #68900: <==negation-removal== 37236 (pos)
                    (not (Pd_not_msg_p6))

                    ; #77702: <==negation-removal== 68779 (pos)
                    (not (Bb_not_msg_p6))

                    ; #87427: <==negation-removal== 49994 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #87452: <==negation-removal== 27657 (pos)
                    (not (not_msg_p6))

                    ; #89064: <==negation-removal== 88861 (pos)
                    (not (Ba_not_msg_p6))))

    (:action commsurvivor_p6_b_s
        :precondition (and (at_b_p6)
                           (Bb_survivorat_s_p6)
                           (Pb_survivorat_s_p6))
        :effect (and
                    ; #15893: <==closure== 53916 (pos)
                    (Pd_survivorat_s_p6)

                    ; #22456: <==commonly_known== 27657 (pos)
                    (Bc_msg_p6)

                    ; #25241: <==closure== 69689 (pos)
                    (Pc_survivorat_s_p6)

                    ; #27657: origin
                    (msg_p6)

                    ; #34200: <==closure== 40015 (pos)
                    (Pa_survivorat_s_p6)

                    ; #37236: <==commonly_known== 27657 (pos)
                    (Bd_msg_p6)

                    ; #40015: origin
                    (Ba_survivorat_s_p6)

                    ; #41121: <==closure== 49994 (pos)
                    (Pb_survivorat_s_p6)

                    ; #44191: <==commonly_known== 27657 (pos)
                    (Bb_msg_p6)

                    ; #49994: origin
                    (Bb_survivorat_s_p6)

                    ; #53916: origin
                    (Bd_survivorat_s_p6)

                    ; #68779: <==closure== 44191 (pos)
                    (Pb_msg_p6)

                    ; #69273: <==closure== 22456 (pos)
                    (Pc_msg_p6)

                    ; #69689: origin
                    (Bc_survivorat_s_p6)

                    ; #70222: <==commonly_known== 27657 (pos)
                    (Ba_msg_p6)

                    ; #88861: <==closure== 70222 (pos)
                    (Pa_msg_p6)

                    ; #89621: <==closure== 37236 (pos)
                    (Pd_msg_p6)

                    ; #16496: <==negation-removal== 70222 (pos)
                    (not (Pa_not_msg_p6))

                    ; #19703: <==negation-removal== 89621 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20218: <==negation-removal== 40015 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #25076: <==negation-removal== 15893 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #27625: <==negation-removal== 69689 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #45857: <==negation-removal== 41121 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #51576: <==negation-removal== 34200 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #54254: <==negation-removal== 53916 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #54987: <==negation-removal== 22456 (pos)
                    (not (Pc_not_msg_p6))

                    ; #55041: <==negation-removal== 25241 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #60230: <==negation-removal== 44191 (pos)
                    (not (Pb_not_msg_p6))

                    ; #66998: <==negation-removal== 69273 (pos)
                    (not (Bc_not_msg_p6))

                    ; #68900: <==negation-removal== 37236 (pos)
                    (not (Pd_not_msg_p6))

                    ; #77702: <==negation-removal== 68779 (pos)
                    (not (Bb_not_msg_p6))

                    ; #87427: <==negation-removal== 49994 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #87452: <==negation-removal== 27657 (pos)
                    (not (not_msg_p6))

                    ; #89064: <==negation-removal== 88861 (pos)
                    (not (Ba_not_msg_p6))))

    (:action commsurvivor_p6_c_s
        :precondition (and (at_c_p6)
                           (Bc_survivorat_s_p6)
                           (Pc_survivorat_s_p6))
        :effect (and
                    ; #15893: <==closure== 53916 (pos)
                    (Pd_survivorat_s_p6)

                    ; #22456: <==commonly_known== 27657 (pos)
                    (Bc_msg_p6)

                    ; #25241: <==closure== 69689 (pos)
                    (Pc_survivorat_s_p6)

                    ; #27657: origin
                    (msg_p6)

                    ; #34200: <==closure== 40015 (pos)
                    (Pa_survivorat_s_p6)

                    ; #37236: <==commonly_known== 27657 (pos)
                    (Bd_msg_p6)

                    ; #40015: origin
                    (Ba_survivorat_s_p6)

                    ; #41121: <==closure== 49994 (pos)
                    (Pb_survivorat_s_p6)

                    ; #44191: <==commonly_known== 27657 (pos)
                    (Bb_msg_p6)

                    ; #49994: origin
                    (Bb_survivorat_s_p6)

                    ; #53916: origin
                    (Bd_survivorat_s_p6)

                    ; #68779: <==closure== 44191 (pos)
                    (Pb_msg_p6)

                    ; #69273: <==closure== 22456 (pos)
                    (Pc_msg_p6)

                    ; #69689: origin
                    (Bc_survivorat_s_p6)

                    ; #70222: <==commonly_known== 27657 (pos)
                    (Ba_msg_p6)

                    ; #88861: <==closure== 70222 (pos)
                    (Pa_msg_p6)

                    ; #89621: <==closure== 37236 (pos)
                    (Pd_msg_p6)

                    ; #16496: <==negation-removal== 70222 (pos)
                    (not (Pa_not_msg_p6))

                    ; #19703: <==negation-removal== 89621 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20218: <==negation-removal== 40015 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #25076: <==negation-removal== 15893 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #27625: <==negation-removal== 69689 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #45857: <==negation-removal== 41121 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #51576: <==negation-removal== 34200 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #54254: <==negation-removal== 53916 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #54987: <==negation-removal== 22456 (pos)
                    (not (Pc_not_msg_p6))

                    ; #55041: <==negation-removal== 25241 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #60230: <==negation-removal== 44191 (pos)
                    (not (Pb_not_msg_p6))

                    ; #66998: <==negation-removal== 69273 (pos)
                    (not (Bc_not_msg_p6))

                    ; #68900: <==negation-removal== 37236 (pos)
                    (not (Pd_not_msg_p6))

                    ; #77702: <==negation-removal== 68779 (pos)
                    (not (Bb_not_msg_p6))

                    ; #87427: <==negation-removal== 49994 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #87452: <==negation-removal== 27657 (pos)
                    (not (not_msg_p6))

                    ; #89064: <==negation-removal== 88861 (pos)
                    (not (Ba_not_msg_p6))))

    (:action commsurvivor_p6_d_s
        :precondition (and (Bd_survivorat_s_p6)
                           (at_d_p6)
                           (Pd_survivorat_s_p6))
        :effect (and
                    ; #15893: <==closure== 53916 (pos)
                    (Pd_survivorat_s_p6)

                    ; #22456: <==commonly_known== 27657 (pos)
                    (Bc_msg_p6)

                    ; #25241: <==closure== 69689 (pos)
                    (Pc_survivorat_s_p6)

                    ; #27657: origin
                    (msg_p6)

                    ; #34200: <==closure== 40015 (pos)
                    (Pa_survivorat_s_p6)

                    ; #37236: <==commonly_known== 27657 (pos)
                    (Bd_msg_p6)

                    ; #40015: origin
                    (Ba_survivorat_s_p6)

                    ; #41121: <==closure== 49994 (pos)
                    (Pb_survivorat_s_p6)

                    ; #44191: <==commonly_known== 27657 (pos)
                    (Bb_msg_p6)

                    ; #49994: origin
                    (Bb_survivorat_s_p6)

                    ; #53916: origin
                    (Bd_survivorat_s_p6)

                    ; #68779: <==closure== 44191 (pos)
                    (Pb_msg_p6)

                    ; #69273: <==closure== 22456 (pos)
                    (Pc_msg_p6)

                    ; #69689: origin
                    (Bc_survivorat_s_p6)

                    ; #70222: <==commonly_known== 27657 (pos)
                    (Ba_msg_p6)

                    ; #88861: <==closure== 70222 (pos)
                    (Pa_msg_p6)

                    ; #89621: <==closure== 37236 (pos)
                    (Pd_msg_p6)

                    ; #16496: <==negation-removal== 70222 (pos)
                    (not (Pa_not_msg_p6))

                    ; #19703: <==negation-removal== 89621 (pos)
                    (not (Bd_not_msg_p6))

                    ; #20218: <==negation-removal== 40015 (pos)
                    (not (Pa_not_survivorat_s_p6))

                    ; #25076: <==negation-removal== 15893 (pos)
                    (not (Bd_not_survivorat_s_p6))

                    ; #27625: <==negation-removal== 69689 (pos)
                    (not (Pc_not_survivorat_s_p6))

                    ; #45857: <==negation-removal== 41121 (pos)
                    (not (Bb_not_survivorat_s_p6))

                    ; #51576: <==negation-removal== 34200 (pos)
                    (not (Ba_not_survivorat_s_p6))

                    ; #54254: <==negation-removal== 53916 (pos)
                    (not (Pd_not_survivorat_s_p6))

                    ; #54987: <==negation-removal== 22456 (pos)
                    (not (Pc_not_msg_p6))

                    ; #55041: <==negation-removal== 25241 (pos)
                    (not (Bc_not_survivorat_s_p6))

                    ; #60230: <==negation-removal== 44191 (pos)
                    (not (Pb_not_msg_p6))

                    ; #66998: <==negation-removal== 69273 (pos)
                    (not (Bc_not_msg_p6))

                    ; #68900: <==negation-removal== 37236 (pos)
                    (not (Pd_not_msg_p6))

                    ; #77702: <==negation-removal== 68779 (pos)
                    (not (Bb_not_msg_p6))

                    ; #87427: <==negation-removal== 49994 (pos)
                    (not (Pb_not_survivorat_s_p6))

                    ; #87452: <==negation-removal== 27657 (pos)
                    (not (not_msg_p6))

                    ; #89064: <==negation-removal== 88861 (pos)
                    (not (Ba_not_msg_p6))))

    (:action commsurvivor_p7_a_s
        :precondition (and (Ba_survivorat_s_p7)
                           (Pa_survivorat_s_p7)
                           (at_a_p7))
        :effect (and
                    ; #10601: <==commonly_known== 67669 (pos)
                    (Bd_msg_p7)

                    ; #23236: origin
                    (Bd_survivorat_s_p7)

                    ; #34952: <==closure== 59481 (pos)
                    (Pa_msg_p7)

                    ; #41852: <==closure== 10601 (pos)
                    (Pd_msg_p7)

                    ; #43663: <==closure== 23236 (pos)
                    (Pd_survivorat_s_p7)

                    ; #50221: <==closure== 69544 (pos)
                    (Pb_msg_p7)

                    ; #54224: <==commonly_known== 67669 (pos)
                    (Bc_msg_p7)

                    ; #55900: <==closure== 88111 (pos)
                    (Pa_survivorat_s_p7)

                    ; #57881: <==closure== 54224 (pos)
                    (Pc_msg_p7)

                    ; #59481: <==commonly_known== 67669 (pos)
                    (Ba_msg_p7)

                    ; #65560: origin
                    (Bb_survivorat_s_p7)

                    ; #65944: <==closure== 65560 (pos)
                    (Pb_survivorat_s_p7)

                    ; #67669: origin
                    (msg_p7)

                    ; #69544: <==commonly_known== 67669 (pos)
                    (Bb_msg_p7)

                    ; #74394: <==closure== 79852 (pos)
                    (Pc_survivorat_s_p7)

                    ; #79852: origin
                    (Bc_survivorat_s_p7)

                    ; #88111: origin
                    (Ba_survivorat_s_p7)

                    ; #15133: <==negation-removal== 67669 (pos)
                    (not (not_msg_p7))

                    ; #16005: <==negation-removal== 74394 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #24224: <==negation-removal== 23236 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #32983: <==negation-removal== 54224 (pos)
                    (not (Pc_not_msg_p7))

                    ; #34057: <==negation-removal== 65560 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #35562: <==negation-removal== 79852 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #36014: <==negation-removal== 69544 (pos)
                    (not (Pb_not_msg_p7))

                    ; #36117: <==negation-removal== 50221 (pos)
                    (not (Bb_not_msg_p7))

                    ; #40571: <==negation-removal== 57881 (pos)
                    (not (Bc_not_msg_p7))

                    ; #41082: <==negation-removal== 55900 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #52736: <==negation-removal== 43663 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #58088: <==negation-removal== 10601 (pos)
                    (not (Pd_not_msg_p7))

                    ; #77987: <==negation-removal== 34952 (pos)
                    (not (Ba_not_msg_p7))

                    ; #79026: <==negation-removal== 65944 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #81849: <==negation-removal== 41852 (pos)
                    (not (Bd_not_msg_p7))

                    ; #85806: <==negation-removal== 59481 (pos)
                    (not (Pa_not_msg_p7))

                    ; #87993: <==negation-removal== 88111 (pos)
                    (not (Pa_not_survivorat_s_p7))))

    (:action commsurvivor_p7_b_s
        :precondition (and (at_b_p7)
                           (Pb_survivorat_s_p7)
                           (Bb_survivorat_s_p7))
        :effect (and
                    ; #10601: <==commonly_known== 67669 (pos)
                    (Bd_msg_p7)

                    ; #23236: origin
                    (Bd_survivorat_s_p7)

                    ; #34952: <==closure== 59481 (pos)
                    (Pa_msg_p7)

                    ; #41852: <==closure== 10601 (pos)
                    (Pd_msg_p7)

                    ; #43663: <==closure== 23236 (pos)
                    (Pd_survivorat_s_p7)

                    ; #50221: <==closure== 69544 (pos)
                    (Pb_msg_p7)

                    ; #54224: <==commonly_known== 67669 (pos)
                    (Bc_msg_p7)

                    ; #55900: <==closure== 88111 (pos)
                    (Pa_survivorat_s_p7)

                    ; #57881: <==closure== 54224 (pos)
                    (Pc_msg_p7)

                    ; #59481: <==commonly_known== 67669 (pos)
                    (Ba_msg_p7)

                    ; #65560: origin
                    (Bb_survivorat_s_p7)

                    ; #65944: <==closure== 65560 (pos)
                    (Pb_survivorat_s_p7)

                    ; #67669: origin
                    (msg_p7)

                    ; #69544: <==commonly_known== 67669 (pos)
                    (Bb_msg_p7)

                    ; #74394: <==closure== 79852 (pos)
                    (Pc_survivorat_s_p7)

                    ; #79852: origin
                    (Bc_survivorat_s_p7)

                    ; #88111: origin
                    (Ba_survivorat_s_p7)

                    ; #15133: <==negation-removal== 67669 (pos)
                    (not (not_msg_p7))

                    ; #16005: <==negation-removal== 74394 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #24224: <==negation-removal== 23236 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #32983: <==negation-removal== 54224 (pos)
                    (not (Pc_not_msg_p7))

                    ; #34057: <==negation-removal== 65560 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #35562: <==negation-removal== 79852 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #36014: <==negation-removal== 69544 (pos)
                    (not (Pb_not_msg_p7))

                    ; #36117: <==negation-removal== 50221 (pos)
                    (not (Bb_not_msg_p7))

                    ; #40571: <==negation-removal== 57881 (pos)
                    (not (Bc_not_msg_p7))

                    ; #41082: <==negation-removal== 55900 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #52736: <==negation-removal== 43663 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #58088: <==negation-removal== 10601 (pos)
                    (not (Pd_not_msg_p7))

                    ; #77987: <==negation-removal== 34952 (pos)
                    (not (Ba_not_msg_p7))

                    ; #79026: <==negation-removal== 65944 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #81849: <==negation-removal== 41852 (pos)
                    (not (Bd_not_msg_p7))

                    ; #85806: <==negation-removal== 59481 (pos)
                    (not (Pa_not_msg_p7))

                    ; #87993: <==negation-removal== 88111 (pos)
                    (not (Pa_not_survivorat_s_p7))))

    (:action commsurvivor_p7_c_s
        :precondition (and (Bc_survivorat_s_p7)
                           (Pc_survivorat_s_p7)
                           (at_c_p7))
        :effect (and
                    ; #10601: <==commonly_known== 67669 (pos)
                    (Bd_msg_p7)

                    ; #23236: origin
                    (Bd_survivorat_s_p7)

                    ; #34952: <==closure== 59481 (pos)
                    (Pa_msg_p7)

                    ; #41852: <==closure== 10601 (pos)
                    (Pd_msg_p7)

                    ; #43663: <==closure== 23236 (pos)
                    (Pd_survivorat_s_p7)

                    ; #50221: <==closure== 69544 (pos)
                    (Pb_msg_p7)

                    ; #54224: <==commonly_known== 67669 (pos)
                    (Bc_msg_p7)

                    ; #55900: <==closure== 88111 (pos)
                    (Pa_survivorat_s_p7)

                    ; #57881: <==closure== 54224 (pos)
                    (Pc_msg_p7)

                    ; #59481: <==commonly_known== 67669 (pos)
                    (Ba_msg_p7)

                    ; #65560: origin
                    (Bb_survivorat_s_p7)

                    ; #65944: <==closure== 65560 (pos)
                    (Pb_survivorat_s_p7)

                    ; #67669: origin
                    (msg_p7)

                    ; #69544: <==commonly_known== 67669 (pos)
                    (Bb_msg_p7)

                    ; #74394: <==closure== 79852 (pos)
                    (Pc_survivorat_s_p7)

                    ; #79852: origin
                    (Bc_survivorat_s_p7)

                    ; #88111: origin
                    (Ba_survivorat_s_p7)

                    ; #15133: <==negation-removal== 67669 (pos)
                    (not (not_msg_p7))

                    ; #16005: <==negation-removal== 74394 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #24224: <==negation-removal== 23236 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #32983: <==negation-removal== 54224 (pos)
                    (not (Pc_not_msg_p7))

                    ; #34057: <==negation-removal== 65560 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #35562: <==negation-removal== 79852 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #36014: <==negation-removal== 69544 (pos)
                    (not (Pb_not_msg_p7))

                    ; #36117: <==negation-removal== 50221 (pos)
                    (not (Bb_not_msg_p7))

                    ; #40571: <==negation-removal== 57881 (pos)
                    (not (Bc_not_msg_p7))

                    ; #41082: <==negation-removal== 55900 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #52736: <==negation-removal== 43663 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #58088: <==negation-removal== 10601 (pos)
                    (not (Pd_not_msg_p7))

                    ; #77987: <==negation-removal== 34952 (pos)
                    (not (Ba_not_msg_p7))

                    ; #79026: <==negation-removal== 65944 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #81849: <==negation-removal== 41852 (pos)
                    (not (Bd_not_msg_p7))

                    ; #85806: <==negation-removal== 59481 (pos)
                    (not (Pa_not_msg_p7))

                    ; #87993: <==negation-removal== 88111 (pos)
                    (not (Pa_not_survivorat_s_p7))))

    (:action commsurvivor_p7_d_s
        :precondition (and (at_d_p7)
                           (Pd_survivorat_s_p7)
                           (Bd_survivorat_s_p7))
        :effect (and
                    ; #10601: <==commonly_known== 67669 (pos)
                    (Bd_msg_p7)

                    ; #23236: origin
                    (Bd_survivorat_s_p7)

                    ; #34952: <==closure== 59481 (pos)
                    (Pa_msg_p7)

                    ; #41852: <==closure== 10601 (pos)
                    (Pd_msg_p7)

                    ; #43663: <==closure== 23236 (pos)
                    (Pd_survivorat_s_p7)

                    ; #50221: <==closure== 69544 (pos)
                    (Pb_msg_p7)

                    ; #54224: <==commonly_known== 67669 (pos)
                    (Bc_msg_p7)

                    ; #55900: <==closure== 88111 (pos)
                    (Pa_survivorat_s_p7)

                    ; #57881: <==closure== 54224 (pos)
                    (Pc_msg_p7)

                    ; #59481: <==commonly_known== 67669 (pos)
                    (Ba_msg_p7)

                    ; #65560: origin
                    (Bb_survivorat_s_p7)

                    ; #65944: <==closure== 65560 (pos)
                    (Pb_survivorat_s_p7)

                    ; #67669: origin
                    (msg_p7)

                    ; #69544: <==commonly_known== 67669 (pos)
                    (Bb_msg_p7)

                    ; #74394: <==closure== 79852 (pos)
                    (Pc_survivorat_s_p7)

                    ; #79852: origin
                    (Bc_survivorat_s_p7)

                    ; #88111: origin
                    (Ba_survivorat_s_p7)

                    ; #15133: <==negation-removal== 67669 (pos)
                    (not (not_msg_p7))

                    ; #16005: <==negation-removal== 74394 (pos)
                    (not (Bc_not_survivorat_s_p7))

                    ; #24224: <==negation-removal== 23236 (pos)
                    (not (Pd_not_survivorat_s_p7))

                    ; #32983: <==negation-removal== 54224 (pos)
                    (not (Pc_not_msg_p7))

                    ; #34057: <==negation-removal== 65560 (pos)
                    (not (Pb_not_survivorat_s_p7))

                    ; #35562: <==negation-removal== 79852 (pos)
                    (not (Pc_not_survivorat_s_p7))

                    ; #36014: <==negation-removal== 69544 (pos)
                    (not (Pb_not_msg_p7))

                    ; #36117: <==negation-removal== 50221 (pos)
                    (not (Bb_not_msg_p7))

                    ; #40571: <==negation-removal== 57881 (pos)
                    (not (Bc_not_msg_p7))

                    ; #41082: <==negation-removal== 55900 (pos)
                    (not (Ba_not_survivorat_s_p7))

                    ; #52736: <==negation-removal== 43663 (pos)
                    (not (Bd_not_survivorat_s_p7))

                    ; #58088: <==negation-removal== 10601 (pos)
                    (not (Pd_not_msg_p7))

                    ; #77987: <==negation-removal== 34952 (pos)
                    (not (Ba_not_msg_p7))

                    ; #79026: <==negation-removal== 65944 (pos)
                    (not (Bb_not_survivorat_s_p7))

                    ; #81849: <==negation-removal== 41852 (pos)
                    (not (Bd_not_msg_p7))

                    ; #85806: <==negation-removal== 59481 (pos)
                    (not (Pa_not_msg_p7))

                    ; #87993: <==negation-removal== 88111 (pos)
                    (not (Pa_not_survivorat_s_p7))))

    (:action commsurvivor_p8_a_s
        :precondition (and (Pa_survivorat_s_p8)
                           (at_a_p8)
                           (Ba_survivorat_s_p8))
        :effect (and
                    ; #10307: <==commonly_known== 29574 (pos)
                    (Ba_msg_p8)

                    ; #14131: origin
                    (Bc_survivorat_s_p8)

                    ; #14948: <==commonly_known== 29574 (pos)
                    (Bc_msg_p8)

                    ; #23666: <==closure== 14948 (pos)
                    (Pc_msg_p8)

                    ; #29574: origin
                    (msg_p8)

                    ; #31420: <==closure== 86847 (pos)
                    (Pd_survivorat_s_p8)

                    ; #32435: <==closure== 14131 (pos)
                    (Pc_survivorat_s_p8)

                    ; #52973: origin
                    (Ba_survivorat_s_p8)

                    ; #54931: origin
                    (Bb_survivorat_s_p8)

                    ; #62385: <==closure== 97272 (pos)
                    (Pd_msg_p8)

                    ; #67798: <==closure== 54931 (pos)
                    (Pb_survivorat_s_p8)

                    ; #71266: <==closure== 81740 (pos)
                    (Pb_msg_p8)

                    ; #71373: <==closure== 52973 (pos)
                    (Pa_survivorat_s_p8)

                    ; #79362: <==closure== 10307 (pos)
                    (Pa_msg_p8)

                    ; #81740: <==commonly_known== 29574 (pos)
                    (Bb_msg_p8)

                    ; #86847: origin
                    (Bd_survivorat_s_p8)

                    ; #97272: <==commonly_known== 29574 (pos)
                    (Bd_msg_p8)

                    ; #15946: <==negation-removal== 71266 (pos)
                    (not (Bb_not_msg_p8))

                    ; #22153: <==negation-removal== 71373 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #23360: <==negation-removal== 67798 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #45564: <==negation-removal== 86847 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45997: <==negation-removal== 79362 (pos)
                    (not (Ba_not_msg_p8))

                    ; #46799: <==negation-removal== 97272 (pos)
                    (not (Pd_not_msg_p8))

                    ; #49464: <==negation-removal== 10307 (pos)
                    (not (Pa_not_msg_p8))

                    ; #52799: <==negation-removal== 23666 (pos)
                    (not (Bc_not_msg_p8))

                    ; #54560: <==negation-removal== 62385 (pos)
                    (not (Bd_not_msg_p8))

                    ; #55557: <==negation-removal== 14948 (pos)
                    (not (Pc_not_msg_p8))

                    ; #57469: <==negation-removal== 29574 (pos)
                    (not (not_msg_p8))

                    ; #59672: <==negation-removal== 81740 (pos)
                    (not (Pb_not_msg_p8))

                    ; #69733: <==negation-removal== 14131 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #75021: <==negation-removal== 52973 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #88267: <==negation-removal== 54931 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #89592: <==negation-removal== 31420 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #92375: <==negation-removal== 32435 (pos)
                    (not (Bc_not_survivorat_s_p8))))

    (:action commsurvivor_p8_b_s
        :precondition (and (Bb_survivorat_s_p8)
                           (at_b_p8)
                           (Pb_survivorat_s_p8))
        :effect (and
                    ; #10307: <==commonly_known== 29574 (pos)
                    (Ba_msg_p8)

                    ; #14131: origin
                    (Bc_survivorat_s_p8)

                    ; #14948: <==commonly_known== 29574 (pos)
                    (Bc_msg_p8)

                    ; #23666: <==closure== 14948 (pos)
                    (Pc_msg_p8)

                    ; #29574: origin
                    (msg_p8)

                    ; #31420: <==closure== 86847 (pos)
                    (Pd_survivorat_s_p8)

                    ; #32435: <==closure== 14131 (pos)
                    (Pc_survivorat_s_p8)

                    ; #52973: origin
                    (Ba_survivorat_s_p8)

                    ; #54931: origin
                    (Bb_survivorat_s_p8)

                    ; #62385: <==closure== 97272 (pos)
                    (Pd_msg_p8)

                    ; #67798: <==closure== 54931 (pos)
                    (Pb_survivorat_s_p8)

                    ; #71266: <==closure== 81740 (pos)
                    (Pb_msg_p8)

                    ; #71373: <==closure== 52973 (pos)
                    (Pa_survivorat_s_p8)

                    ; #79362: <==closure== 10307 (pos)
                    (Pa_msg_p8)

                    ; #81740: <==commonly_known== 29574 (pos)
                    (Bb_msg_p8)

                    ; #86847: origin
                    (Bd_survivorat_s_p8)

                    ; #97272: <==commonly_known== 29574 (pos)
                    (Bd_msg_p8)

                    ; #15946: <==negation-removal== 71266 (pos)
                    (not (Bb_not_msg_p8))

                    ; #22153: <==negation-removal== 71373 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #23360: <==negation-removal== 67798 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #45564: <==negation-removal== 86847 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45997: <==negation-removal== 79362 (pos)
                    (not (Ba_not_msg_p8))

                    ; #46799: <==negation-removal== 97272 (pos)
                    (not (Pd_not_msg_p8))

                    ; #49464: <==negation-removal== 10307 (pos)
                    (not (Pa_not_msg_p8))

                    ; #52799: <==negation-removal== 23666 (pos)
                    (not (Bc_not_msg_p8))

                    ; #54560: <==negation-removal== 62385 (pos)
                    (not (Bd_not_msg_p8))

                    ; #55557: <==negation-removal== 14948 (pos)
                    (not (Pc_not_msg_p8))

                    ; #57469: <==negation-removal== 29574 (pos)
                    (not (not_msg_p8))

                    ; #59672: <==negation-removal== 81740 (pos)
                    (not (Pb_not_msg_p8))

                    ; #69733: <==negation-removal== 14131 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #75021: <==negation-removal== 52973 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #88267: <==negation-removal== 54931 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #89592: <==negation-removal== 31420 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #92375: <==negation-removal== 32435 (pos)
                    (not (Bc_not_survivorat_s_p8))))

    (:action commsurvivor_p8_c_s
        :precondition (and (Bc_survivorat_s_p8)
                           (Pc_survivorat_s_p8)
                           (at_c_p8))
        :effect (and
                    ; #10307: <==commonly_known== 29574 (pos)
                    (Ba_msg_p8)

                    ; #14131: origin
                    (Bc_survivorat_s_p8)

                    ; #14948: <==commonly_known== 29574 (pos)
                    (Bc_msg_p8)

                    ; #23666: <==closure== 14948 (pos)
                    (Pc_msg_p8)

                    ; #29574: origin
                    (msg_p8)

                    ; #31420: <==closure== 86847 (pos)
                    (Pd_survivorat_s_p8)

                    ; #32435: <==closure== 14131 (pos)
                    (Pc_survivorat_s_p8)

                    ; #52973: origin
                    (Ba_survivorat_s_p8)

                    ; #54931: origin
                    (Bb_survivorat_s_p8)

                    ; #62385: <==closure== 97272 (pos)
                    (Pd_msg_p8)

                    ; #67798: <==closure== 54931 (pos)
                    (Pb_survivorat_s_p8)

                    ; #71266: <==closure== 81740 (pos)
                    (Pb_msg_p8)

                    ; #71373: <==closure== 52973 (pos)
                    (Pa_survivorat_s_p8)

                    ; #79362: <==closure== 10307 (pos)
                    (Pa_msg_p8)

                    ; #81740: <==commonly_known== 29574 (pos)
                    (Bb_msg_p8)

                    ; #86847: origin
                    (Bd_survivorat_s_p8)

                    ; #97272: <==commonly_known== 29574 (pos)
                    (Bd_msg_p8)

                    ; #15946: <==negation-removal== 71266 (pos)
                    (not (Bb_not_msg_p8))

                    ; #22153: <==negation-removal== 71373 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #23360: <==negation-removal== 67798 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #45564: <==negation-removal== 86847 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45997: <==negation-removal== 79362 (pos)
                    (not (Ba_not_msg_p8))

                    ; #46799: <==negation-removal== 97272 (pos)
                    (not (Pd_not_msg_p8))

                    ; #49464: <==negation-removal== 10307 (pos)
                    (not (Pa_not_msg_p8))

                    ; #52799: <==negation-removal== 23666 (pos)
                    (not (Bc_not_msg_p8))

                    ; #54560: <==negation-removal== 62385 (pos)
                    (not (Bd_not_msg_p8))

                    ; #55557: <==negation-removal== 14948 (pos)
                    (not (Pc_not_msg_p8))

                    ; #57469: <==negation-removal== 29574 (pos)
                    (not (not_msg_p8))

                    ; #59672: <==negation-removal== 81740 (pos)
                    (not (Pb_not_msg_p8))

                    ; #69733: <==negation-removal== 14131 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #75021: <==negation-removal== 52973 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #88267: <==negation-removal== 54931 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #89592: <==negation-removal== 31420 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #92375: <==negation-removal== 32435 (pos)
                    (not (Bc_not_survivorat_s_p8))))

    (:action commsurvivor_p8_d_s
        :precondition (and (Pd_survivorat_s_p8)
                           (at_d_p8)
                           (Bd_survivorat_s_p8))
        :effect (and
                    ; #10307: <==commonly_known== 29574 (pos)
                    (Ba_msg_p8)

                    ; #14131: origin
                    (Bc_survivorat_s_p8)

                    ; #14948: <==commonly_known== 29574 (pos)
                    (Bc_msg_p8)

                    ; #23666: <==closure== 14948 (pos)
                    (Pc_msg_p8)

                    ; #29574: origin
                    (msg_p8)

                    ; #31420: <==closure== 86847 (pos)
                    (Pd_survivorat_s_p8)

                    ; #32435: <==closure== 14131 (pos)
                    (Pc_survivorat_s_p8)

                    ; #52973: origin
                    (Ba_survivorat_s_p8)

                    ; #54931: origin
                    (Bb_survivorat_s_p8)

                    ; #62385: <==closure== 97272 (pos)
                    (Pd_msg_p8)

                    ; #67798: <==closure== 54931 (pos)
                    (Pb_survivorat_s_p8)

                    ; #71266: <==closure== 81740 (pos)
                    (Pb_msg_p8)

                    ; #71373: <==closure== 52973 (pos)
                    (Pa_survivorat_s_p8)

                    ; #79362: <==closure== 10307 (pos)
                    (Pa_msg_p8)

                    ; #81740: <==commonly_known== 29574 (pos)
                    (Bb_msg_p8)

                    ; #86847: origin
                    (Bd_survivorat_s_p8)

                    ; #97272: <==commonly_known== 29574 (pos)
                    (Bd_msg_p8)

                    ; #15946: <==negation-removal== 71266 (pos)
                    (not (Bb_not_msg_p8))

                    ; #22153: <==negation-removal== 71373 (pos)
                    (not (Ba_not_survivorat_s_p8))

                    ; #23360: <==negation-removal== 67798 (pos)
                    (not (Bb_not_survivorat_s_p8))

                    ; #45564: <==negation-removal== 86847 (pos)
                    (not (Pd_not_survivorat_s_p8))

                    ; #45997: <==negation-removal== 79362 (pos)
                    (not (Ba_not_msg_p8))

                    ; #46799: <==negation-removal== 97272 (pos)
                    (not (Pd_not_msg_p8))

                    ; #49464: <==negation-removal== 10307 (pos)
                    (not (Pa_not_msg_p8))

                    ; #52799: <==negation-removal== 23666 (pos)
                    (not (Bc_not_msg_p8))

                    ; #54560: <==negation-removal== 62385 (pos)
                    (not (Bd_not_msg_p8))

                    ; #55557: <==negation-removal== 14948 (pos)
                    (not (Pc_not_msg_p8))

                    ; #57469: <==negation-removal== 29574 (pos)
                    (not (not_msg_p8))

                    ; #59672: <==negation-removal== 81740 (pos)
                    (not (Pb_not_msg_p8))

                    ; #69733: <==negation-removal== 14131 (pos)
                    (not (Pc_not_survivorat_s_p8))

                    ; #75021: <==negation-removal== 52973 (pos)
                    (not (Pa_not_survivorat_s_p8))

                    ; #88267: <==negation-removal== 54931 (pos)
                    (not (Pb_not_survivorat_s_p8))

                    ; #89592: <==negation-removal== 31420 (pos)
                    (not (Bd_not_survivorat_s_p8))

                    ; #92375: <==negation-removal== 32435 (pos)
                    (not (Bc_not_survivorat_s_p8))))

    (:action commsurvivor_p9_a_s
        :precondition (and (Ba_survivorat_s_p9)
                           (at_a_p9)
                           (Pa_survivorat_s_p9))
        :effect (and
                    ; #10059: <==closure== 42671 (pos)
                    (Pd_survivorat_s_p9)

                    ; #17366: <==closure== 71632 (pos)
                    (Pc_survivorat_s_p9)

                    ; #22780: <==closure== 23970 (pos)
                    (Pd_msg_p9)

                    ; #23970: <==commonly_known== 26423 (pos)
                    (Bd_msg_p9)

                    ; #24660: <==closure== 37248 (pos)
                    (Pb_msg_p9)

                    ; #25110: <==commonly_known== 26423 (pos)
                    (Bc_msg_p9)

                    ; #26423: origin
                    (msg_p9)

                    ; #35572: <==commonly_known== 26423 (pos)
                    (Ba_msg_p9)

                    ; #37248: <==commonly_known== 26423 (pos)
                    (Bb_msg_p9)

                    ; #42671: origin
                    (Bd_survivorat_s_p9)

                    ; #44669: <==closure== 82704 (pos)
                    (Pa_survivorat_s_p9)

                    ; #47219: <==closure== 25110 (pos)
                    (Pc_msg_p9)

                    ; #60390: origin
                    (Bb_survivorat_s_p9)

                    ; #64866: <==closure== 60390 (pos)
                    (Pb_survivorat_s_p9)

                    ; #71632: origin
                    (Bc_survivorat_s_p9)

                    ; #82704: origin
                    (Ba_survivorat_s_p9)

                    ; #87323: <==closure== 35572 (pos)
                    (Pa_msg_p9)

                    ; #12163: <==negation-removal== 47219 (pos)
                    (not (Bc_not_msg_p9))

                    ; #12947: <==negation-removal== 42671 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #19790: <==negation-removal== 44669 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #20564: <==negation-removal== 71632 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #23130: <==negation-removal== 26423 (pos)
                    (not (not_msg_p9))

                    ; #23413: <==negation-removal== 23970 (pos)
                    (not (Pd_not_msg_p9))

                    ; #26414: <==negation-removal== 87323 (pos)
                    (not (Ba_not_msg_p9))

                    ; #36692: <==negation-removal== 35572 (pos)
                    (not (Pa_not_msg_p9))

                    ; #41725: <==negation-removal== 60390 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #47887: <==negation-removal== 22780 (pos)
                    (not (Bd_not_msg_p9))

                    ; #65379: <==negation-removal== 24660 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65665: <==negation-removal== 10059 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #82256: <==negation-removal== 25110 (pos)
                    (not (Pc_not_msg_p9))

                    ; #82720: <==negation-removal== 82704 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #88453: <==negation-removal== 37248 (pos)
                    (not (Pb_not_msg_p9))

                    ; #90840: <==negation-removal== 64866 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #91181: <==negation-removal== 17366 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action commsurvivor_p9_b_s
        :precondition (and (Bb_survivorat_s_p9)
                           (at_b_p9)
                           (Pb_survivorat_s_p9))
        :effect (and
                    ; #10059: <==closure== 42671 (pos)
                    (Pd_survivorat_s_p9)

                    ; #17366: <==closure== 71632 (pos)
                    (Pc_survivorat_s_p9)

                    ; #22780: <==closure== 23970 (pos)
                    (Pd_msg_p9)

                    ; #23970: <==commonly_known== 26423 (pos)
                    (Bd_msg_p9)

                    ; #24660: <==closure== 37248 (pos)
                    (Pb_msg_p9)

                    ; #25110: <==commonly_known== 26423 (pos)
                    (Bc_msg_p9)

                    ; #26423: origin
                    (msg_p9)

                    ; #35572: <==commonly_known== 26423 (pos)
                    (Ba_msg_p9)

                    ; #37248: <==commonly_known== 26423 (pos)
                    (Bb_msg_p9)

                    ; #42671: origin
                    (Bd_survivorat_s_p9)

                    ; #44669: <==closure== 82704 (pos)
                    (Pa_survivorat_s_p9)

                    ; #47219: <==closure== 25110 (pos)
                    (Pc_msg_p9)

                    ; #60390: origin
                    (Bb_survivorat_s_p9)

                    ; #64866: <==closure== 60390 (pos)
                    (Pb_survivorat_s_p9)

                    ; #71632: origin
                    (Bc_survivorat_s_p9)

                    ; #82704: origin
                    (Ba_survivorat_s_p9)

                    ; #87323: <==closure== 35572 (pos)
                    (Pa_msg_p9)

                    ; #12163: <==negation-removal== 47219 (pos)
                    (not (Bc_not_msg_p9))

                    ; #12947: <==negation-removal== 42671 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #19790: <==negation-removal== 44669 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #20564: <==negation-removal== 71632 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #23130: <==negation-removal== 26423 (pos)
                    (not (not_msg_p9))

                    ; #23413: <==negation-removal== 23970 (pos)
                    (not (Pd_not_msg_p9))

                    ; #26414: <==negation-removal== 87323 (pos)
                    (not (Ba_not_msg_p9))

                    ; #36692: <==negation-removal== 35572 (pos)
                    (not (Pa_not_msg_p9))

                    ; #41725: <==negation-removal== 60390 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #47887: <==negation-removal== 22780 (pos)
                    (not (Bd_not_msg_p9))

                    ; #65379: <==negation-removal== 24660 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65665: <==negation-removal== 10059 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #82256: <==negation-removal== 25110 (pos)
                    (not (Pc_not_msg_p9))

                    ; #82720: <==negation-removal== 82704 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #88453: <==negation-removal== 37248 (pos)
                    (not (Pb_not_msg_p9))

                    ; #90840: <==negation-removal== 64866 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #91181: <==negation-removal== 17366 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action commsurvivor_p9_c_s
        :precondition (and (Pc_survivorat_s_p9)
                           (at_c_p9)
                           (Bc_survivorat_s_p9))
        :effect (and
                    ; #10059: <==closure== 42671 (pos)
                    (Pd_survivorat_s_p9)

                    ; #17366: <==closure== 71632 (pos)
                    (Pc_survivorat_s_p9)

                    ; #22780: <==closure== 23970 (pos)
                    (Pd_msg_p9)

                    ; #23970: <==commonly_known== 26423 (pos)
                    (Bd_msg_p9)

                    ; #24660: <==closure== 37248 (pos)
                    (Pb_msg_p9)

                    ; #25110: <==commonly_known== 26423 (pos)
                    (Bc_msg_p9)

                    ; #26423: origin
                    (msg_p9)

                    ; #35572: <==commonly_known== 26423 (pos)
                    (Ba_msg_p9)

                    ; #37248: <==commonly_known== 26423 (pos)
                    (Bb_msg_p9)

                    ; #42671: origin
                    (Bd_survivorat_s_p9)

                    ; #44669: <==closure== 82704 (pos)
                    (Pa_survivorat_s_p9)

                    ; #47219: <==closure== 25110 (pos)
                    (Pc_msg_p9)

                    ; #60390: origin
                    (Bb_survivorat_s_p9)

                    ; #64866: <==closure== 60390 (pos)
                    (Pb_survivorat_s_p9)

                    ; #71632: origin
                    (Bc_survivorat_s_p9)

                    ; #82704: origin
                    (Ba_survivorat_s_p9)

                    ; #87323: <==closure== 35572 (pos)
                    (Pa_msg_p9)

                    ; #12163: <==negation-removal== 47219 (pos)
                    (not (Bc_not_msg_p9))

                    ; #12947: <==negation-removal== 42671 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #19790: <==negation-removal== 44669 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #20564: <==negation-removal== 71632 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #23130: <==negation-removal== 26423 (pos)
                    (not (not_msg_p9))

                    ; #23413: <==negation-removal== 23970 (pos)
                    (not (Pd_not_msg_p9))

                    ; #26414: <==negation-removal== 87323 (pos)
                    (not (Ba_not_msg_p9))

                    ; #36692: <==negation-removal== 35572 (pos)
                    (not (Pa_not_msg_p9))

                    ; #41725: <==negation-removal== 60390 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #47887: <==negation-removal== 22780 (pos)
                    (not (Bd_not_msg_p9))

                    ; #65379: <==negation-removal== 24660 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65665: <==negation-removal== 10059 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #82256: <==negation-removal== 25110 (pos)
                    (not (Pc_not_msg_p9))

                    ; #82720: <==negation-removal== 82704 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #88453: <==negation-removal== 37248 (pos)
                    (not (Pb_not_msg_p9))

                    ; #90840: <==negation-removal== 64866 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #91181: <==negation-removal== 17366 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action commsurvivor_p9_d_s
        :precondition (and (Bd_survivorat_s_p9)
                           (at_d_p9)
                           (Pd_survivorat_s_p9))
        :effect (and
                    ; #10059: <==closure== 42671 (pos)
                    (Pd_survivorat_s_p9)

                    ; #17366: <==closure== 71632 (pos)
                    (Pc_survivorat_s_p9)

                    ; #22780: <==closure== 23970 (pos)
                    (Pd_msg_p9)

                    ; #23970: <==commonly_known== 26423 (pos)
                    (Bd_msg_p9)

                    ; #24660: <==closure== 37248 (pos)
                    (Pb_msg_p9)

                    ; #25110: <==commonly_known== 26423 (pos)
                    (Bc_msg_p9)

                    ; #26423: origin
                    (msg_p9)

                    ; #35572: <==commonly_known== 26423 (pos)
                    (Ba_msg_p9)

                    ; #37248: <==commonly_known== 26423 (pos)
                    (Bb_msg_p9)

                    ; #42671: origin
                    (Bd_survivorat_s_p9)

                    ; #44669: <==closure== 82704 (pos)
                    (Pa_survivorat_s_p9)

                    ; #47219: <==closure== 25110 (pos)
                    (Pc_msg_p9)

                    ; #60390: origin
                    (Bb_survivorat_s_p9)

                    ; #64866: <==closure== 60390 (pos)
                    (Pb_survivorat_s_p9)

                    ; #71632: origin
                    (Bc_survivorat_s_p9)

                    ; #82704: origin
                    (Ba_survivorat_s_p9)

                    ; #87323: <==closure== 35572 (pos)
                    (Pa_msg_p9)

                    ; #12163: <==negation-removal== 47219 (pos)
                    (not (Bc_not_msg_p9))

                    ; #12947: <==negation-removal== 42671 (pos)
                    (not (Pd_not_survivorat_s_p9))

                    ; #19790: <==negation-removal== 44669 (pos)
                    (not (Ba_not_survivorat_s_p9))

                    ; #20564: <==negation-removal== 71632 (pos)
                    (not (Pc_not_survivorat_s_p9))

                    ; #23130: <==negation-removal== 26423 (pos)
                    (not (not_msg_p9))

                    ; #23413: <==negation-removal== 23970 (pos)
                    (not (Pd_not_msg_p9))

                    ; #26414: <==negation-removal== 87323 (pos)
                    (not (Ba_not_msg_p9))

                    ; #36692: <==negation-removal== 35572 (pos)
                    (not (Pa_not_msg_p9))

                    ; #41725: <==negation-removal== 60390 (pos)
                    (not (Pb_not_survivorat_s_p9))

                    ; #47887: <==negation-removal== 22780 (pos)
                    (not (Bd_not_msg_p9))

                    ; #65379: <==negation-removal== 24660 (pos)
                    (not (Bb_not_msg_p9))

                    ; #65665: <==negation-removal== 10059 (pos)
                    (not (Bd_not_survivorat_s_p9))

                    ; #82256: <==negation-removal== 25110 (pos)
                    (not (Pc_not_msg_p9))

                    ; #82720: <==negation-removal== 82704 (pos)
                    (not (Pa_not_survivorat_s_p9))

                    ; #88453: <==negation-removal== 37248 (pos)
                    (not (Pb_not_msg_p9))

                    ; #90840: <==negation-removal== 64866 (pos)
                    (not (Bb_not_survivorat_s_p9))

                    ; #91181: <==negation-removal== 17366 (pos)
                    (not (Bc_not_survivorat_s_p9))))

    (:action communcells_p1_p1_a
        :precondition (and (succ_p1_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p1_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (succ_p1_p1)
                           (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p1_p1_c
        :precondition (and (succ_p1_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p1_p1_d
        :precondition (and (succ_p1_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p1_p2_a
        :precondition (and (succ_p1_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p1)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p1_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p1_p2)
                           (at_b_p1)
                           (checked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p1_p2_c
        :precondition (and (succ_p1_p2)
                           (at_c_p1)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p1_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (succ_p1_p2)
                           (Bd_not_blocked_p2)
                           (checked_p2)
                           (at_d_p1))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p1_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p1_p3)
                           (at_a_p1)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p1_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p1)
                           (Bb_not_blocked_p3)
                           (succ_p1_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p1_p3_c
        :precondition (and (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p1)
                           (succ_p1_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p1_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3)
                           (at_d_p1)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p1_p4_a
        :precondition (and (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p1_p4)
                           (at_a_p1)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p1_p4_b
        :precondition (and (at_b_p1)
                           (succ_p1_p4)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p1_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p1)
                           (Pc_not_blocked_p4)
                           (succ_p1_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p1_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p1_p4)
                           (at_d_p1)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p1_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (succ_p1_p5)
                           (at_a_p1)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p5_b
        :precondition (and (checked_p5)
                           (succ_p1_p5)
                           (at_b_p1)
                           (Pb_not_blocked_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p5_c
        :precondition (and (checked_p5)
                           (at_c_p1)
                           (succ_p1_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p5_d
        :precondition (and (checked_p5)
                           (succ_p1_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p1)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p1_p6_a
        :precondition (and (succ_p1_p6)
                           (checked_p6)
                           (at_a_p1)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p6_b
        :precondition (and (succ_p1_p6)
                           (at_b_p1)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p1_p6)
                           (at_c_p1)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p1_p6)
                           (at_d_p1)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p1_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p1_p7_b
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p1_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p1_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (at_d_p1))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p1_p8_a
        :precondition (and (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p1)
                           (succ_p1_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p1_p8_b
        :precondition (and (succ_p1_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p1)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p1_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p1)
                           (Pc_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p1_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p1))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p1_p9_a
        :precondition (and (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p1_p9)
                           (at_a_p1)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p1_p9_b
        :precondition (and (checked_p9)
                           (succ_p1_p9)
                           (at_b_p1)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p1_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p1_p9)
                           (at_c_p1)
                           (checked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p1_p9_d
        :precondition (and (checked_p9)
                           (succ_p1_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p1))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p2_p1_a
        :precondition (and (at_a_p2)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p2_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p2_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p2)
                           (Bb_not_blocked_p1)
                           (checked_p1)
                           (succ_p2_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p2_p1_c
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p2_p1_d
        :precondition (and (Pd_not_blocked_p1)
                           (at_d_p2)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p2_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p2_p2_a
        :precondition (and (at_a_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p2_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p2)
                           (Bb_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p2_p2_c
        :precondition (and (checked_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p2_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p2)
                           (checked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p2_p3_a
        :precondition (and (at_a_p2)
                           (Pa_not_blocked_p3)
                           (succ_p2_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p2_p3_b
        :precondition (and (succ_p2_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p2)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p2_p3_c
        :precondition (and (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (at_c_p2))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p2_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (at_d_p2)
                           (succ_p2_p3)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p2_p4_a
        :precondition (and (succ_p2_p4)
                           (at_a_p2)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p2_p4_b
        :precondition (and (succ_p2_p4)
                           (at_b_p2)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p2_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p2_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p2))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p2_p4_d
        :precondition (and (succ_p2_p4)
                           (at_d_p2)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p2_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p2)
                           (succ_p2_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p5_b
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p2_p5)
                           (at_b_p2)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p5_c
        :precondition (and (checked_p5)
                           (succ_p2_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p2))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p5_d
        :precondition (and (checked_p5)
                           (at_d_p2)
                           (succ_p2_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p2_p6_a
        :precondition (and (at_a_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p6_b
        :precondition (and (succ_p2_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p2)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p2))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p2_p7_a
        :precondition (and (at_a_p2)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p2_p7_b
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p2_p7)
                           (at_b_p2)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p2_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p2_p7)
                           (at_c_p2))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p2_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p2)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p2_p8_a
        :precondition (and (at_a_p2)
                           (Ba_not_blocked_p8)
                           (succ_p2_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p2_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p2)
                           (succ_p2_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p2_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (at_c_p2))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p2_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p2)
                           (succ_p2_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p2_p9_a
        :precondition (and (checked_p9)
                           (at_a_p2)
                           (Pa_not_blocked_p9)
                           (succ_p2_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p2_p9_b
        :precondition (and (checked_p9)
                           (succ_p2_p9)
                           (at_b_p2)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p2_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p2_p9)
                           (checked_p9)
                           (at_c_p2))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p2_p9_d
        :precondition (and (checked_p9)
                           (at_d_p2)
                           (succ_p2_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p3_p1_a
        :precondition (and (succ_p3_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p3)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p3_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (succ_p3_p1)
                           (checked_p1)
                           (at_b_p3)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p3_p1_c
        :precondition (and (succ_p3_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p3)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p3_p1_d
        :precondition (and (Pd_not_blocked_p1)
                           (succ_p3_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p3))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p3_p2_a
        :precondition (and (succ_p3_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p3)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p3_p2_b
        :precondition (and (succ_p3_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p3)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p3_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p3))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p3_p2_d
        :precondition (and (succ_p3_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (checked_p2)
                           (at_d_p3))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p3_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p3_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p3_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (at_c_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p3_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p3_p3)
                           (at_d_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p3_p4_a
        :precondition (and (Ba_not_blocked_p4)
                           (at_a_p3)
                           (Pa_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p3_p4_b
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p3_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p3)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p3_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p3_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p3)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p3_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p3_p4)
                           (at_d_p3))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p3_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p3)
                           (succ_p3_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p5_b
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p3)
                           (Bb_not_blocked_p5)
                           (succ_p3_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p5_c
        :precondition (and (checked_p5)
                           (succ_p3_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p3)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p5_d
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (succ_p3_p5)
                           (at_d_p3)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p3_p6_a
        :precondition (and (at_a_p3)
                           (succ_p3_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p6_b
        :precondition (and (succ_p3_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (at_b_p3))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p3_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p3))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p3_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p3))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p3_p7_a
        :precondition (and (succ_p3_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p3)
                           (Ba_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p3_p7_b
        :precondition (and (succ_p3_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p3)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p3_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p3))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p3_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p3_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (at_d_p3))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p3_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p3)
                           (succ_p3_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p3_p8_b
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p3_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p3)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p3_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (succ_p3_p8)
                           (at_c_p3)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p3_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p3_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p3))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p3_p9_a
        :precondition (and (checked_p9)
                           (at_a_p3)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (succ_p3_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p3_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p3)
                           (succ_p3_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p3_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p3_p9_d
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (succ_p3_p9)
                           (at_d_p3))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p4_p1_a
        :precondition (and (succ_p4_p1)
                           (at_a_p4)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p4_p1_b
        :precondition (and (succ_p4_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p4)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p4_p1_c
        :precondition (and (succ_p4_p1)
                           (at_c_p4)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p4_p1_d
        :precondition (and (succ_p4_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p4)
                           (Bd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p4_p2_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p4_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p4_p2_c
        :precondition (and (at_c_p4)
                           (checked_p2)
                           (succ_p4_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p4_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p4)
                           (succ_p4_p2)
                           (checked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p4_p3_a
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p4_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p4_p3_c
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p4_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p4)
                           (succ_p4_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p4_p4_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p4)
                           (succ_p4_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p4_p4_b
        :precondition (and (succ_p4_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p4_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p4_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p4_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p4_p5_a
        :precondition (and (checked_p5)
                           (at_a_p4)
                           (Ba_not_blocked_p5)
                           (succ_p4_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p5_b
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p4)
                           (succ_p4_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p5_c
        :precondition (and (checked_p5)
                           (at_c_p4)
                           (Pc_not_blocked_p5)
                           (succ_p4_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p5_d
        :precondition (and (checked_p5)
                           (at_d_p4)
                           (Bd_not_blocked_p5)
                           (succ_p4_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p4_p6_a
        :precondition (and (at_a_p4)
                           (succ_p4_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p6_b
        :precondition (and (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p4_p6)
                           (at_b_p4)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p6_c
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p6)
                           (succ_p4_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p4)
                           (succ_p4_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p4_p7_a
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p4_p7_b
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p4)
                           (succ_p4_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p4_p7_c
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p4_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p4_p8_a
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p4_p8_b
        :precondition (and (at_b_p4)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p4_p8_c
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p4_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p4)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p4_p9_a
        :precondition (and (at_a_p4)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p4_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p4_p9_b
        :precondition (and (checked_p9)
                           (at_b_p4)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p4_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p4_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (at_c_p4)
                           (Pc_not_blocked_p9)
                           (succ_p4_p9)
                           (checked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p4_p9_d
        :precondition (and (checked_p9)
                           (at_d_p4)
                           (Pd_not_blocked_p9)
                           (succ_p4_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p5_p1_a
        :precondition (and (succ_p5_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p5)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p5_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p5)
                           (succ_p5_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p5_p1_c
        :precondition (and (succ_p5_p1)
                           (at_c_p5)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p5_p1_d
        :precondition (and (succ_p5_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p5)
                           (Bd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p5_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p5_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (at_b_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p5_p2_c
        :precondition (and (at_c_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p5_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p5)
                           (checked_p2)
                           (succ_p5_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p5_p3_a
        :precondition (and (succ_p5_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p5)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p5_p3_b
        :precondition (and (succ_p5_p3)
                           (at_b_p5)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p5_p3_c
        :precondition (and (succ_p5_p3)
                           (at_c_p5)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p5_p3_d
        :precondition (and (succ_p5_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p5)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p5_p4_a
        :precondition (and (Ba_not_blocked_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p5_p4_b
        :precondition (and (at_b_p5)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p5_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p5_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p5)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p5_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p5_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (at_d_p5)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p5_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p5_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p5)
                           (succ_p5_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p5_b
        :precondition (and (checked_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5)
                           (succ_p5_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p5_c
        :precondition (and (checked_p5)
                           (at_c_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p5_d
        :precondition (and (checked_p5)
                           (at_d_p5)
                           (Bd_not_blocked_p5)
                           (succ_p5_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p5_p6_a
        :precondition (and (at_a_p5)
                           (checked_p6)
                           (succ_p5_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p6_b
        :precondition (and (at_b_p5)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (at_c_p5)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p5)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p5_p7_a
        :precondition (and (succ_p5_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p5)
                           (Ba_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p5_p7_b
        :precondition (and (succ_p5_p7)
                           (at_b_p5)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p5_p7_c
        :precondition (and (succ_p5_p7)
                           (at_c_p5)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p5_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p5_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p5)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p5_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p5)
                           (succ_p5_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p5_p8_b
        :precondition (and (at_b_p5)
                           (Pb_not_blocked_p8)
                           (succ_p5_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p5_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p5)
                           (Pc_not_blocked_p8)
                           (succ_p5_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p5_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p5)
                           (succ_p5_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p5_p9_a
        :precondition (and (checked_p9)
                           (succ_p5_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p5)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p5_p9_b
        :precondition (and (checked_p9)
                           (at_b_p5)
                           (succ_p5_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p5_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (at_c_p5)
                           (Pc_not_blocked_p9)
                           (succ_p5_p9)
                           (checked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p5_p9_d
        :precondition (and (checked_p9)
                           (succ_p5_p9)
                           (at_d_p5)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p6_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (succ_p6_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p6))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p6_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p6)
                           (succ_p6_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p6_p1_c
        :precondition (and (at_c_p6)
                           (succ_p6_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p6_p1_d
        :precondition (and (Pd_not_blocked_p1)
                           (at_d_p6)
                           (succ_p6_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p6_p2_a
        :precondition (and (succ_p6_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p6)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p6_p2_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p2)
                           (succ_p6_p2)
                           (checked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p6_p2_c
        :precondition (and (at_c_p6)
                           (succ_p6_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p6_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p6_p2)
                           (at_d_p6)
                           (checked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p6_p3_a
        :precondition (and (succ_p6_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p6)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p6_p3_b
        :precondition (and (at_b_p6)
                           (succ_p6_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p6_p3_c
        :precondition (and (succ_p6_p3)
                           (at_c_p6)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p6_p3_d
        :precondition (and (succ_p6_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p6)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p6_p4_a
        :precondition (and (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p6)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p6_p4_b
        :precondition (and (at_b_p6)
                           (succ_p6_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p6_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p6)
                           (succ_p6_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p6_p4_d
        :precondition (and (Bd_not_blocked_p4)
                           (at_d_p6)
                           (succ_p6_p4)
                           (Pd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p6_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p6)
                           (Pa_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p5_b
        :precondition (and (checked_p5)
                           (at_b_p6)
                           (Pb_not_blocked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p5_c
        :precondition (and (checked_p5)
                           (at_c_p6)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p5_d
        :precondition (and (checked_p5)
                           (at_d_p6)
                           (Bd_not_blocked_p5)
                           (succ_p6_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p6_p6_a
        :precondition (and (succ_p6_p6)
                           (checked_p6)
                           (at_a_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p6_b
        :precondition (and (succ_p6_p6)
                           (at_b_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p6_c
        :precondition (and (succ_p6_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p6_d
        :precondition (and (succ_p6_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p6_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (succ_p6_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p6))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p6_p7_b
        :precondition (and (at_b_p6)
                           (succ_p6_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p6_p7_c
        :precondition (and (at_c_p6)
                           (Pc_not_blocked_p7)
                           (succ_p6_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p6_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p6)
                           (succ_p6_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p6_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p6)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p6_p8_b
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (succ_p6_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p6_p8_c
        :precondition (and (at_c_p6)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (succ_p6_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p6_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p6)
                           (succ_p6_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p6_p9_a
        :precondition (and (succ_p6_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p6))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p6_p9_b
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p6_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (at_c_p6)
                           (Pc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p6_p9_d
        :precondition (and (succ_p6_p9)
                           (checked_p9)
                           (at_d_p6)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p7_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p7)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p7_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p7)
                           (Bb_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p7_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p7_p1)
                           (at_c_p7)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p7_p1_d
        :precondition (and (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p7_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p7_p2)
                           (at_a_p7)
                           (Pa_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p7_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (at_b_p7)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p7_p2_c
        :precondition (and (succ_p7_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p7))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p7_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (at_d_p7))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p7_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p7_p3)
                           (at_a_p7)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p7_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p7_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p7)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p7_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (succ_p7_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p7)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p7_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (at_d_p7)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p7_p4_a
        :precondition (and (succ_p7_p4)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p7)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p7_p4_b
        :precondition (and (succ_p7_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p7)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p7_p4_c
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p7_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p7)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p7_p4_d
        :precondition (and (succ_p7_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p7)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p7_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p7)
                           (succ_p7_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p5_b
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p7)
                           (succ_p7_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p5_c
        :precondition (and (checked_p5)
                           (at_c_p7)
                           (Pc_not_blocked_p5)
                           (succ_p7_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p5_d
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p7)
                           (succ_p7_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p7_p6_a
        :precondition (and (succ_p7_p6)
                           (at_a_p7)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p6_b
        :precondition (and (succ_p7_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p7)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p7_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p7))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p7_p6)
                           (checked_p6)
                           (at_d_p7)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p7_p7_a
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p7)
                           (checked_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p7_p7_b
        :precondition (and (Pb_not_blocked_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p7_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p7_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (at_d_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p7_p8_a
        :precondition (and (succ_p7_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p7)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p7_p8_b
        :precondition (and (succ_p7_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p7)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p7_p8_c
        :precondition (and (succ_p7_p8)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p7)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p7_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p7_p8)
                           (at_d_p7)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p7_p9_a
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p7)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p7_p9_b
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p7)
                           (succ_p7_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p7_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p7_p9)
                           (at_c_p7))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p7_p9_d
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (at_d_p7)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p8_p1_a
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p8)
                           (succ_p8_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p8_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p8)
                           (succ_p8_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p8_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (succ_p8_p1)
                           (checked_p1)
                           (at_c_p8)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p8_p1_d
        :precondition (and (Bd_not_blocked_p1)
                           (at_d_p8)
                           (Pd_not_blocked_p1)
                           (succ_p8_p1)
                           (checked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p8_p2_a
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p8)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p8_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (at_b_p8)
                           (checked_p2)
                           (succ_p8_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p8_p2_c
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p8_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p8)
                           (checked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p8_p3_a
        :precondition (and (succ_p8_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p8)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p8_p3_b
        :precondition (and (succ_p8_p3)
                           (at_b_p8)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p8_p3_c
        :precondition (and (succ_p8_p3)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p8)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p8_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p8_p3)
                           (at_d_p8)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p8_p4_a
        :precondition (and (succ_p8_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p8)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p8_p4_b
        :precondition (and (succ_p8_p4)
                           (at_b_p8)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p8_p4_c
        :precondition (and (succ_p8_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p8)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p8_p4_d
        :precondition (and (succ_p8_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p8)
                           (Pd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p8_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p8)
                           (succ_p8_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p5_b
        :precondition (and (checked_p5)
                           (at_b_p8)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p5_c
        :precondition (and (checked_p5)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p8)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p5_d
        :precondition (and (checked_p5)
                           (at_d_p8)
                           (succ_p8_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p8_p6_a
        :precondition (and (succ_p8_p6)
                           (at_a_p8)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p6_b
        :precondition (and (at_b_p8)
                           (succ_p8_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p8_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p8))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p8)
                           (succ_p8_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p8_p7_a
        :precondition (and (succ_p8_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p8)
                           (Ba_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p8_p7_b
        :precondition (and (succ_p8_p7)
                           (at_b_p8)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p8_p7_c
        :precondition (and (succ_p8_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p8))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p8_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p8_p7)
                           (at_d_p8)
                           (Bd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p8_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p8)
                           (succ_p8_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p8_p8_b
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p8)
                           (succ_p8_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p8_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (succ_p8_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p8_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p8)
                           (succ_p8_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p8_p9_a
        :precondition (and (checked_p9)
                           (at_a_p8)
                           (Pa_not_blocked_p9)
                           (succ_p8_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p8_p9_b
        :precondition (and (checked_p9)
                           (at_b_p8)
                           (succ_p8_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p8_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p8_p9_d
        :precondition (and (checked_p9)
                           (at_d_p8)
                           (Pd_not_blocked_p9)
                           (succ_p8_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p9_p1_a
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p9_p1_b
        :precondition (and (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p9)
                           (succ_p9_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p9_p1_c
        :precondition (and (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p9)
                           (succ_p9_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p9_p1_d
        :precondition (and (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_d_p9))
        :effect (and
                    ; #14149: <==closure== 61910 (pos)
                    (Pd_obss_p1)

                    ; #23258: <==closure== 86889 (pos)
                    (Pa_obss_p1)

                    ; #25816: <==closure== 46406 (pos)
                    (Pc_obss_p1)

                    ; #27991: origin
                    (obss_p1)

                    ; #31786: <==commonly_known== 27991 (pos)
                    (Bb_obss_p1)

                    ; #32026: <==closure== 45843 (pos)
                    (Pa_not_blocked_p1)

                    ; #33555: <==closure== 57801 (pos)
                    (Pb_not_blocked_p1)

                    ; #45843: origin
                    (Ba_not_blocked_p1)

                    ; #46406: <==commonly_known== 27991 (pos)
                    (Bc_obss_p1)

                    ; #48203: <==closure== 31786 (pos)
                    (Pb_obss_p1)

                    ; #50985: origin
                    (Bd_not_blocked_p1)

                    ; #57801: origin
                    (Bb_not_blocked_p1)

                    ; #61910: <==commonly_known== 27991 (pos)
                    (Bd_obss_p1)

                    ; #67261: <==closure== 71751 (pos)
                    (Pc_not_blocked_p1)

                    ; #71751: origin
                    (Bc_not_blocked_p1)

                    ; #74932: <==closure== 50985 (pos)
                    (Pd_not_blocked_p1)

                    ; #86889: <==commonly_known== 27991 (pos)
                    (Ba_obss_p1)

                    ; #12578: <==negation-removal== 48203 (pos)
                    (not (Bb_not_obss_p1))

                    ; #14661: <==negation-removal== 50985 (pos)
                    (not (Pd_blocked_p1))

                    ; #14931: <==negation-removal== 32026 (pos)
                    (not (Ba_blocked_p1))

                    ; #21906: <==negation-removal== 27991 (pos)
                    (not (not_obss_p1))

                    ; #29741: <==negation-removal== 74932 (pos)
                    (not (Bd_blocked_p1))

                    ; #30728: <==negation-removal== 23258 (pos)
                    (not (Ba_not_obss_p1))

                    ; #30777: <==negation-removal== 14149 (pos)
                    (not (Bd_not_obss_p1))

                    ; #36284: <==negation-removal== 33555 (pos)
                    (not (Bb_blocked_p1))

                    ; #54076: <==negation-removal== 45843 (pos)
                    (not (Pa_blocked_p1))

                    ; #63994: <==negation-removal== 57801 (pos)
                    (not (Pb_blocked_p1))

                    ; #67661: <==negation-removal== 46406 (pos)
                    (not (Pc_not_obss_p1))

                    ; #70891: <==negation-removal== 67261 (pos)
                    (not (Bc_blocked_p1))

                    ; #81899: <==negation-removal== 61910 (pos)
                    (not (Pd_not_obss_p1))

                    ; #82234: <==negation-removal== 86889 (pos)
                    (not (Pa_not_obss_p1))

                    ; #84031: <==negation-removal== 71751 (pos)
                    (not (Pc_blocked_p1))

                    ; #88747: <==negation-removal== 25816 (pos)
                    (not (Bc_not_obss_p1))

                    ; #90673: <==negation-removal== 31786 (pos)
                    (not (Pb_not_obss_p1))))

    (:action communcells_p9_p2_a
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p9_p2_b
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2)
                           (at_b_p9)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p9_p2_c
        :precondition (and (succ_p9_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p9)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p9_p2_d
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2)
                           (at_d_p9))
        :effect (and
                    ; #20836: <==commonly_known== 55587 (pos)
                    (Bb_obss_p2)

                    ; #27228: <==closure== 20836 (pos)
                    (Pb_obss_p2)

                    ; #30529: <==closure== 69186 (pos)
                    (Pb_not_blocked_p2)

                    ; #31243: <==closure== 54237 (pos)
                    (Pd_not_blocked_p2)

                    ; #37935: <==closure== 49904 (pos)
                    (Pc_obss_p2)

                    ; #45499: <==closure== 54445 (pos)
                    (Pa_obss_p2)

                    ; #46511: <==closure== 50275 (pos)
                    (Pd_obss_p2)

                    ; #48443: origin
                    (Bc_not_blocked_p2)

                    ; #49904: <==commonly_known== 55587 (pos)
                    (Bc_obss_p2)

                    ; #50275: <==commonly_known== 55587 (pos)
                    (Bd_obss_p2)

                    ; #54237: origin
                    (Bd_not_blocked_p2)

                    ; #54445: <==commonly_known== 55587 (pos)
                    (Ba_obss_p2)

                    ; #55587: origin
                    (obss_p2)

                    ; #57364: <==closure== 77992 (pos)
                    (Pa_not_blocked_p2)

                    ; #69186: origin
                    (Bb_not_blocked_p2)

                    ; #77992: origin
                    (Ba_not_blocked_p2)

                    ; #94704: <==closure== 48443 (pos)
                    (Pc_not_blocked_p2)

                    ; #23533: <==negation-removal== 69186 (pos)
                    (not (Pb_blocked_p2))

                    ; #24822: <==negation-removal== 57364 (pos)
                    (not (Ba_blocked_p2))

                    ; #31102: <==negation-removal== 49904 (pos)
                    (not (Pc_not_obss_p2))

                    ; #31240: <==negation-removal== 31243 (pos)
                    (not (Bd_blocked_p2))

                    ; #37797: <==negation-removal== 27228 (pos)
                    (not (Bb_not_obss_p2))

                    ; #51720: <==negation-removal== 45499 (pos)
                    (not (Ba_not_obss_p2))

                    ; #53849: <==negation-removal== 55587 (pos)
                    (not (not_obss_p2))

                    ; #56357: <==negation-removal== 54237 (pos)
                    (not (Pd_blocked_p2))

                    ; #56518: <==negation-removal== 48443 (pos)
                    (not (Pc_blocked_p2))

                    ; #59328: <==negation-removal== 77992 (pos)
                    (not (Pa_blocked_p2))

                    ; #60713: <==negation-removal== 94704 (pos)
                    (not (Bc_blocked_p2))

                    ; #65515: <==negation-removal== 54445 (pos)
                    (not (Pa_not_obss_p2))

                    ; #72654: <==negation-removal== 37935 (pos)
                    (not (Bc_not_obss_p2))

                    ; #77285: <==negation-removal== 50275 (pos)
                    (not (Pd_not_obss_p2))

                    ; #82766: <==negation-removal== 30529 (pos)
                    (not (Bb_blocked_p2))

                    ; #82994: <==negation-removal== 20836 (pos)
                    (not (Pb_not_obss_p2))

                    ; #92199: <==negation-removal== 46511 (pos)
                    (not (Bd_not_obss_p2))))

    (:action communcells_p9_p3_a
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p9)
                           (succ_p9_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p9_p3_b
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p9_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p9)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p9_p3_c
        :precondition (and (Bc_not_blocked_p3)
                           (succ_p9_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p9)
                           (checked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p9_p3_d
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p9_p3)
                           (checked_p3)
                           (at_d_p9)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #10389: <==commonly_known== 81595 (pos)
                    (Bc_obss_p3)

                    ; #12804: <==closure== 75574 (pos)
                    (Pa_obss_p3)

                    ; #13757: <==closure== 49329 (pos)
                    (Pb_obss_p3)

                    ; #15401: origin
                    (Bd_not_blocked_p3)

                    ; #33453: origin
                    (Ba_not_blocked_p3)

                    ; #49329: <==commonly_known== 81595 (pos)
                    (Bb_obss_p3)

                    ; #54594: origin
                    (Bb_not_blocked_p3)

                    ; #57291: <==closure== 33453 (pos)
                    (Pa_not_blocked_p3)

                    ; #62481: <==closure== 88599 (pos)
                    (Pc_not_blocked_p3)

                    ; #62743: <==closure== 10389 (pos)
                    (Pc_obss_p3)

                    ; #66518: <==closure== 15401 (pos)
                    (Pd_not_blocked_p3)

                    ; #71653: <==closure== 54594 (pos)
                    (Pb_not_blocked_p3)

                    ; #72882: <==closure== 90301 (pos)
                    (Pd_obss_p3)

                    ; #75574: <==commonly_known== 81595 (pos)
                    (Ba_obss_p3)

                    ; #81595: origin
                    (obss_p3)

                    ; #88599: origin
                    (Bc_not_blocked_p3)

                    ; #90301: <==commonly_known== 81595 (pos)
                    (Bd_obss_p3)

                    ; #10499: <==negation-removal== 72882 (pos)
                    (not (Bd_not_obss_p3))

                    ; #18438: <==negation-removal== 62743 (pos)
                    (not (Bc_not_obss_p3))

                    ; #19580: <==negation-removal== 81595 (pos)
                    (not (not_obss_p3))

                    ; #20506: <==negation-removal== 57291 (pos)
                    (not (Ba_blocked_p3))

                    ; #21381: <==negation-removal== 75574 (pos)
                    (not (Pa_not_obss_p3))

                    ; #31604: <==negation-removal== 90301 (pos)
                    (not (Pd_not_obss_p3))

                    ; #41043: <==negation-removal== 10389 (pos)
                    (not (Pc_not_obss_p3))

                    ; #44729: <==negation-removal== 62481 (pos)
                    (not (Bc_blocked_p3))

                    ; #48073: <==negation-removal== 33453 (pos)
                    (not (Pa_blocked_p3))

                    ; #48614: <==negation-removal== 71653 (pos)
                    (not (Bb_blocked_p3))

                    ; #51311: <==negation-removal== 66518 (pos)
                    (not (Bd_blocked_p3))

                    ; #57442: <==negation-removal== 49329 (pos)
                    (not (Pb_not_obss_p3))

                    ; #62787: <==negation-removal== 13757 (pos)
                    (not (Bb_not_obss_p3))

                    ; #65875: <==negation-removal== 12804 (pos)
                    (not (Ba_not_obss_p3))

                    ; #67778: <==negation-removal== 54594 (pos)
                    (not (Pb_blocked_p3))

                    ; #85838: <==negation-removal== 88599 (pos)
                    (not (Pc_blocked_p3))

                    ; #85927: <==negation-removal== 15401 (pos)
                    (not (Pd_blocked_p3))))

    (:action communcells_p9_p4_a
        :precondition (and (succ_p9_p4)
                           (at_a_p9)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p9_p4_b
        :precondition (and (succ_p9_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p9)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p9_p4_c
        :precondition (and (succ_p9_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p9)
                           (checked_p4))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p9_p4_d
        :precondition (and (succ_p9_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p9))
        :effect (and
                    ; #19411: <==closure== 73992 (pos)
                    (Pc_obss_p4)

                    ; #33896: <==closure== 52287 (pos)
                    (Pb_obss_p4)

                    ; #44724: <==commonly_known== 79245 (pos)
                    (Bd_obss_p4)

                    ; #48608: <==closure== 65009 (pos)
                    (Pa_not_blocked_p4)

                    ; #49764: <==closure== 86154 (pos)
                    (Pb_not_blocked_p4)

                    ; #52287: <==commonly_known== 79245 (pos)
                    (Bb_obss_p4)

                    ; #54121: origin
                    (Bc_not_blocked_p4)

                    ; #54677: <==closure== 54121 (pos)
                    (Pc_not_blocked_p4)

                    ; #56346: <==closure== 61012 (pos)
                    (Pa_obss_p4)

                    ; #61012: <==commonly_known== 79245 (pos)
                    (Ba_obss_p4)

                    ; #63709: <==closure== 65171 (pos)
                    (Pd_not_blocked_p4)

                    ; #65009: origin
                    (Ba_not_blocked_p4)

                    ; #65171: origin
                    (Bd_not_blocked_p4)

                    ; #73992: <==commonly_known== 79245 (pos)
                    (Bc_obss_p4)

                    ; #78024: <==closure== 44724 (pos)
                    (Pd_obss_p4)

                    ; #79245: origin
                    (obss_p4)

                    ; #86154: origin
                    (Bb_not_blocked_p4)

                    ; #11800: <==negation-removal== 73992 (pos)
                    (not (Pc_not_obss_p4))

                    ; #15105: <==negation-removal== 49764 (pos)
                    (not (Bb_blocked_p4))

                    ; #17733: <==negation-removal== 65009 (pos)
                    (not (Pa_blocked_p4))

                    ; #22828: <==negation-removal== 78024 (pos)
                    (not (Bd_not_obss_p4))

                    ; #25038: <==negation-removal== 63709 (pos)
                    (not (Bd_blocked_p4))

                    ; #33660: <==negation-removal== 79245 (pos)
                    (not (not_obss_p4))

                    ; #35510: <==negation-removal== 65171 (pos)
                    (not (Pd_blocked_p4))

                    ; #36732: <==negation-removal== 33896 (pos)
                    (not (Bb_not_obss_p4))

                    ; #39930: <==negation-removal== 86154 (pos)
                    (not (Pb_blocked_p4))

                    ; #40631: <==negation-removal== 61012 (pos)
                    (not (Pa_not_obss_p4))

                    ; #46508: <==negation-removal== 19411 (pos)
                    (not (Bc_not_obss_p4))

                    ; #49938: <==negation-removal== 54121 (pos)
                    (not (Pc_blocked_p4))

                    ; #69360: <==negation-removal== 48608 (pos)
                    (not (Ba_blocked_p4))

                    ; #71004: <==negation-removal== 44724 (pos)
                    (not (Pd_not_obss_p4))

                    ; #78471: <==negation-removal== 54677 (pos)
                    (not (Bc_blocked_p4))

                    ; #93964: <==negation-removal== 56346 (pos)
                    (not (Ba_not_obss_p4))

                    ; #98029: <==negation-removal== 52287 (pos)
                    (not (Pb_not_obss_p4))))

    (:action communcells_p9_p5_a
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p9)
                           (Pa_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p5_b
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p9)
                           (Bb_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p5_c
        :precondition (and (checked_p5)
                           (succ_p9_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p9))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p5_d
        :precondition (and (checked_p5)
                           (at_d_p9)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #14551: origin
                    (obss_p5)

                    ; #24364: <==closure== 85469 (pos)
                    (Pc_obss_p5)

                    ; #25700: <==commonly_known== 14551 (pos)
                    (Bb_obss_p5)

                    ; #33057: origin
                    (Bb_not_blocked_p5)

                    ; #58851: <==closure== 25700 (pos)
                    (Pb_obss_p5)

                    ; #62300: <==commonly_known== 14551 (pos)
                    (Bd_obss_p5)

                    ; #65317: <==closure== 89785 (pos)
                    (Pd_not_blocked_p5)

                    ; #72630: <==commonly_known== 14551 (pos)
                    (Ba_obss_p5)

                    ; #73135: origin
                    (Bc_not_blocked_p5)

                    ; #73674: <==closure== 72630 (pos)
                    (Pa_obss_p5)

                    ; #74516: <==closure== 62300 (pos)
                    (Pd_obss_p5)

                    ; #84058: <==closure== 73135 (pos)
                    (Pc_not_blocked_p5)

                    ; #85469: <==commonly_known== 14551 (pos)
                    (Bc_obss_p5)

                    ; #88129: <==closure== 91125 (pos)
                    (Pa_not_blocked_p5)

                    ; #89311: <==closure== 33057 (pos)
                    (Pb_not_blocked_p5)

                    ; #89785: origin
                    (Bd_not_blocked_p5)

                    ; #91125: origin
                    (Ba_not_blocked_p5)

                    ; #13481: <==negation-removal== 91125 (pos)
                    (not (Pa_blocked_p5))

                    ; #15774: <==negation-removal== 73674 (pos)
                    (not (Ba_not_obss_p5))

                    ; #24055: <==negation-removal== 62300 (pos)
                    (not (Pd_not_obss_p5))

                    ; #25060: <==negation-removal== 73135 (pos)
                    (not (Pc_blocked_p5))

                    ; #30203: <==negation-removal== 65317 (pos)
                    (not (Bd_blocked_p5))

                    ; #32318: <==negation-removal== 89785 (pos)
                    (not (Pd_blocked_p5))

                    ; #47072: <==negation-removal== 25700 (pos)
                    (not (Pb_not_obss_p5))

                    ; #53121: <==negation-removal== 33057 (pos)
                    (not (Pb_blocked_p5))

                    ; #67220: <==negation-removal== 89311 (pos)
                    (not (Bb_blocked_p5))

                    ; #73640: <==negation-removal== 72630 (pos)
                    (not (Pa_not_obss_p5))

                    ; #75815: <==negation-removal== 74516 (pos)
                    (not (Bd_not_obss_p5))

                    ; #76054: <==negation-removal== 24364 (pos)
                    (not (Bc_not_obss_p5))

                    ; #84611: <==negation-removal== 88129 (pos)
                    (not (Ba_blocked_p5))

                    ; #85611: <==negation-removal== 84058 (pos)
                    (not (Bc_blocked_p5))

                    ; #86280: <==negation-removal== 58851 (pos)
                    (not (Bb_not_obss_p5))

                    ; #88721: <==negation-removal== 14551 (pos)
                    (not (not_obss_p5))

                    ; #90116: <==negation-removal== 85469 (pos)
                    (not (Pc_not_obss_p5))))

    (:action communcells_p9_p6_a
        :precondition (and (at_a_p9)
                           (succ_p9_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p6_b
        :precondition (and (succ_p9_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p9)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p6_c
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p9))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p6_d
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p9))
        :effect (and
                    ; #15550: <==closure== 69301 (pos)
                    (Pc_obss_p6)

                    ; #19449: <==closure== 35702 (pos)
                    (Pb_obss_p6)

                    ; #21139: origin
                    (Ba_not_blocked_p6)

                    ; #26357: <==closure== 21139 (pos)
                    (Pa_not_blocked_p6)

                    ; #32449: <==closure== 37151 (pos)
                    (Pd_obss_p6)

                    ; #35702: <==commonly_known== 66128 (pos)
                    (Bb_obss_p6)

                    ; #37151: <==commonly_known== 66128 (pos)
                    (Bd_obss_p6)

                    ; #41934: <==commonly_known== 66128 (pos)
                    (Ba_obss_p6)

                    ; #43411: <==closure== 55906 (pos)
                    (Pb_not_blocked_p6)

                    ; #55906: origin
                    (Bb_not_blocked_p6)

                    ; #63059: <==closure== 66868 (pos)
                    (Pd_not_blocked_p6)

                    ; #63248: <==closure== 73891 (pos)
                    (Pc_not_blocked_p6)

                    ; #66128: origin
                    (obss_p6)

                    ; #66868: origin
                    (Bd_not_blocked_p6)

                    ; #69301: <==commonly_known== 66128 (pos)
                    (Bc_obss_p6)

                    ; #73891: origin
                    (Bc_not_blocked_p6)

                    ; #78537: <==closure== 41934 (pos)
                    (Pa_obss_p6)

                    ; #13120: <==negation-removal== 41934 (pos)
                    (not (Pa_not_obss_p6))

                    ; #16529: <==negation-removal== 55906 (pos)
                    (not (Pb_blocked_p6))

                    ; #27606: <==negation-removal== 63248 (pos)
                    (not (Bc_blocked_p6))

                    ; #27966: <==negation-removal== 32449 (pos)
                    (not (Bd_not_obss_p6))

                    ; #29455: <==negation-removal== 66128 (pos)
                    (not (not_obss_p6))

                    ; #30149: <==negation-removal== 78537 (pos)
                    (not (Ba_not_obss_p6))

                    ; #31584: <==negation-removal== 21139 (pos)
                    (not (Pa_blocked_p6))

                    ; #37739: <==negation-removal== 37151 (pos)
                    (not (Pd_not_obss_p6))

                    ; #43014: <==negation-removal== 19449 (pos)
                    (not (Bb_not_obss_p6))

                    ; #51071: <==negation-removal== 69301 (pos)
                    (not (Pc_not_obss_p6))

                    ; #57225: <==negation-removal== 43411 (pos)
                    (not (Bb_blocked_p6))

                    ; #68552: <==negation-removal== 26357 (pos)
                    (not (Ba_blocked_p6))

                    ; #71437: <==negation-removal== 66868 (pos)
                    (not (Pd_blocked_p6))

                    ; #76004: <==negation-removal== 15550 (pos)
                    (not (Bc_not_obss_p6))

                    ; #76676: <==negation-removal== 73891 (pos)
                    (not (Pc_blocked_p6))

                    ; #77583: <==negation-removal== 63059 (pos)
                    (not (Bd_blocked_p6))

                    ; #81527: <==negation-removal== 35702 (pos)
                    (not (Pb_not_obss_p6))))

    (:action communcells_p9_p7_a
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p9_p7_b
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p9_p7)
                           (at_b_p9)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p9_p7_c
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p9_p7_d
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #17577: <==closure== 40627 (pos)
                    (Pb_not_blocked_p7)

                    ; #18108: <==closure== 77440 (pos)
                    (Pa_not_blocked_p7)

                    ; #40627: origin
                    (Bb_not_blocked_p7)

                    ; #42898: <==commonly_known== 69833 (pos)
                    (Bc_obss_p7)

                    ; #44642: <==closure== 42898 (pos)
                    (Pc_obss_p7)

                    ; #47245: <==closure== 47483 (pos)
                    (Pa_obss_p7)

                    ; #47483: <==commonly_known== 69833 (pos)
                    (Ba_obss_p7)

                    ; #53125: <==closure== 88753 (pos)
                    (Pd_obss_p7)

                    ; #61918: <==closure== 67124 (pos)
                    (Pb_obss_p7)

                    ; #65642: <==closure== 86640 (pos)
                    (Pd_not_blocked_p7)

                    ; #67124: <==commonly_known== 69833 (pos)
                    (Bb_obss_p7)

                    ; #69437: origin
                    (Bc_not_blocked_p7)

                    ; #69833: origin
                    (obss_p7)

                    ; #77440: origin
                    (Ba_not_blocked_p7)

                    ; #81333: <==closure== 69437 (pos)
                    (Pc_not_blocked_p7)

                    ; #86640: origin
                    (Bd_not_blocked_p7)

                    ; #88753: <==commonly_known== 69833 (pos)
                    (Bd_obss_p7)

                    ; #29463: <==negation-removal== 40627 (pos)
                    (not (Pb_blocked_p7))

                    ; #35259: <==negation-removal== 65642 (pos)
                    (not (Bd_blocked_p7))

                    ; #35432: <==negation-removal== 81333 (pos)
                    (not (Bc_blocked_p7))

                    ; #44808: <==negation-removal== 47483 (pos)
                    (not (Pa_not_obss_p7))

                    ; #47866: <==negation-removal== 69437 (pos)
                    (not (Pc_blocked_p7))

                    ; #55332: <==negation-removal== 77440 (pos)
                    (not (Pa_blocked_p7))

                    ; #56391: <==negation-removal== 47245 (pos)
                    (not (Ba_not_obss_p7))

                    ; #60037: <==negation-removal== 44642 (pos)
                    (not (Bc_not_obss_p7))

                    ; #64952: <==negation-removal== 53125 (pos)
                    (not (Bd_not_obss_p7))

                    ; #67270: <==negation-removal== 61918 (pos)
                    (not (Bb_not_obss_p7))

                    ; #67356: <==negation-removal== 86640 (pos)
                    (not (Pd_blocked_p7))

                    ; #71650: <==negation-removal== 18108 (pos)
                    (not (Ba_blocked_p7))

                    ; #84339: <==negation-removal== 17577 (pos)
                    (not (Bb_blocked_p7))

                    ; #84551: <==negation-removal== 67124 (pos)
                    (not (Pb_not_obss_p7))

                    ; #89035: <==negation-removal== 88753 (pos)
                    (not (Pd_not_obss_p7))

                    ; #89161: <==negation-removal== 69833 (pos)
                    (not (not_obss_p7))

                    ; #92130: <==negation-removal== 42898 (pos)
                    (not (Pc_not_obss_p7))))

    (:action communcells_p9_p8_a
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p9)
                           (succ_p9_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p9_p8_b
        :precondition (and (at_b_p9)
                           (Pb_not_blocked_p8)
                           (succ_p9_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p9_p8_c
        :precondition (and (Bc_not_blocked_p8)
                           (succ_p9_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p9)
                           (checked_p8))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p9_p8_d
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p9_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p9))
        :effect (and
                    ; #14422: <==commonly_known== 31792 (pos)
                    (Bb_obss_p8)

                    ; #20025: <==closure== 29646 (pos)
                    (Pc_obss_p8)

                    ; #26633: <==closure== 53115 (pos)
                    (Pd_obss_p8)

                    ; #29646: <==commonly_known== 31792 (pos)
                    (Bc_obss_p8)

                    ; #31792: origin
                    (obss_p8)

                    ; #36821: origin
                    (Ba_not_blocked_p8)

                    ; #43882: origin
                    (Bc_not_blocked_p8)

                    ; #43997: origin
                    (Bd_not_blocked_p8)

                    ; #47307: <==closure== 36821 (pos)
                    (Pa_not_blocked_p8)

                    ; #50221: <==commonly_known== 31792 (pos)
                    (Ba_obss_p8)

                    ; #52464: origin
                    (Bb_not_blocked_p8)

                    ; #53115: <==commonly_known== 31792 (pos)
                    (Bd_obss_p8)

                    ; #56649: <==closure== 14422 (pos)
                    (Pb_obss_p8)

                    ; #57817: <==closure== 50221 (pos)
                    (Pa_obss_p8)

                    ; #58791: <==closure== 43882 (pos)
                    (Pc_not_blocked_p8)

                    ; #68538: <==closure== 43997 (pos)
                    (Pd_not_blocked_p8)

                    ; #85096: <==closure== 52464 (pos)
                    (Pb_not_blocked_p8)

                    ; #18144: <==negation-removal== 50221 (pos)
                    (not (Pa_not_obss_p8))

                    ; #28555: <==negation-removal== 52464 (pos)
                    (not (Pb_blocked_p8))

                    ; #31686: <==negation-removal== 68538 (pos)
                    (not (Bd_blocked_p8))

                    ; #32103: <==negation-removal== 53115 (pos)
                    (not (Pd_not_obss_p8))

                    ; #34367: <==negation-removal== 57817 (pos)
                    (not (Ba_not_obss_p8))

                    ; #35767: <==negation-removal== 26633 (pos)
                    (not (Bd_not_obss_p8))

                    ; #36339: <==negation-removal== 43882 (pos)
                    (not (Pc_blocked_p8))

                    ; #40840: <==negation-removal== 29646 (pos)
                    (not (Pc_not_obss_p8))

                    ; #45735: <==negation-removal== 85096 (pos)
                    (not (Bb_blocked_p8))

                    ; #48096: <==negation-removal== 43997 (pos)
                    (not (Pd_blocked_p8))

                    ; #50108: <==negation-removal== 36821 (pos)
                    (not (Pa_blocked_p8))

                    ; #50778: <==negation-removal== 56649 (pos)
                    (not (Bb_not_obss_p8))

                    ; #57342: <==negation-removal== 47307 (pos)
                    (not (Ba_blocked_p8))

                    ; #68564: <==negation-removal== 20025 (pos)
                    (not (Bc_not_obss_p8))

                    ; #73515: <==negation-removal== 58791 (pos)
                    (not (Bc_blocked_p8))

                    ; #84765: <==negation-removal== 31792 (pos)
                    (not (not_obss_p8))

                    ; #86286: <==negation-removal== 14422 (pos)
                    (not (Pb_not_obss_p8))))

    (:action communcells_p9_p9_a
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (at_a_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p9_p9_b
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (at_b_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p9_p9_c
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p9_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p9)
                           (checked_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action communcells_p9_p9_d
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p9))
        :effect (and
                    ; #17421: <==commonly_known== 77222 (pos)
                    (Bc_obss_p9)

                    ; #21401: <==closure== 24558 (pos)
                    (Pb_obss_p9)

                    ; #24558: <==commonly_known== 77222 (pos)
                    (Bb_obss_p9)

                    ; #31299: <==commonly_known== 77222 (pos)
                    (Ba_obss_p9)

                    ; #41520: <==closure== 31299 (pos)
                    (Pa_obss_p9)

                    ; #42887: origin
                    (Ba_not_blocked_p9)

                    ; #43573: <==closure== 74055 (pos)
                    (Pc_not_blocked_p9)

                    ; #49586: <==closure== 78521 (pos)
                    (Pd_obss_p9)

                    ; #50500: <==closure== 91860 (pos)
                    (Pd_not_blocked_p9)

                    ; #58797: origin
                    (Bb_not_blocked_p9)

                    ; #74055: origin
                    (Bc_not_blocked_p9)

                    ; #76073: <==closure== 17421 (pos)
                    (Pc_obss_p9)

                    ; #77222: origin
                    (obss_p9)

                    ; #78521: <==commonly_known== 77222 (pos)
                    (Bd_obss_p9)

                    ; #82033: <==closure== 58797 (pos)
                    (Pb_not_blocked_p9)

                    ; #83756: <==closure== 42887 (pos)
                    (Pa_not_blocked_p9)

                    ; #91860: origin
                    (Bd_not_blocked_p9)

                    ; #19189: <==negation-removal== 83756 (pos)
                    (not (Ba_blocked_p9))

                    ; #20511: <==negation-removal== 76073 (pos)
                    (not (Bc_not_obss_p9))

                    ; #29143: <==negation-removal== 24558 (pos)
                    (not (Pb_not_obss_p9))

                    ; #39710: <==negation-removal== 82033 (pos)
                    (not (Bb_blocked_p9))

                    ; #43310: <==negation-removal== 42887 (pos)
                    (not (Pa_blocked_p9))

                    ; #47154: <==negation-removal== 91860 (pos)
                    (not (Pd_blocked_p9))

                    ; #49771: <==negation-removal== 17421 (pos)
                    (not (Pc_not_obss_p9))

                    ; #58557: <==negation-removal== 78521 (pos)
                    (not (Pd_not_obss_p9))

                    ; #60526: <==negation-removal== 74055 (pos)
                    (not (Pc_blocked_p9))

                    ; #66494: <==negation-removal== 58797 (pos)
                    (not (Pb_blocked_p9))

                    ; #66894: <==negation-removal== 50500 (pos)
                    (not (Bd_blocked_p9))

                    ; #71713: <==negation-removal== 49586 (pos)
                    (not (Bd_not_obss_p9))

                    ; #86647: <==negation-removal== 31299 (pos)
                    (not (Pa_not_obss_p9))

                    ; #87772: <==negation-removal== 77222 (pos)
                    (not (not_obss_p9))

                    ; #88113: <==negation-removal== 43573 (pos)
                    (not (Bc_blocked_p9))

                    ; #89898: <==negation-removal== 21401 (pos)
                    (not (Bb_not_obss_p9))

                    ; #90438: <==negation-removal== 41520 (pos)
                    (not (Ba_not_obss_p9))))

    (:action move_a_p1_p1
        :precondition (and (succ_p1_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p1)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #52269: origin
                    (at_a_p2)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p3
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p1_p3)
                           (at_a_p1)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #69060: origin
                    (at_a_p3)

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p4
        :precondition (and (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (succ_p1_p4)
                           (at_a_p1)
                           (checked_p4))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #44574: origin
                    (at_a_p4)

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (succ_p1_p5)
                           (at_a_p1)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #68874: origin
                    (not (at_a_p1))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p1_p6
        :precondition (and (succ_p1_p6)
                           (checked_p6)
                           (at_a_p1)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #36919: origin
                    (at_a_p7)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p8
        :precondition (and (Pa_not_blocked_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p1)
                           (succ_p1_p8)
                           (checked_p8))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #54776: origin
                    (at_a_p8)

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p1_p9
        :precondition (and (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p1_p9)
                           (at_a_p1)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #29137: <==commonly_known== 68874 (neg)
                    (not_at_a_p1)

                    ; #45610: origin
                    (at_a_p9)

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))

                    ; #68874: origin
                    (not (at_a_p1))))

    (:action move_a_p2_p1
        :precondition (and (at_a_p2)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p2_p1))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #52269: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p2
        :precondition (and (at_a_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #52269: origin
                    (at_a_p2)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #52269: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p3
        :precondition (and (at_a_p2)
                           (Pa_not_blocked_p3)
                           (succ_p2_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #69060: origin
                    (at_a_p3)

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))

                    ; #52269: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_a_p2)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #44574: origin
                    (at_a_p4)

                    ; #52269: origin
                    (not (at_a_p2))

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p2_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p2)
                           (succ_p2_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #52269: origin
                    (not (at_a_p2))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p2_p6
        :precondition (and (at_a_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))

                    ; #52269: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p7
        :precondition (and (at_a_p2)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #36919: origin
                    (at_a_p7)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #52269: origin
                    (not (at_a_p2))))

    (:action move_a_p2_p8
        :precondition (and (at_a_p2)
                           (Ba_not_blocked_p8)
                           (succ_p2_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #54776: origin
                    (at_a_p8)

                    ; #52269: origin
                    (not (at_a_p2))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p2_p9
        :precondition (and (checked_p9)
                           (at_a_p2)
                           (Pa_not_blocked_p9)
                           (succ_p2_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #35805: <==commonly_known== 52269 (neg)
                    (not_at_a_p2)

                    ; #45610: origin
                    (at_a_p9)

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))

                    ; #52269: origin
                    (not (at_a_p2))))

    (:action move_a_p3_p1
        :precondition (and (succ_p3_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p3)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (Ba_not_blocked_p2)
                           (at_a_p3)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #52269: origin
                    (at_a_p2)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p3
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #69060: origin
                    (at_a_p3)

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p4
        :precondition (and (Ba_not_blocked_p4)
                           (at_a_p3)
                           (Pa_not_blocked_p4)
                           (succ_p3_p4)
                           (checked_p4))
        :effect (and
                    ; #44574: origin
                    (at_a_p4)

                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p3)
                           (succ_p3_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #69060: origin
                    (not (at_a_p3))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p3_p6
        :precondition (and (at_a_p3)
                           (succ_p3_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p7
        :precondition (and (succ_p3_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p3)
                           (Ba_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #36919: origin
                    (at_a_p7)

                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p8
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p3)
                           (succ_p3_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #54776: origin
                    (at_a_p8)

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p3_p9
        :precondition (and (checked_p9)
                           (at_a_p3)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9)
                           (succ_p3_p9))
        :effect (and
                    ; #45610: origin
                    (at_a_p9)

                    ; #48376: <==commonly_known== 69060 (neg)
                    (not_at_a_p3)

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))

                    ; #69060: origin
                    (not (at_a_p3))))

    (:action move_a_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_a_p4)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #44574: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p2
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #52269: origin
                    (at_a_p2)

                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #44574: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p3
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p3)
                           (checked_p3)
                           (Ba_not_blocked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #69060: origin
                    (at_a_p3)

                    ; #44574: origin
                    (not (at_a_p4))

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p4_p4
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p4)
                           (succ_p4_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #44574: origin
                    (at_a_p4)

                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #44574: origin
                    (not (at_a_p4))

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p4_p5
        :precondition (and (checked_p5)
                           (at_a_p4)
                           (Ba_not_blocked_p5)
                           (succ_p4_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #44574: origin
                    (not (at_a_p4))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p4_p6
        :precondition (and (at_a_p4)
                           (succ_p4_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #44574: origin
                    (not (at_a_p4))

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p4_p7
        :precondition (and (at_a_p4)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (succ_p4_p7)
                           (checked_p7))
        :effect (and
                    ; #36919: origin
                    (at_a_p7)

                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #44574: origin
                    (not (at_a_p4))))

    (:action move_a_p4_p8
        :precondition (and (at_a_p4)
                           (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #54776: origin
                    (at_a_p8)

                    ; #44574: origin
                    (not (at_a_p4))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p4_p9
        :precondition (and (at_a_p4)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (succ_p4_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #45610: origin
                    (at_a_p9)

                    ; #53390: <==commonly_known== 44574 (neg)
                    (not_at_a_p4)

                    ; #44574: origin
                    (not (at_a_p4))

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (Pa_not_blocked_p1)
                           (at_a_p5)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #68874: origin
                    (at_a_p1)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p5_p2
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #52269: origin
                    (at_a_p2)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p5_p3
        :precondition (and (succ_p5_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p5)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #69060: origin
                    (at_a_p3)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p5_p4
        :precondition (and (Ba_not_blocked_p4)
                           (checked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #44574: origin
                    (at_a_p4)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p5_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p5)
                           (succ_p5_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p5_p6
        :precondition (and (at_a_p5)
                           (checked_p6)
                           (succ_p5_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p5)
                           (Ba_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #36919: origin
                    (at_a_p7)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p5_p8
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p5)
                           (succ_p5_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #54776: origin
                    (at_a_p8)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p5_p9
        :precondition (and (checked_p9)
                           (succ_p5_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p5)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #45610: origin
                    (at_a_p9)

                    ; #83721: <==commonly_known== 15643 (neg)
                    (not_at_a_p5)

                    ; #15643: origin
                    (not (at_a_p5))

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p6_p1
        :precondition (and (Pa_not_blocked_p1)
                           (succ_p6_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (at_a_p6))
        :effect (and
                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #68874: origin
                    (at_a_p1)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))))

    (:action move_a_p6_p2
        :precondition (and (succ_p6_p2)
                           (Ba_not_blocked_p2)
                           (checked_p2)
                           (at_a_p6)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #52269: origin
                    (at_a_p2)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))))

    (:action move_a_p6_p3
        :precondition (and (succ_p6_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p6)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #69060: origin
                    (at_a_p3)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p6_p4
        :precondition (and (Ba_not_blocked_p4)
                           (succ_p6_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p6)
                           (checked_p4))
        :effect (and
                    ; #44574: origin
                    (at_a_p4)

                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p6_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p6)
                           (Pa_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p6_p6
        :precondition (and (succ_p6_p6)
                           (checked_p6)
                           (at_a_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p6_p7
        :precondition (and (Pa_not_blocked_p7)
                           (succ_p6_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (at_a_p6))
        :effect (and
                    ; #36919: origin
                    (at_a_p7)

                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))))

    (:action move_a_p6_p8
        :precondition (and (Ba_not_blocked_p8)
                           (Pa_not_blocked_p8)
                           (at_a_p6)
                           (checked_p8)
                           (succ_p6_p8))
        :effect (and
                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #54776: origin
                    (at_a_p8)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p6_p9
        :precondition (and (succ_p6_p9)
                           (Ba_not_blocked_p9)
                           (checked_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p6))
        :effect (and
                    ; #45610: origin
                    (at_a_p9)

                    ; #49978: <==commonly_known== 15104 (neg)
                    (not_at_a_p6)

                    ; #15104: origin
                    (not (at_a_p6))

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p7_p1
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p7)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #36919: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p2
        :precondition (and (Ba_not_blocked_p2)
                           (succ_p7_p2)
                           (at_a_p7)
                           (Pa_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #52269: origin
                    (at_a_p2)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #36919: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p3
        :precondition (and (Pa_not_blocked_p3)
                           (succ_p7_p3)
                           (at_a_p7)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #69060: origin
                    (at_a_p3)

                    ; #36919: origin
                    (not (at_a_p7))

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (at_a_p7)
                           (checked_p4))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #44574: origin
                    (at_a_p4)

                    ; #36919: origin
                    (not (at_a_p7))

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p7_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p7)
                           (succ_p7_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #36919: origin
                    (not (at_a_p7))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_a_p7)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #36919: origin
                    (not (at_a_p7))

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p7_p7
        :precondition (and (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (at_a_p7)
                           (checked_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #36919: origin
                    (at_a_p7)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #36919: origin
                    (not (at_a_p7))))

    (:action move_a_p7_p8
        :precondition (and (succ_p7_p8)
                           (Ba_not_blocked_p8)
                           (at_a_p7)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #54776: origin
                    (at_a_p8)

                    ; #36919: origin
                    (not (at_a_p7))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p7_p9
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (Pa_not_blocked_p9)
                           (at_a_p7)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #33406: <==commonly_known== 36919 (neg)
                    (not_at_a_p7)

                    ; #45610: origin
                    (at_a_p9)

                    ; #36919: origin
                    (not (at_a_p7))

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))))

    (:action move_a_p8_p1
        :precondition (and (Pa_not_blocked_p1)
                           (at_a_p8)
                           (succ_p8_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1))
        :effect (and
                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p2
        :precondition (and (Ba_not_blocked_p2)
                           (at_a_p8)
                           (checked_p2)
                           (Pa_not_blocked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #52269: origin
                    (at_a_p2)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p3
        :precondition (and (succ_p8_p3)
                           (Pa_not_blocked_p3)
                           (at_a_p8)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #69060: origin
                    (at_a_p3)

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (Ba_not_blocked_p4)
                           (at_a_p8)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #44574: origin
                    (at_a_p4)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p8)
                           (succ_p8_p5)
                           (Pa_not_blocked_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #54776: origin
                    (not (at_a_p8))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_a_p8)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (Pa_not_blocked_p7)
                           (at_a_p8)
                           (Ba_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #36919: origin
                    (at_a_p7)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p8_p8
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p8)
                           (succ_p8_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #54776: origin
                    (at_a_p8)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #54776: origin
                    (not (at_a_p8))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p8_p9
        :precondition (and (checked_p9)
                           (at_a_p8)
                           (Pa_not_blocked_p9)
                           (succ_p8_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #45610: origin
                    (at_a_p9)

                    ; #56653: <==commonly_known== 54776 (neg)
                    (not_at_a_p8)

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))

                    ; #54776: origin
                    (not (at_a_p8))))

    (:action move_a_p9_p1
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p1)
                           (checked_p1)
                           (Ba_not_blocked_p1)
                           (succ_p9_p1))
        :effect (and
                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #68874: origin
                    (at_a_p1)

                    ; #29137: <==negation-removal== 68874 (pos)
                    (not (not_at_a_p1))

                    ; #45610: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p2
        :precondition (and (at_a_p9)
                           (Ba_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2)
                           (Pa_not_blocked_p2))
        :effect (and
                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #52269: origin
                    (at_a_p2)

                    ; #35805: <==negation-removal== 52269 (pos)
                    (not (not_at_a_p2))

                    ; #45610: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p3
        :precondition (and (Pa_not_blocked_p3)
                           (at_a_p9)
                           (succ_p9_p3)
                           (Ba_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #69060: origin
                    (at_a_p3)

                    ; #45610: origin
                    (not (at_a_p9))

                    ; #48376: <==negation-removal== 69060 (pos)
                    (not (not_at_a_p3))))

    (:action move_a_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_a_p9)
                           (Ba_not_blocked_p4)
                           (Pa_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #44574: origin
                    (at_a_p4)

                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #45610: origin
                    (not (at_a_p9))

                    ; #53390: <==negation-removal== 44574 (pos)
                    (not (not_at_a_p4))))

    (:action move_a_p9_p5
        :precondition (and (checked_p5)
                           (Ba_not_blocked_p5)
                           (at_a_p9)
                           (Pa_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #15643: origin
                    (at_a_p5)

                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #45610: origin
                    (not (at_a_p9))

                    ; #83721: <==negation-removal== 15643 (pos)
                    (not (not_at_a_p5))))

    (:action move_a_p9_p6
        :precondition (and (at_a_p9)
                           (succ_p9_p6)
                           (checked_p6)
                           (Pa_not_blocked_p6)
                           (Ba_not_blocked_p6))
        :effect (and
                    ; #15104: origin
                    (at_a_p6)

                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #45610: origin
                    (not (at_a_p9))

                    ; #49978: <==negation-removal== 15104 (pos)
                    (not (not_at_a_p6))))

    (:action move_a_p9_p7
        :precondition (and (at_a_p9)
                           (Pa_not_blocked_p7)
                           (Ba_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7))
        :effect (and
                    ; #36919: origin
                    (at_a_p7)

                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #33406: <==negation-removal== 36919 (pos)
                    (not (not_at_a_p7))

                    ; #45610: origin
                    (not (at_a_p9))))

    (:action move_a_p9_p8
        :precondition (and (Ba_not_blocked_p8)
                           (at_a_p9)
                           (succ_p9_p8)
                           (Pa_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #54776: origin
                    (at_a_p8)

                    ; #45610: origin
                    (not (at_a_p9))

                    ; #56653: <==negation-removal== 54776 (pos)
                    (not (not_at_a_p8))))

    (:action move_a_p9_p9
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (at_a_p9)
                           (Pa_not_blocked_p9)
                           (Ba_not_blocked_p9))
        :effect (and
                    ; #45610: origin
                    (at_a_p9)

                    ; #48993: <==commonly_known== 45610 (neg)
                    (not_at_a_p9)

                    ; #45610: origin
                    (not (at_a_p9))

                    ; #48993: <==negation-removal== 45610 (pos)
                    (not (not_at_a_p9))))

    (:action move_b_p1_p1
        :precondition (and (Pb_not_blocked_p1)
                           (succ_p1_p1)
                           (at_b_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #39946: origin
                    (at_b_p1)

                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #39946: origin
                    (not (at_b_p1))

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p1_p2
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p1_p2)
                           (at_b_p1)
                           (checked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #39946: origin
                    (not (at_b_p1))

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p1_p3
        :precondition (and (Pb_not_blocked_p3)
                           (at_b_p1)
                           (Bb_not_blocked_p3)
                           (succ_p1_p3)
                           (checked_p3))
        :effect (and
                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #83262: origin
                    (at_b_p3)

                    ; #39946: origin
                    (not (at_b_p1))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p1_p4
        :precondition (and (at_b_p1)
                           (succ_p1_p4)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))

                    ; #39946: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p5
        :precondition (and (checked_p5)
                           (succ_p1_p5)
                           (at_b_p1)
                           (Pb_not_blocked_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #70953: origin
                    (at_b_p5)

                    ; #39946: origin
                    (not (at_b_p1))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_b_p1)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #39946: origin
                    (not (at_b_p1))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p1_p7
        :precondition (and (at_b_p1)
                           (Bb_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #80960: origin
                    (at_b_p7)

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))

                    ; #39946: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p8
        :precondition (and (succ_p1_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p1)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #78960: origin
                    (at_b_p8)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #39946: origin
                    (not (at_b_p1))))

    (:action move_b_p1_p9
        :precondition (and (checked_p9)
                           (succ_p1_p9)
                           (at_b_p1)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #59037: <==commonly_known== 39946 (neg)
                    (not_at_b_p1)

                    ; #76273: origin
                    (at_b_p9)

                    ; #39946: origin
                    (not (at_b_p1))

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p2_p1
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p2)
                           (Bb_not_blocked_p1)
                           (checked_p1)
                           (succ_p2_p1))
        :effect (and
                    ; #39946: origin
                    (at_b_p1)

                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p2_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p2)
                           (Bb_not_blocked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p2_p3
        :precondition (and (succ_p2_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p2)
                           (checked_p3))
        :effect (and
                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #83262: origin
                    (at_b_p3)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_b_p2)
                           (Bb_not_blocked_p4)
                           (Pb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p2_p5
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (succ_p2_p5)
                           (at_b_p2)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #70953: origin
                    (at_b_p5)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p2_p6
        :precondition (and (succ_p2_p6)
                           (Pb_not_blocked_p6)
                           (checked_p6)
                           (at_b_p2)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p2_p7
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p2_p7)
                           (at_b_p2)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #80960: origin
                    (at_b_p7)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p2_p8
        :precondition (and (Pb_not_blocked_p8)
                           (at_b_p2)
                           (succ_p2_p8)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #78960: origin
                    (at_b_p8)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #12986: origin
                    (not (at_b_p2))))

    (:action move_b_p2_p9
        :precondition (and (checked_p9)
                           (succ_p2_p9)
                           (at_b_p2)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #39969: <==commonly_known== 12986 (neg)
                    (not_at_b_p2)

                    ; #76273: origin
                    (at_b_p9)

                    ; #12986: origin
                    (not (at_b_p2))

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p3_p1
        :precondition (and (Pb_not_blocked_p1)
                           (succ_p3_p1)
                           (checked_p1)
                           (at_b_p3)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #39946: origin
                    (at_b_p1)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))

                    ; #83262: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p2
        :precondition (and (succ_p3_p2)
                           (Pb_not_blocked_p2)
                           (checked_p2)
                           (at_b_p3)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))

                    ; #83262: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p3
        :precondition (and (Pb_not_blocked_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #83262: origin
                    (at_b_p3)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #83262: origin
                    (not (at_b_p3))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p3_p4
        :precondition (and (Bb_not_blocked_p4)
                           (succ_p3_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p3)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))

                    ; #83262: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p5
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p3)
                           (Bb_not_blocked_p5)
                           (succ_p3_p5))
        :effect (and
                    ; #70953: origin
                    (at_b_p5)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #83262: origin
                    (not (at_b_p3))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p3_p6
        :precondition (and (succ_p3_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (at_b_p3))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #83262: origin
                    (not (at_b_p3))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p3_p7
        :precondition (and (succ_p3_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p3)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #80960: origin
                    (at_b_p7)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))

                    ; #83262: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p8
        :precondition (and (Pb_not_blocked_p8)
                           (succ_p3_p8)
                           (Bb_not_blocked_p8)
                           (at_b_p3)
                           (checked_p8))
        :effect (and
                    ; #78960: origin
                    (at_b_p8)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #83262: origin
                    (not (at_b_p3))))

    (:action move_b_p3_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p3)
                           (succ_p3_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #76273: origin
                    (at_b_p9)

                    ; #89787: <==commonly_known== 83262 (neg)
                    (not_at_b_p3)

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))

                    ; #83262: origin
                    (not (at_b_p3))))

    (:action move_b_p4_p1
        :precondition (and (succ_p4_p1)
                           (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p4)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #39946: origin
                    (at_b_p1)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p4_p2
        :precondition (and (Pb_not_blocked_p2)
                           (checked_p2)
                           (succ_p4_p2)
                           (at_b_p4)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p4_p3
        :precondition (and (Pb_not_blocked_p3)
                           (checked_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #83262: origin
                    (at_b_p3)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p4_p4
        :precondition (and (succ_p4_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p4_p5
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p4)
                           (succ_p4_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #70953: origin
                    (at_b_p5)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p4_p6
        :precondition (and (Pb_not_blocked_p6)
                           (checked_p6)
                           (succ_p4_p6)
                           (at_b_p4)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p4_p7
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p4)
                           (succ_p4_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #80960: origin
                    (at_b_p7)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p4_p8
        :precondition (and (at_b_p4)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #78960: origin
                    (at_b_p8)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #19780: origin
                    (not (at_b_p4))))

    (:action move_b_p4_p9
        :precondition (and (checked_p9)
                           (at_b_p4)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9)
                           (succ_p4_p9))
        :effect (and
                    ; #26744: <==commonly_known== 19780 (neg)
                    (not_at_b_p4)

                    ; #76273: origin
                    (at_b_p9)

                    ; #19780: origin
                    (not (at_b_p4))

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p5_p1
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p5)
                           (succ_p5_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #39946: origin
                    (at_b_p1)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))

                    ; #70953: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p2
        :precondition (and (Pb_not_blocked_p2)
                           (at_b_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))

                    ; #70953: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_b_p5)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #83262: origin
                    (at_b_p3)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #70953: origin
                    (not (at_b_p5))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p5_p4
        :precondition (and (at_b_p5)
                           (checked_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (succ_p5_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))

                    ; #70953: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p5
        :precondition (and (checked_p5)
                           (at_b_p5)
                           (Pb_not_blocked_p5)
                           (succ_p5_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #70953: origin
                    (at_b_p5)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #70953: origin
                    (not (at_b_p5))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p5_p6
        :precondition (and (at_b_p5)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #70953: origin
                    (not (at_b_p5))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_b_p5)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #80960: origin
                    (at_b_p7)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))

                    ; #70953: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p8
        :precondition (and (at_b_p5)
                           (Pb_not_blocked_p8)
                           (succ_p5_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #78960: origin
                    (at_b_p8)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #70953: origin
                    (not (at_b_p5))))

    (:action move_b_p5_p9
        :precondition (and (checked_p9)
                           (at_b_p5)
                           (succ_p5_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #76273: origin
                    (at_b_p9)

                    ; #83853: <==commonly_known== 70953 (neg)
                    (not_at_b_p5)

                    ; #70953: origin
                    (not (at_b_p5))

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p6_p1
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p6)
                           (succ_p6_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #39946: origin
                    (at_b_p1)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))))

    (:action move_b_p6_p2
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p2)
                           (succ_p6_p2)
                           (checked_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))))

    (:action move_b_p6_p3
        :precondition (and (at_b_p6)
                           (succ_p6_p3)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #83262: origin
                    (at_b_p3)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p6_p4
        :precondition (and (at_b_p6)
                           (succ_p6_p4)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))))

    (:action move_b_p6_p5
        :precondition (and (checked_p5)
                           (at_b_p6)
                           (Pb_not_blocked_p5)
                           (Bb_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #70953: origin
                    (at_b_p5)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_b_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p6_p7
        :precondition (and (at_b_p6)
                           (succ_p6_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #80960: origin
                    (at_b_p7)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))))

    (:action move_b_p6_p8
        :precondition (and (at_b_p6)
                           (Pb_not_blocked_p8)
                           (Bb_not_blocked_p8)
                           (succ_p6_p8)
                           (checked_p8))
        :effect (and
                    ; #78960: origin
                    (at_b_p8)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #12714: origin
                    (not (at_b_p6))))

    (:action move_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9)
                           (checked_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #76273: origin
                    (at_b_p9)

                    ; #87896: <==commonly_known== 12714 (neg)
                    (not_at_b_p6)

                    ; #12714: origin
                    (not (at_b_p6))

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))))

    (:action move_b_p7_p1
        :precondition (and (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p7)
                           (Bb_not_blocked_p1)
                           (succ_p7_p1))
        :effect (and
                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #39946: origin
                    (at_b_p1)

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))

                    ; #80960: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p2
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (at_b_p7)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))

                    ; #80960: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p3
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p7_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p7)
                           (checked_p3))
        :effect (and
                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #83262: origin
                    (at_b_p3)

                    ; #80960: origin
                    (not (at_b_p7))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p7_p4
        :precondition (and (succ_p7_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p7)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))

                    ; #80960: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p5
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p7)
                           (succ_p7_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #70953: origin
                    (at_b_p5)

                    ; #80960: origin
                    (not (at_b_p7))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p7_p6
        :precondition (and (succ_p7_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p7)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #80960: origin
                    (not (at_b_p7))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p7_p7
        :precondition (and (Pb_not_blocked_p7)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (at_b_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #80960: origin
                    (at_b_p7)

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))

                    ; #80960: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p8
        :precondition (and (succ_p7_p8)
                           (Pb_not_blocked_p8)
                           (at_b_p7)
                           (checked_p8)
                           (Bb_not_blocked_p8))
        :effect (and
                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #78960: origin
                    (at_b_p8)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #80960: origin
                    (not (at_b_p7))))

    (:action move_b_p7_p9
        :precondition (and (checked_p9)
                           (Bb_not_blocked_p9)
                           (at_b_p7)
                           (succ_p7_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #34643: <==commonly_known== 80960 (neg)
                    (not_at_b_p7)

                    ; #76273: origin
                    (at_b_p9)

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))

                    ; #80960: origin
                    (not (at_b_p7))))

    (:action move_b_p8_p1
        :precondition (and (Pb_not_blocked_p1)
                           (at_b_p8)
                           (succ_p8_p1)
                           (checked_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #39946: origin
                    (at_b_p1)

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))

                    ; #78960: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p2
        :precondition (and (Pb_not_blocked_p2)
                           (at_b_p8)
                           (checked_p2)
                           (succ_p8_p2)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #12986: origin
                    (at_b_p2)

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))

                    ; #78960: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_b_p8)
                           (Pb_not_blocked_p3)
                           (Bb_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #83262: origin
                    (at_b_p3)

                    ; #78960: origin
                    (not (at_b_p8))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_b_p8)
                           (Pb_not_blocked_p4)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #19780: origin
                    (at_b_p4)

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))

                    ; #78960: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p5
        :precondition (and (checked_p5)
                           (at_b_p8)
                           (succ_p8_p5)
                           (Pb_not_blocked_p5)
                           (Bb_not_blocked_p5))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #70953: origin
                    (at_b_p5)

                    ; #78960: origin
                    (not (at_b_p8))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p8_p6
        :precondition (and (at_b_p8)
                           (succ_p8_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #12714: origin
                    (at_b_p6)

                    ; #78960: origin
                    (not (at_b_p8))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_b_p8)
                           (checked_p7)
                           (Bb_not_blocked_p7)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #80960: origin
                    (at_b_p7)

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))

                    ; #78960: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p8
        :precondition (and (at_b_p8)
                           (Pb_not_blocked_p8)
                           (succ_p8_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #78960: origin
                    (at_b_p8)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #78960: origin
                    (not (at_b_p8))))

    (:action move_b_p8_p9
        :precondition (and (checked_p9)
                           (at_b_p8)
                           (succ_p8_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #11658: <==commonly_known== 78960 (neg)
                    (not_at_b_p8)

                    ; #76273: origin
                    (at_b_p9)

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))

                    ; #78960: origin
                    (not (at_b_p8))))

    (:action move_b_p9_p1
        :precondition (and (Pb_not_blocked_p1)
                           (checked_p1)
                           (at_b_p9)
                           (succ_p9_p1)
                           (Bb_not_blocked_p1))
        :effect (and
                    ; #39946: origin
                    (at_b_p1)

                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #59037: <==negation-removal== 39946 (pos)
                    (not (not_at_b_p1))

                    ; #76273: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p2
        :precondition (and (Pb_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2)
                           (at_b_p9)
                           (Bb_not_blocked_p2))
        :effect (and
                    ; #12986: origin
                    (at_b_p2)

                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #39969: <==negation-removal== 12986 (pos)
                    (not (not_at_b_p2))

                    ; #76273: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p3
        :precondition (and (Pb_not_blocked_p3)
                           (succ_p9_p3)
                           (Bb_not_blocked_p3)
                           (at_b_p9)
                           (checked_p3))
        :effect (and
                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #83262: origin
                    (at_b_p3)

                    ; #76273: origin
                    (not (at_b_p9))

                    ; #89787: <==negation-removal== 83262 (pos)
                    (not (not_at_b_p3))))

    (:action move_b_p9_p4
        :precondition (and (succ_p9_p4)
                           (Pb_not_blocked_p4)
                           (at_b_p9)
                           (Bb_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #19780: origin
                    (at_b_p4)

                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #26744: <==negation-removal== 19780 (pos)
                    (not (not_at_b_p4))

                    ; #76273: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p5
        :precondition (and (checked_p5)
                           (Pb_not_blocked_p5)
                           (at_b_p9)
                           (Bb_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #70953: origin
                    (at_b_p5)

                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #76273: origin
                    (not (at_b_p9))

                    ; #83853: <==negation-removal== 70953 (pos)
                    (not (not_at_b_p5))))

    (:action move_b_p9_p6
        :precondition (and (succ_p9_p6)
                           (checked_p6)
                           (Pb_not_blocked_p6)
                           (at_b_p9)
                           (Bb_not_blocked_p6))
        :effect (and
                    ; #12714: origin
                    (at_b_p6)

                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #76273: origin
                    (not (at_b_p9))

                    ; #87896: <==negation-removal== 12714 (pos)
                    (not (not_at_b_p6))))

    (:action move_b_p9_p7
        :precondition (and (checked_p7)
                           (Bb_not_blocked_p7)
                           (succ_p9_p7)
                           (at_b_p9)
                           (Pb_not_blocked_p7))
        :effect (and
                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #80960: origin
                    (at_b_p7)

                    ; #34643: <==negation-removal== 80960 (pos)
                    (not (not_at_b_p7))

                    ; #76273: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p8
        :precondition (and (at_b_p9)
                           (Pb_not_blocked_p8)
                           (succ_p9_p8)
                           (Bb_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #78960: origin
                    (at_b_p8)

                    ; #11658: <==negation-removal== 78960 (pos)
                    (not (not_at_b_p8))

                    ; #76273: origin
                    (not (at_b_p9))))

    (:action move_b_p9_p9
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (at_b_p9)
                           (Bb_not_blocked_p9)
                           (Pb_not_blocked_p9))
        :effect (and
                    ; #73219: <==commonly_known== 76273 (neg)
                    (not_at_b_p9)

                    ; #76273: origin
                    (at_b_p9)

                    ; #73219: <==negation-removal== 76273 (pos)
                    (not (not_at_b_p9))

                    ; #76273: origin
                    (not (at_b_p9))))

    (:action move_c_p1_p1
        :precondition (and (succ_p1_p1)
                           (Bc_not_blocked_p1)
                           (at_c_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_c_p1)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (checked_p2))
        :effect (and
                    ; #45712: origin
                    (at_c_p2)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p1_p3
        :precondition (and (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (at_c_p1)
                           (succ_p1_p3)
                           (checked_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p1_p4
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p1)
                           (Pc_not_blocked_p4)
                           (succ_p1_p4)
                           (checked_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p1_p5
        :precondition (and (checked_p5)
                           (at_c_p1)
                           (succ_p1_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #89616: origin
                    (at_c_p5)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p1_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p1_p6)
                           (at_c_p1)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p1_p7
        :precondition (and (Pc_not_blocked_p7)
                           (at_c_p1)
                           (Bc_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p1_p8
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p1)
                           (Pc_not_blocked_p8)
                           (succ_p1_p8)
                           (checked_p8))
        :effect (and
                    ; #75071: origin
                    (at_c_p8)

                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #17170: origin
                    (not (at_c_p1))

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p1_p9
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p1_p9)
                           (at_c_p1)
                           (checked_p9))
        :effect (and
                    ; #78478: <==commonly_known== 17170 (neg)
                    (not_at_c_p1)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #17170: origin
                    (not (at_c_p1))))

    (:action move_c_p2_p1
        :precondition (and (Pc_not_blocked_p1)
                           (checked_p1)
                           (Bc_not_blocked_p1)
                           (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #45712: origin
                    (not (at_c_p2))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p2_p2
        :precondition (and (checked_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #45712: origin
                    (at_c_p2)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #45712: origin
                    (not (at_c_p2))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p2_p3
        :precondition (and (succ_p2_p3)
                           (Pc_not_blocked_p3)
                           (Bc_not_blocked_p3)
                           (checked_p3)
                           (at_c_p2))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))

                    ; #45712: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p4
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p2_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4)
                           (at_c_p2))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))

                    ; #45712: origin
                    (not (at_c_p2))))

    (:action move_c_p2_p5
        :precondition (and (checked_p5)
                           (succ_p2_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p2))
        :effect (and
                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #89616: origin
                    (at_c_p5)

                    ; #45712: origin
                    (not (at_c_p2))

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p2_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p2_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p2))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #45712: origin
                    (not (at_c_p2))

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p2_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p2_p7)
                           (at_c_p2))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #45712: origin
                    (not (at_c_p2))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p2_p8
        :precondition (and (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (succ_p2_p8)
                           (checked_p8)
                           (at_c_p2))
        :effect (and
                    ; #75071: origin
                    (at_c_p8)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #45712: origin
                    (not (at_c_p2))

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p2_p9
        :precondition (and (Bc_not_blocked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p2_p9)
                           (checked_p9)
                           (at_c_p2))
        :effect (and
                    ; #82561: origin
                    (at_c_p9)

                    ; #89572: <==commonly_known== 45712 (neg)
                    (not_at_c_p2)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #45712: origin
                    (not (at_c_p2))))

    (:action move_c_p3_p1
        :precondition (and (succ_p3_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p3)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p3_p2
        :precondition (and (Pc_not_blocked_p2)
                           (succ_p3_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p3))
        :effect (and
                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #45712: origin
                    (at_c_p2)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p3_p3
        :precondition (and (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (at_c_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p3_p4
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p3_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p3)
                           (checked_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p3_p5
        :precondition (and (checked_p5)
                           (succ_p3_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p3)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #89616: origin
                    (at_c_p5)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p3_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p3_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p3))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p3_p7
        :precondition (and (Pc_not_blocked_p7)
                           (succ_p3_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p3))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p3_p8
        :precondition (and (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (succ_p3_p8)
                           (at_c_p3)
                           (checked_p8))
        :effect (and
                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #75071: origin
                    (at_c_p8)

                    ; #24296: origin
                    (not (at_c_p3))

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p3_p9
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #40445: <==commonly_known== 24296 (neg)
                    (not_at_c_p3)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #24296: origin
                    (not (at_c_p3))))

    (:action move_c_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_c_p4)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p4_p2
        :precondition (and (at_c_p4)
                           (checked_p2)
                           (succ_p4_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #45712: origin
                    (at_c_p2)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p4_p3
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3)
                           (succ_p4_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p4_p4
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p4)
                           (succ_p4_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p4_p5
        :precondition (and (checked_p5)
                           (at_c_p4)
                           (Pc_not_blocked_p5)
                           (succ_p4_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #89616: origin
                    (at_c_p5)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p4_p6
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p6)
                           (succ_p4_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p4_p7
        :precondition (and (at_c_p4)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p4_p7))
        :effect (and
                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #40133: origin
                    (at_c_p7)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p4_p8
        :precondition (and (at_c_p4)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #75071: origin
                    (at_c_p8)

                    ; #27074: origin
                    (not (at_c_p4))

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p4_p9
        :precondition (and (Bc_not_blocked_p9)
                           (at_c_p4)
                           (Pc_not_blocked_p9)
                           (succ_p4_p9)
                           (checked_p9))
        :effect (and
                    ; #38819: <==commonly_known== 27074 (neg)
                    (not_at_c_p4)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #27074: origin
                    (not (at_c_p4))))

    (:action move_c_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_c_p5)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p2
        :precondition (and (at_c_p5)
                           (checked_p2)
                           (succ_p5_p2)
                           (Pc_not_blocked_p2)
                           (Bc_not_blocked_p2))
        :effect (and
                    ; #45712: origin
                    (at_c_p2)

                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_c_p5)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p4
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p5)
                           (checked_p4)
                           (Pc_not_blocked_p4)
                           (succ_p5_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p5
        :precondition (and (checked_p5)
                           (at_c_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #89616: origin
                    (at_c_p5)

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p6
        :precondition (and (Bc_not_blocked_p6)
                           (at_c_p5)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_c_p5)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p8
        :precondition (and (Bc_not_blocked_p8)
                           (at_c_p5)
                           (Pc_not_blocked_p8)
                           (succ_p5_p8)
                           (checked_p8))
        :effect (and
                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #75071: origin
                    (at_c_p8)

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p5_p9
        :precondition (and (Bc_not_blocked_p9)
                           (at_c_p5)
                           (Pc_not_blocked_p9)
                           (succ_p5_p9)
                           (checked_p9))
        :effect (and
                    ; #72655: <==commonly_known== 89616 (neg)
                    (not_at_c_p5)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #89616: origin
                    (not (at_c_p5))))

    (:action move_c_p6_p1
        :precondition (and (at_c_p6)
                           (succ_p6_p1)
                           (Bc_not_blocked_p1)
                           (checked_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p6_p2
        :precondition (and (at_c_p6)
                           (succ_p6_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #45712: origin
                    (at_c_p2)

                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_c_p6)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (checked_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p6_p4
        :precondition (and (Bc_not_blocked_p4)
                           (at_c_p6)
                           (succ_p6_p4)
                           (Pc_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))))

    (:action move_c_p6_p5
        :precondition (and (checked_p5)
                           (at_c_p6)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (succ_p6_p5))
        :effect (and
                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #89616: origin
                    (at_c_p5)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p6_p6
        :precondition (and (succ_p6_p6)
                           (Bc_not_blocked_p6)
                           (at_c_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p6_p7
        :precondition (and (at_c_p6)
                           (Pc_not_blocked_p7)
                           (succ_p6_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p6_p8
        :precondition (and (at_c_p6)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (succ_p6_p8)
                           (checked_p8))
        :effect (and
                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #75071: origin
                    (at_c_p8)

                    ; #17811: origin
                    (not (at_c_p6))

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p6_p9
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p6_p9)
                           (at_c_p6)
                           (Pc_not_blocked_p9)
                           (checked_p9))
        :effect (and
                    ; #65094: <==commonly_known== 17811 (neg)
                    (not_at_c_p6)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #17811: origin
                    (not (at_c_p6))))

    (:action move_c_p7_p1
        :precondition (and (Bc_not_blocked_p1)
                           (checked_p1)
                           (succ_p7_p1)
                           (at_c_p7)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p7_p2
        :precondition (and (succ_p7_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (Pc_not_blocked_p2)
                           (at_c_p7))
        :effect (and
                    ; #45712: origin
                    (at_c_p2)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p7_p3
        :precondition (and (Bc_not_blocked_p3)
                           (succ_p7_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p7)
                           (checked_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))))

    (:action move_c_p7_p4
        :precondition (and (Bc_not_blocked_p4)
                           (succ_p7_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p7)
                           (checked_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))

                    ; #40133: origin
                    (not (at_c_p7))))

    (:action move_c_p7_p5
        :precondition (and (checked_p5)
                           (at_c_p7)
                           (Pc_not_blocked_p5)
                           (succ_p7_p5)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #89616: origin
                    (at_c_p5)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))))

    (:action move_c_p7_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p7_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p7))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))))

    (:action move_c_p7_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p7_p8
        :precondition (and (succ_p7_p8)
                           (Bc_not_blocked_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p7)
                           (checked_p8))
        :effect (and
                    ; #75071: origin
                    (at_c_p8)

                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #40133: origin
                    (not (at_c_p7))

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))))

    (:action move_c_p7_p9
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p7_p9)
                           (at_c_p7))
        :effect (and
                    ; #76558: <==commonly_known== 40133 (neg)
                    (not_at_c_p7)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #40133: origin
                    (not (at_c_p7))))

    (:action move_c_p8_p1
        :precondition (and (Bc_not_blocked_p1)
                           (succ_p8_p1)
                           (checked_p1)
                           (at_c_p8)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #17170: origin
                    (at_c_p1)

                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #75071: origin
                    (not (at_c_p8))

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))))

    (:action move_c_p8_p2
        :precondition (and (Pc_not_blocked_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #45712: origin
                    (at_c_p2)

                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #75071: origin
                    (not (at_c_p8))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (Bc_not_blocked_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p8)
                           (checked_p3))
        :effect (and
                    ; #24296: origin
                    (at_c_p3)

                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))

                    ; #75071: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p8)
                           (checked_p4))
        :effect (and
                    ; #27074: origin
                    (at_c_p4)

                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))

                    ; #75071: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p5
        :precondition (and (checked_p5)
                           (succ_p8_p5)
                           (Pc_not_blocked_p5)
                           (at_c_p8)
                           (Bc_not_blocked_p5))
        :effect (and
                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #89616: origin
                    (at_c_p5)

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))

                    ; #75071: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p8_p6)
                           (Pc_not_blocked_p6)
                           (checked_p6)
                           (at_c_p8))
        :effect (and
                    ; #17811: origin
                    (at_c_p6)

                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))

                    ; #75071: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p7
        :precondition (and (succ_p8_p7)
                           (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (at_c_p8))
        :effect (and
                    ; #40133: origin
                    (at_c_p7)

                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #75071: origin
                    (not (at_c_p8))

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))))

    (:action move_c_p8_p8
        :precondition (and (Bc_not_blocked_p8)
                           (succ_p8_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p8)
                           (checked_p8))
        :effect (and
                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #75071: origin
                    (at_c_p8)

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))

                    ; #75071: origin
                    (not (at_c_p8))))

    (:action move_c_p8_p9
        :precondition (and (Bc_not_blocked_p9)
                           (checked_p9)
                           (Pc_not_blocked_p9)
                           (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #51489: <==commonly_known== 75071 (neg)
                    (not_at_c_p8)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #75071: origin
                    (not (at_c_p8))))

    (:action move_c_p9_p1
        :precondition (and (Bc_not_blocked_p1)
                           (checked_p1)
                           (at_c_p9)
                           (succ_p9_p1)
                           (Pc_not_blocked_p1))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #17170: origin
                    (at_c_p1)

                    ; #78478: <==negation-removal== 17170 (pos)
                    (not (not_at_c_p1))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p2
        :precondition (and (succ_p9_p2)
                           (checked_p2)
                           (Bc_not_blocked_p2)
                           (at_c_p9)
                           (Pc_not_blocked_p2))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #45712: origin
                    (at_c_p2)

                    ; #82561: origin
                    (not (at_c_p9))

                    ; #89572: <==negation-removal== 45712 (pos)
                    (not (not_at_c_p2))))

    (:action move_c_p9_p3
        :precondition (and (Bc_not_blocked_p3)
                           (succ_p9_p3)
                           (Pc_not_blocked_p3)
                           (at_c_p9)
                           (checked_p3))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #24296: origin
                    (at_c_p3)

                    ; #40445: <==negation-removal== 24296 (pos)
                    (not (not_at_c_p3))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (Bc_not_blocked_p4)
                           (Pc_not_blocked_p4)
                           (at_c_p9)
                           (checked_p4))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #27074: origin
                    (at_c_p4)

                    ; #38819: <==negation-removal== 27074 (pos)
                    (not (not_at_c_p4))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p5
        :precondition (and (checked_p5)
                           (succ_p9_p5)
                           (Pc_not_blocked_p5)
                           (Bc_not_blocked_p5)
                           (at_c_p9))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #89616: origin
                    (at_c_p5)

                    ; #72655: <==negation-removal== 89616 (pos)
                    (not (not_at_c_p5))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p6
        :precondition (and (Bc_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (Pc_not_blocked_p6)
                           (at_c_p9))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #17811: origin
                    (at_c_p6)

                    ; #65094: <==negation-removal== 17811 (pos)
                    (not (not_at_c_p6))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p7
        :precondition (and (Pc_not_blocked_p7)
                           (checked_p7)
                           (Bc_not_blocked_p7)
                           (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #40133: origin
                    (at_c_p7)

                    ; #76558: <==negation-removal== 40133 (pos)
                    (not (not_at_c_p7))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p8
        :precondition (and (Bc_not_blocked_p8)
                           (succ_p9_p8)
                           (Pc_not_blocked_p8)
                           (at_c_p9)
                           (checked_p8))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #75071: origin
                    (at_c_p8)

                    ; #51489: <==negation-removal== 75071 (pos)
                    (not (not_at_c_p8))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_c_p9_p9
        :precondition (and (Bc_not_blocked_p9)
                           (succ_p9_p9)
                           (Pc_not_blocked_p9)
                           (at_c_p9)
                           (checked_p9))
        :effect (and
                    ; #12034: <==commonly_known== 82561 (neg)
                    (not_at_c_p9)

                    ; #82561: origin
                    (at_c_p9)

                    ; #12034: <==negation-removal== 82561 (pos)
                    (not (not_at_c_p9))

                    ; #82561: origin
                    (not (at_c_p9))))

    (:action move_d_p1_p1
        :precondition (and (succ_p1_p1)
                           (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p1))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p1_p2
        :precondition (and (Pd_not_blocked_p2)
                           (succ_p1_p2)
                           (Bd_not_blocked_p2)
                           (checked_p2)
                           (at_d_p1))
        :effect (and
                    ; #45390: origin
                    (at_d_p2)

                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p1_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p1_p3)
                           (at_d_p1)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #56856: origin
                    (at_d_p3)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p1_p4
        :precondition (and (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p1_p4)
                           (at_d_p1)
                           (checked_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p1_p5
        :precondition (and (checked_p5)
                           (succ_p1_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p1)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #87962: origin
                    (at_d_p5)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p1_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p1_p6)
                           (at_d_p1)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #18555: origin
                    (not (at_d_p1))))

    (:action move_d_p1_p7
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p1_p7)
                           (at_d_p1))
        :effect (and
                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #56286: origin
                    (at_d_p7)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p1_p8
        :precondition (and (Pd_not_blocked_p8)
                           (checked_p8)
                           (succ_p1_p8)
                           (Bd_not_blocked_p8)
                           (at_d_p1))
        :effect (and
                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #90772: origin
                    (at_d_p8)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p1_p9
        :precondition (and (checked_p9)
                           (succ_p1_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p1))
        :effect (and
                    ; #54785: <==commonly_known== 18555 (neg)
                    (not_at_d_p1)

                    ; #66025: origin
                    (at_d_p9)

                    ; #18555: origin
                    (not (at_d_p1))

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p2_p1
        :precondition (and (Pd_not_blocked_p1)
                           (at_d_p2)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p2_p1))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #45390: origin
                    (not (at_d_p2))

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p2_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p2)
                           (checked_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #45390: origin
                    (at_d_p2)

                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #45390: origin
                    (not (at_d_p2))

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p2_p3
        :precondition (and (Pd_not_blocked_p3)
                           (at_d_p2)
                           (succ_p2_p3)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #56856: origin
                    (at_d_p3)

                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #45390: origin
                    (not (at_d_p2))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_d_p2)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #45390: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p5
        :precondition (and (checked_p5)
                           (at_d_p2)
                           (succ_p2_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #45390: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p2)
                           (succ_p2_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #45390: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p7
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p2)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p2_p7))
        :effect (and
                    ; #56286: origin
                    (at_d_p7)

                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #45390: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p2)
                           (succ_p2_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #45390: origin
                    (not (at_d_p2))))

    (:action move_d_p2_p9
        :precondition (and (checked_p9)
                           (at_d_p2)
                           (succ_p2_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #66025: origin
                    (at_d_p9)

                    ; #67387: <==commonly_known== 45390 (neg)
                    (not_at_d_p2)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #45390: origin
                    (not (at_d_p2))))

    (:action move_d_p3_p1
        :precondition (and (Pd_not_blocked_p1)
                           (succ_p3_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (at_d_p3))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p2
        :precondition (and (succ_p3_p2)
                           (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (checked_p2)
                           (at_d_p3))
        :effect (and
                    ; #45390: origin
                    (at_d_p2)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #56856: origin
                    (not (at_d_p3))

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p3_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (succ_p3_p3)
                           (at_d_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #56856: origin
                    (at_d_p3)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #56856: origin
                    (not (at_d_p3))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p3_p4
        :precondition (and (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p3_p4)
                           (at_d_p3))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p5
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (succ_p3_p5)
                           (at_d_p3)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p3_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p3))
        :effect (and
                    ; #75354: origin
                    (at_d_p6)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p7
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p3_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (at_d_p3))
        :effect (and
                    ; #56286: origin
                    (at_d_p7)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p8
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p3_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p3))
        :effect (and
                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p3_p9
        :precondition (and (checked_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (succ_p3_p9)
                           (at_d_p3))
        :effect (and
                    ; #66025: origin
                    (at_d_p9)

                    ; #87862: <==commonly_known== 56856 (neg)
                    (not_at_d_p3)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #56856: origin
                    (not (at_d_p3))))

    (:action move_d_p4_p1
        :precondition (and (succ_p4_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p4)
                           (Bd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))))

    (:action move_d_p4_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p4)
                           (succ_p4_p2)
                           (checked_p2))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #45390: origin
                    (at_d_p2)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p4_p3
        :precondition (and (Pd_not_blocked_p3)
                           (checked_p3)
                           (at_d_p4)
                           (succ_p4_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #56856: origin
                    (at_d_p3)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p4_p4
        :precondition (and (Bd_not_blocked_p4)
                           (succ_p4_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p4)
                           (checked_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))))

    (:action move_d_p4_p5
        :precondition (and (checked_p5)
                           (at_d_p4)
                           (Bd_not_blocked_p5)
                           (succ_p4_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #87962: origin
                    (at_d_p5)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))))

    (:action move_d_p4_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p4)
                           (succ_p4_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #75354: origin
                    (at_d_p6)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))))

    (:action move_d_p4_p7
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #56286: origin
                    (at_d_p7)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))))

    (:action move_d_p4_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p4)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (succ_p4_p8))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #90772: origin
                    (at_d_p8)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))))

    (:action move_d_p4_p9
        :precondition (and (checked_p9)
                           (at_d_p4)
                           (Pd_not_blocked_p9)
                           (succ_p4_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #39678: <==commonly_known== 15764 (neg)
                    (not_at_d_p4)

                    ; #66025: origin
                    (at_d_p9)

                    ; #15764: origin
                    (not (at_d_p4))

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))))

    (:action move_d_p5_p1
        :precondition (and (succ_p5_p1)
                           (Pd_not_blocked_p1)
                           (at_d_p5)
                           (Bd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p5)
                           (checked_p2)
                           (succ_p5_p2))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #45390: origin
                    (at_d_p2)

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p3
        :precondition (and (succ_p5_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p5)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #56856: origin
                    (at_d_p3)

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p4
        :precondition (and (Bd_not_blocked_p4)
                           (at_d_p5)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (succ_p5_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p5
        :precondition (and (checked_p5)
                           (at_d_p5)
                           (Bd_not_blocked_p5)
                           (succ_p5_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p5)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (succ_p5_p6))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p7
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p5_p7)
                           (Bd_not_blocked_p7)
                           (at_d_p5)
                           (checked_p7))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #56286: origin
                    (at_d_p7)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p5)
                           (succ_p5_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p5_p9
        :precondition (and (checked_p9)
                           (succ_p5_p9)
                           (at_d_p5)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #25494: <==commonly_known== 87962 (neg)
                    (not_at_d_p5)

                    ; #66025: origin
                    (at_d_p9)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #87962: origin
                    (not (at_d_p5))))

    (:action move_d_p6_p1
        :precondition (and (Pd_not_blocked_p1)
                           (at_d_p6)
                           (succ_p6_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #18555: origin
                    (at_d_p1)

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p6_p2)
                           (at_d_p6)
                           (checked_p2))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #45390: origin
                    (at_d_p2)

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (Pd_not_blocked_p3)
                           (at_d_p6)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #56856: origin
                    (at_d_p3)

                    ; #75354: origin
                    (not (at_d_p6))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p6_p4
        :precondition (and (Bd_not_blocked_p4)
                           (at_d_p6)
                           (succ_p6_p4)
                           (Pd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p5
        :precondition (and (checked_p5)
                           (at_d_p6)
                           (Bd_not_blocked_p5)
                           (succ_p6_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p6
        :precondition (and (succ_p6_p6)
                           (Bd_not_blocked_p6)
                           (at_d_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p7
        :precondition (and (Pd_not_blocked_p7)
                           (at_d_p6)
                           (succ_p6_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #56286: origin
                    (at_d_p7)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p6)
                           (succ_p6_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p6_p9
        :precondition (and (succ_p6_p9)
                           (checked_p9)
                           (at_d_p6)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #17503: <==commonly_known== 75354 (neg)
                    (not_at_d_p6)

                    ; #66025: origin
                    (at_d_p9)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #75354: origin
                    (not (at_d_p6))))

    (:action move_d_p7_p1
        :precondition (and (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p7_p2)
                           (checked_p2)
                           (at_d_p7))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #45390: origin
                    (at_d_p2)

                    ; #56286: origin
                    (not (at_d_p7))

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p7_p3
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p7_p3)
                           (at_d_p7)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #56856: origin
                    (at_d_p3)

                    ; #56286: origin
                    (not (at_d_p7))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p7_p4
        :precondition (and (succ_p7_p4)
                           (Bd_not_blocked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p7)
                           (checked_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p5
        :precondition (and (checked_p5)
                           (Bd_not_blocked_p5)
                           (at_d_p7)
                           (succ_p7_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p7_p6)
                           (checked_p6)
                           (at_d_p7)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p7
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (at_d_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #56286: origin
                    (at_d_p7)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p8
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p7_p8)
                           (at_d_p7)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p7_p9
        :precondition (and (checked_p9)
                           (succ_p7_p9)
                           (at_d_p7)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #33789: <==commonly_known== 56286 (neg)
                    (not_at_d_p7)

                    ; #66025: origin
                    (at_d_p9)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #56286: origin
                    (not (at_d_p7))))

    (:action move_d_p8_p1
        :precondition (and (Bd_not_blocked_p1)
                           (at_d_p8)
                           (Pd_not_blocked_p1)
                           (succ_p8_p1)
                           (checked_p1))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (at_d_p8)
                           (checked_p2)
                           (succ_p8_p2))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #45390: origin
                    (at_d_p2)

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p3
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p8_p3)
                           (at_d_p8)
                           (checked_p3)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #56856: origin
                    (at_d_p3)

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p4
        :precondition (and (succ_p8_p4)
                           (Bd_not_blocked_p4)
                           (at_d_p8)
                           (Pd_not_blocked_p4)
                           (checked_p4))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p5
        :precondition (and (checked_p5)
                           (at_d_p8)
                           (succ_p8_p5)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p6
        :precondition (and (Bd_not_blocked_p6)
                           (at_d_p8)
                           (succ_p8_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p7
        :precondition (and (Pd_not_blocked_p7)
                           (succ_p8_p7)
                           (at_d_p8)
                           (Bd_not_blocked_p7)
                           (checked_p7))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #56286: origin
                    (at_d_p7)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p8
        :precondition (and (Pd_not_blocked_p8)
                           (at_d_p8)
                           (succ_p8_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p8_p9
        :precondition (and (checked_p9)
                           (at_d_p8)
                           (Pd_not_blocked_p9)
                           (succ_p8_p9)
                           (Bd_not_blocked_p9))
        :effect (and
                    ; #23064: <==commonly_known== 90772 (neg)
                    (not_at_d_p8)

                    ; #66025: origin
                    (at_d_p9)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #90772: origin
                    (not (at_d_p8))))

    (:action move_d_p9_p1
        :precondition (and (Pd_not_blocked_p1)
                           (Bd_not_blocked_p1)
                           (checked_p1)
                           (succ_p9_p1)
                           (at_d_p9))
        :effect (and
                    ; #18555: origin
                    (at_d_p1)

                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #54785: <==negation-removal== 18555 (pos)
                    (not (not_at_d_p1))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p2
        :precondition (and (Pd_not_blocked_p2)
                           (Bd_not_blocked_p2)
                           (succ_p9_p2)
                           (checked_p2)
                           (at_d_p9))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #45390: origin
                    (at_d_p2)

                    ; #66025: origin
                    (not (at_d_p9))

                    ; #67387: <==negation-removal== 45390 (pos)
                    (not (not_at_d_p2))))

    (:action move_d_p9_p3
        :precondition (and (Pd_not_blocked_p3)
                           (succ_p9_p3)
                           (checked_p3)
                           (at_d_p9)
                           (Bd_not_blocked_p3))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #56856: origin
                    (at_d_p3)

                    ; #66025: origin
                    (not (at_d_p9))

                    ; #87862: <==negation-removal== 56856 (pos)
                    (not (not_at_d_p3))))

    (:action move_d_p9_p4
        :precondition (and (succ_p9_p4)
                           (Bd_not_blocked_p4)
                           (checked_p4)
                           (Pd_not_blocked_p4)
                           (at_d_p9))
        :effect (and
                    ; #15764: origin
                    (at_d_p4)

                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #39678: <==negation-removal== 15764 (pos)
                    (not (not_at_d_p4))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p5
        :precondition (and (checked_p5)
                           (at_d_p9)
                           (Bd_not_blocked_p5)
                           (Pd_not_blocked_p5)
                           (succ_p9_p5))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #87962: origin
                    (at_d_p5)

                    ; #25494: <==negation-removal== 87962 (pos)
                    (not (not_at_d_p5))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p6
        :precondition (and (Bd_not_blocked_p6)
                           (succ_p9_p6)
                           (checked_p6)
                           (Pd_not_blocked_p6)
                           (at_d_p9))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #75354: origin
                    (at_d_p6)

                    ; #17503: <==negation-removal== 75354 (pos)
                    (not (not_at_d_p6))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p7
        :precondition (and (Pd_not_blocked_p7)
                           (Bd_not_blocked_p7)
                           (checked_p7)
                           (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #56286: origin
                    (at_d_p7)

                    ; #33789: <==negation-removal== 56286 (pos)
                    (not (not_at_d_p7))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p8
        :precondition (and (Pd_not_blocked_p8)
                           (succ_p9_p8)
                           (Bd_not_blocked_p8)
                           (checked_p8)
                           (at_d_p9))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #90772: origin
                    (at_d_p8)

                    ; #23064: <==negation-removal== 90772 (pos)
                    (not (not_at_d_p8))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action move_d_p9_p9
        :precondition (and (checked_p9)
                           (succ_p9_p9)
                           (Pd_not_blocked_p9)
                           (Bd_not_blocked_p9)
                           (at_d_p9))
        :effect (and
                    ; #30510: <==commonly_known== 66025 (neg)
                    (not_at_d_p9)

                    ; #66025: origin
                    (at_d_p9)

                    ; #30510: <==negation-removal== 66025 (pos)
                    (not (not_at_d_p9))

                    ; #66025: origin
                    (not (at_d_p9))))

    (:action sensecells_a_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_a_p1))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_a_p1))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_a_p1))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_a_p1))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p1_p5
        :precondition (and (at_a_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p1_p6
        :precondition (and (at_a_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p1_p7
        :precondition (and (at_a_p1)
                           (succ_p1_p7))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_a_p1))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p1_p9
        :precondition (and (at_a_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p2_p1
        :precondition (and (at_a_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p2_p2
        :precondition (and (at_a_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p2_p3
        :precondition (and (at_a_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_a_p2))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_a_p2))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p2_p6
        :precondition (and (at_a_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_a_p2))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p2_p8
        :precondition (and (at_a_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p2_p9
        :precondition (and (at_a_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_a_p3))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_a_p3))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_a_p3))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p3_p4
        :precondition (and (at_a_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_a_p3))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p3_p6
        :precondition (and (at_a_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_a_p3))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_a_p3))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_a_p3))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_a_p4))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_a_p4))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p4_p3
        :precondition (and (at_a_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p4_p4
        :precondition (and (at_a_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p4_p5
        :precondition (and (at_a_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p4_p6
        :precondition (and (at_a_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p4_p7
        :precondition (and (at_a_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p4_p8
        :precondition (and (at_a_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p4_p9
        :precondition (and (at_a_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_a_p5))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_a_p5))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_a_p5))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p5_p4
        :precondition (and (succ_p5_p4)
                           (at_a_p5))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_a_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p5_p6
        :precondition (and (at_a_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_a_p5))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_a_p5))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_a_p5))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p6_p1
        :precondition (and (at_a_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_a_p6))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_a_p6))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p6_p4
        :precondition (and (at_a_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p6_p5
        :precondition (and (at_a_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_a_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p6_p7
        :precondition (and (at_a_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p6_p8
        :precondition (and (at_a_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_a_p6))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_a_p7))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p7_p2
        :precondition (and (succ_p7_p2)
                           (at_a_p7))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p7_p3
        :precondition (and (succ_p7_p3)
                           (at_a_p7))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_a_p7))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_a_p7))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_a_p7))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p7_p7
        :precondition (and (at_a_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_a_p7))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_a_p7))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_a_p8))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p8_p2
        :precondition (and (at_a_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_a_p8))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_a_p8))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p8_p5
        :precondition (and (at_a_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p8_p6
        :precondition (and (succ_p8_p6)
                           (at_a_p8))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_a_p8))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p8_p8
        :precondition (and (at_a_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_a_p8))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_a_p9_p1
        :precondition (and (at_a_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #67393: origin
                    (checked_p1)

                    ; #71365: origin
                    (when (and (hiddenblockedcell_p1))
                          (Ba_blocked_p1))

                    ; #73536: <==closure== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pa_not_blocked_p1))

                    ; #74892: <==closure== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pa_blocked_p1))

                    ; #89470: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Ba_not_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11870: <==negation-removal== 89470 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pa_blocked_p1)))

                    ; #29189: <==negation-removal== 74892 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Ba_not_blocked_p1)))

                    ; #31579: <==uncertain_firing== 71365 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pa_not_blocked_p1)))

                    ; #38979: <==unclosure== 31579 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Ba_not_blocked_p1)))

                    ; #61183: <==negation-removal== 71365 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pa_not_blocked_p1)))

                    ; #75245: <==negation-removal== 73536 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Ba_blocked_p1)))))

    (:action sensecells_a_p9_p2
        :precondition (and (at_a_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #13316: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Ba_not_blocked_p2))

                    ; #35013: origin
                    (when (and (hiddenblockedcell_p2))
                          (Ba_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #45016: <==closure== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pa_not_blocked_p2))

                    ; #92036: <==closure== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pa_blocked_p2))

                    ; #16004: <==negation-removal== 45016 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Ba_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35308: <==unclosure== 67463 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Ba_not_blocked_p2)))

                    ; #58046: <==negation-removal== 35013 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pa_not_blocked_p2)))

                    ; #67463: <==uncertain_firing== 35013 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pa_not_blocked_p2)))

                    ; #76256: <==negation-removal== 13316 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pa_blocked_p2)))

                    ; #91555: <==negation-removal== 92036 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Ba_not_blocked_p2)))))

    (:action sensecells_a_p9_p3
        :precondition (and (at_a_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #17948: origin
                    (when (and (hiddenblockedcell_p3))
                          (Ba_blocked_p3))

                    ; #32068: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Ba_not_blocked_p3))

                    ; #77071: <==closure== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pa_not_blocked_p3))

                    ; #82345: <==closure== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pa_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #13890: <==negation-removal== 77071 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Ba_blocked_p3)))

                    ; #45697: <==negation-removal== 32068 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pa_blocked_p3)))

                    ; #67418: <==uncertain_firing== 17948 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pa_not_blocked_p3)))

                    ; #76839: <==negation-removal== 17948 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pa_not_blocked_p3)))

                    ; #78777: <==unclosure== 67418 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Ba_not_blocked_p3)))

                    ; #80554: <==negation-removal== 82345 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Ba_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_a_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_a_p9))
        :effect (and
                    ; #17409: origin
                    (when (and (hiddenblockedcell_p4))
                          (Ba_blocked_p4))

                    ; #21928: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Ba_not_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #61587: <==closure== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pa_not_blocked_p4))

                    ; #86469: <==closure== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pa_blocked_p4))

                    ; #10448: <==uncertain_firing== 17409 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pa_not_blocked_p4)))

                    ; #17531: <==negation-removal== 86469 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Ba_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #34217: <==negation-removal== 61587 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Ba_blocked_p4)))

                    ; #45100: <==negation-removal== 17409 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pa_not_blocked_p4)))

                    ; #65145: <==negation-removal== 21928 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pa_blocked_p4)))

                    ; #76378: <==unclosure== 10448 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Ba_not_blocked_p4)))))

    (:action sensecells_a_p9_p5
        :precondition (and (at_a_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #38112: <==closure== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pa_blocked_p5))

                    ; #62398: <==closure== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pa_not_blocked_p5))

                    ; #73360: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Ba_not_blocked_p5))

                    ; #85337: origin
                    (when (and (hiddenblockedcell_p5))
                          (Ba_blocked_p5))

                    ; #14035: <==unclosure== 70674 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Ba_not_blocked_p5)))

                    ; #49094: <==negation-removal== 85337 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pa_not_blocked_p5)))

                    ; #50178: <==negation-removal== 38112 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Ba_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #67180: <==negation-removal== 73360 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pa_blocked_p5)))

                    ; #70674: <==uncertain_firing== 85337 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pa_not_blocked_p5)))

                    ; #77539: <==negation-removal== 62398 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Ba_blocked_p5)))))

    (:action sensecells_a_p9_p6
        :precondition (and (at_a_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #15974: <==closure== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pa_blocked_p6))

                    ; #16354: <==closure== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pa_not_blocked_p6))

                    ; #17969: origin
                    (checked_p6)

                    ; #31762: origin
                    (when (and (hiddenblockedcell_p6))
                          (Ba_blocked_p6))

                    ; #47025: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Ba_not_blocked_p6))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #51306: <==negation-removal== 15974 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Ba_not_blocked_p6)))

                    ; #52292: <==negation-removal== 16354 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Ba_blocked_p6)))

                    ; #69814: <==negation-removal== 47025 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pa_blocked_p6)))

                    ; #84686: <==unclosure== 88259 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Ba_not_blocked_p6)))

                    ; #88259: <==uncertain_firing== 31762 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pa_not_blocked_p6)))

                    ; #89808: <==negation-removal== 31762 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pa_not_blocked_p6)))))

    (:action sensecells_a_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_a_p9))
        :effect (and
                    ; #10232: origin
                    (when (and (hiddenblockedcell_p7))
                          (Ba_blocked_p7))

                    ; #32622: <==closure== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pa_not_blocked_p7))

                    ; #75687: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Ba_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #90695: <==closure== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pa_blocked_p7))

                    ; #33182: <==unclosure== 51870 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Ba_not_blocked_p7)))

                    ; #51870: <==uncertain_firing== 10232 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pa_not_blocked_p7)))

                    ; #52831: <==negation-removal== 75687 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pa_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #55472: <==negation-removal== 10232 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pa_not_blocked_p7)))

                    ; #59481: <==negation-removal== 90695 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Ba_not_blocked_p7)))

                    ; #91876: <==negation-removal== 32622 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Ba_blocked_p7)))))

    (:action sensecells_a_p9_p8
        :precondition (and (at_a_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #22447: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Ba_not_blocked_p8))

                    ; #40238: <==closure== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pa_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #86204: origin
                    (when (and (hiddenblockedcell_p8))
                          (Ba_blocked_p8))

                    ; #89237: <==closure== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pa_not_blocked_p8))

                    ; #12853: <==unclosure== 72232 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Ba_not_blocked_p8)))

                    ; #18781: <==negation-removal== 22447 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pa_blocked_p8)))

                    ; #58510: <==negation-removal== 40238 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Ba_not_blocked_p8)))

                    ; #68356: <==negation-removal== 86204 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pa_not_blocked_p8)))

                    ; #72232: <==uncertain_firing== 86204 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pa_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #88396: <==negation-removal== 89237 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Ba_blocked_p8)))))

    (:action sensecells_a_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_a_p9))
        :effect (and
                    ; #37915: <==closure== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pa_blocked_p9))

                    ; #63062: origin
                    (when (and (hiddenblockedcell_p9))
                          (Ba_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #71548: <==closure== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pa_not_blocked_p9))

                    ; #85703: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Ba_not_blocked_p9))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #66597: <==unclosure== 67154 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Ba_not_blocked_p9)))

                    ; #67154: <==uncertain_firing== 63062 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pa_not_blocked_p9)))

                    ; #72658: <==negation-removal== 37915 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Ba_not_blocked_p9)))

                    ; #74567: <==negation-removal== 71548 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Ba_blocked_p9)))

                    ; #82761: <==negation-removal== 85703 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pa_blocked_p9)))

                    ; #91020: <==negation-removal== 63062 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pa_not_blocked_p9)))))

    (:action sensecells_b_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_b_p1))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_b_p1))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_b_p1))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_b_p1))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p1_p5
        :precondition (and (at_b_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_b_p1))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_b_p1))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_b_p1))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_b_p1))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p2_p1
        :precondition (and (at_b_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p2_p2
        :precondition (and (at_b_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p2_p3
        :precondition (and (at_b_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p2_p4
        :precondition (and (at_b_p2)
                           (succ_p2_p4))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_b_p2))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p2_p6
        :precondition (and (at_b_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_b_p2))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p2_p8
        :precondition (and (at_b_p2)
                           (succ_p2_p8))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p2_p9
        :precondition (and (at_b_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_b_p3))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_b_p3))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p3_p3
        :precondition (and (at_b_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p3_p4
        :precondition (and (at_b_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p3_p5
        :precondition (and (at_b_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p3_p6
        :precondition (and (at_b_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_b_p3))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_b_p3))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p3_p9
        :precondition (and (at_b_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_b_p4))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_b_p4))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p4_p3
        :precondition (and (at_b_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p4_p4
        :precondition (and (at_b_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p4_p5
        :precondition (and (at_b_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_b_p4))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p4_p7
        :precondition (and (at_b_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p4_p8
        :precondition (and (at_b_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p4_p9
        :precondition (and (at_b_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p5_p1
        :precondition (and (at_b_p5)
                           (succ_p5_p1))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_b_p5))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_b_p5))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p5_p4
        :precondition (and (at_b_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p5_p5
        :precondition (and (at_b_p5)
                           (succ_p5_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p5_p6
        :precondition (and (at_b_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_b_p5))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_b_p5))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p5_p9
        :precondition (and (at_b_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p6_p1
        :precondition (and (at_b_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p6_p2
        :precondition (and (at_b_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p6_p3
        :precondition (and (at_b_p6)
                           (succ_p6_p3))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p6_p4
        :precondition (and (at_b_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p6_p5
        :precondition (and (at_b_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_b_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p6_p7
        :precondition (and (at_b_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p6_p8
        :precondition (and (at_b_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p6_p9
        :precondition (and (at_b_p6)
                           (succ_p6_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p7_p1
        :precondition (and (at_b_p7)
                           (succ_p7_p1))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p7_p2
        :precondition (and (at_b_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p7_p3
        :precondition (and (at_b_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_b_p7))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p7_p5
        :precondition (and (at_b_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p7_p6
        :precondition (and (at_b_p7)
                           (succ_p7_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p7_p7
        :precondition (and (at_b_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p7_p8
        :precondition (and (at_b_p7)
                           (succ_p7_p8))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p7_p9
        :precondition (and (at_b_p7)
                           (succ_p7_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_b_p8))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p8_p2
        :precondition (and (at_b_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_b_p8))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_b_p8))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p8_p5
        :precondition (and (at_b_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p8_p6
        :precondition (and (at_b_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_b_p8))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p8_p8
        :precondition (and (at_b_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_b_p8))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_b_p9_p1
        :precondition (and (at_b_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #35677: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bb_not_blocked_p1))

                    ; #59410: <==closure== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pb_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #78542: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bb_blocked_p1))

                    ; #83502: <==closure== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pb_blocked_p1))

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #32008: <==unclosure== 45189 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bb_not_blocked_p1)))

                    ; #42069: <==negation-removal== 59410 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bb_blocked_p1)))

                    ; #45189: <==uncertain_firing== 78542 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pb_not_blocked_p1)))

                    ; #48678: <==negation-removal== 83502 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bb_not_blocked_p1)))

                    ; #68391: <==negation-removal== 35677 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pb_blocked_p1)))

                    ; #82751: <==negation-removal== 78542 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pb_not_blocked_p1)))))

    (:action sensecells_b_p9_p2
        :precondition (and (at_b_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #16396: <==closure== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pb_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #51660: <==closure== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pb_blocked_p2))

                    ; #83785: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bb_blocked_p2))

                    ; #84950: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bb_not_blocked_p2))

                    ; #11613: <==negation-removal== 51660 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bb_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #52133: <==uncertain_firing== 83785 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pb_not_blocked_p2)))

                    ; #75820: <==negation-removal== 84950 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pb_blocked_p2)))

                    ; #77337: <==unclosure== 52133 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bb_not_blocked_p2)))

                    ; #84130: <==negation-removal== 83785 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pb_not_blocked_p2)))

                    ; #89936: <==negation-removal== 16396 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bb_blocked_p2)))))

    (:action sensecells_b_p9_p3
        :precondition (and (at_b_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #51937: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bb_not_blocked_p3))

                    ; #66170: <==closure== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pb_blocked_p3))

                    ; #68483: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bb_blocked_p3))

                    ; #84035: <==closure== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pb_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #25300: <==unclosure== 61896 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bb_not_blocked_p3)))

                    ; #32278: <==negation-removal== 68483 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pb_not_blocked_p3)))

                    ; #43965: <==negation-removal== 84035 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bb_blocked_p3)))

                    ; #53850: <==negation-removal== 66170 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bb_not_blocked_p3)))

                    ; #61281: <==negation-removal== 51937 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pb_blocked_p3)))

                    ; #61896: <==uncertain_firing== 68483 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pb_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_b_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_b_p9))
        :effect (and
                    ; #12666: <==closure== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pb_blocked_p4))

                    ; #14173: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bb_not_blocked_p4))

                    ; #24880: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bb_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #66026: <==closure== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pb_not_blocked_p4))

                    ; #12574: <==uncertain_firing== 24880 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pb_not_blocked_p4)))

                    ; #23674: <==unclosure== 12574 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bb_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #42127: <==negation-removal== 24880 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pb_not_blocked_p4)))

                    ; #43565: <==negation-removal== 66026 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bb_blocked_p4)))

                    ; #47501: <==negation-removal== 12666 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bb_not_blocked_p4)))

                    ; #76632: <==negation-removal== 14173 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pb_blocked_p4)))))

    (:action sensecells_b_p9_p5
        :precondition (and (at_b_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #20974: origin
                    (checked_p5)

                    ; #25852: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bb_not_blocked_p5))

                    ; #53812: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bb_blocked_p5))

                    ; #58650: <==closure== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pb_not_blocked_p5))

                    ; #89961: <==closure== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pb_blocked_p5))

                    ; #14609: <==negation-removal== 89961 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bb_not_blocked_p5)))

                    ; #42736: <==negation-removal== 25852 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pb_blocked_p5)))

                    ; #58583: <==negation-removal== 58650 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bb_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79135: <==negation-removal== 53812 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pb_not_blocked_p5)))

                    ; #90053: <==uncertain_firing== 53812 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pb_not_blocked_p5)))

                    ; #91984: <==unclosure== 90053 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bb_not_blocked_p5)))))

    (:action sensecells_b_p9_p6
        :precondition (and (at_b_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #24399: <==closure== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pb_blocked_p6))

                    ; #36260: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bb_blocked_p6))

                    ; #71785: <==closure== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pb_not_blocked_p6))

                    ; #78132: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bb_not_blocked_p6))

                    ; #13813: <==unclosure== 88558 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bb_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28094: <==negation-removal== 24399 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bb_not_blocked_p6)))

                    ; #66574: <==negation-removal== 71785 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bb_blocked_p6)))

                    ; #71726: <==negation-removal== 78132 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pb_blocked_p6)))

                    ; #74055: <==negation-removal== 36260 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pb_not_blocked_p6)))

                    ; #88558: <==uncertain_firing== 36260 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pb_not_blocked_p6)))))

    (:action sensecells_b_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_b_p9))
        :effect (and
                    ; #27713: <==closure== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pb_not_blocked_p7))

                    ; #28241: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bb_blocked_p7))

                    ; #35032: <==closure== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pb_blocked_p7))

                    ; #72270: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bb_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #14315: <==negation-removal== 72270 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pb_blocked_p7)))

                    ; #30547: <==unclosure== 75998 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bb_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #57294: <==negation-removal== 27713 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bb_blocked_p7)))

                    ; #75998: <==uncertain_firing== 28241 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pb_not_blocked_p7)))

                    ; #83067: <==negation-removal== 35032 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bb_not_blocked_p7)))

                    ; #87719: <==negation-removal== 28241 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pb_not_blocked_p7)))))

    (:action sensecells_b_p9_p8
        :precondition (and (at_b_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #24498: <==closure== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pb_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #64781: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bb_blocked_p8))

                    ; #84053: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bb_not_blocked_p8))

                    ; #88663: <==closure== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pb_not_blocked_p8))

                    ; #10080: <==negation-removal== 24498 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bb_not_blocked_p8)))

                    ; #30113: <==uncertain_firing== 64781 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pb_not_blocked_p8)))

                    ; #30119: <==negation-removal== 64781 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pb_not_blocked_p8)))

                    ; #41521: <==negation-removal== 88663 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bb_blocked_p8)))

                    ; #77882: <==negation-removal== 84053 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pb_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #89980: <==unclosure== 30113 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bb_not_blocked_p8)))))

    (:action sensecells_b_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_b_p9))
        :effect (and
                    ; #17008: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bb_not_blocked_p9))

                    ; #22999: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bb_blocked_p9))

                    ; #58368: <==closure== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pb_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #78288: <==closure== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pb_not_blocked_p9))

                    ; #26947: <==unclosure== 41361 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bb_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #41361: <==uncertain_firing== 22999 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pb_not_blocked_p9)))

                    ; #57813: <==negation-removal== 78288 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bb_blocked_p9)))

                    ; #63540: <==negation-removal== 22999 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pb_not_blocked_p9)))

                    ; #69448: <==negation-removal== 58368 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bb_not_blocked_p9)))

                    ; #79928: <==negation-removal== 17008 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pb_blocked_p9)))))

    (:action sensecells_c_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_c_p1))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_c_p1))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_c_p1))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_c_p1))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p1_p5
        :precondition (and (succ_p1_p5)
                           (at_c_p1))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p1_p6
        :precondition (and (succ_p1_p6)
                           (at_c_p1))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_c_p1))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_c_p1))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p1_p9
        :precondition (and (succ_p1_p9)
                           (at_c_p1))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p2_p1
        :precondition (and (succ_p2_p1)
                           (at_c_p2))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p2_p2
        :precondition (and (succ_p2_p2)
                           (at_c_p2))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p2_p3
        :precondition (and (succ_p2_p3)
                           (at_c_p2))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_c_p2))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_c_p2))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p2_p6
        :precondition (and (succ_p2_p6)
                           (at_c_p2))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_c_p2))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_c_p2))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p2_p9
        :precondition (and (succ_p2_p9)
                           (at_c_p2))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_c_p3))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_c_p3))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p3_p3
        :precondition (and (at_c_p3)
                           (succ_p3_p3))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p3_p4
        :precondition (and (at_c_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p3_p5
        :precondition (and (at_c_p3)
                           (succ_p3_p5))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p3_p6
        :precondition (and (at_c_p3)
                           (succ_p3_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_c_p3))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_c_p3))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p3_p9
        :precondition (and (at_c_p3)
                           (succ_p3_p9))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_c_p4))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_c_p4))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p4_p3
        :precondition (and (at_c_p4)
                           (succ_p4_p3))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p4_p4
        :precondition (and (at_c_p4)
                           (succ_p4_p4))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p4_p5
        :precondition (and (at_c_p4)
                           (succ_p4_p5))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p4_p6
        :precondition (and (at_c_p4)
                           (succ_p4_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p4_p7
        :precondition (and (at_c_p4)
                           (succ_p4_p7))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p4_p8
        :precondition (and (at_c_p4)
                           (succ_p4_p8))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p4_p9
        :precondition (and (at_c_p4)
                           (succ_p4_p9))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_c_p5))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_c_p5))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_c_p5))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p5_p4
        :precondition (and (at_c_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_c_p5))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p5_p6
        :precondition (and (at_c_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_c_p5))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_c_p5))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p5_p9
        :precondition (and (at_c_p5)
                           (succ_p5_p9))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p6_p1
        :precondition (and (at_c_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p6_p2
        :precondition (and (at_c_p6)
                           (succ_p6_p2))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_c_p6))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p6_p4
        :precondition (and (at_c_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p6_p5
        :precondition (and (at_c_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_c_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p6_p7
        :precondition (and (at_c_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p6_p8
        :precondition (and (at_c_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_c_p6))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_c_p7))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p7_p2
        :precondition (and (at_c_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p7_p3
        :precondition (and (at_c_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_c_p7))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p7_p5
        :precondition (and (succ_p7_p5)
                           (at_c_p7))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_c_p7))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p7_p7
        :precondition (and (at_c_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_c_p7))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_c_p7))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_c_p8))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p8_p2
        :precondition (and (at_c_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_c_p8))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_c_p8))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p8_p5
        :precondition (and (at_c_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p8_p6
        :precondition (and (at_c_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_c_p8))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p8_p8
        :precondition (and (at_c_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_c_p8))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_c_p9_p1
        :precondition (and (at_c_p9)
                           (succ_p9_p1))
        :effect (and
                    ; #17051: <==closure== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pc_blocked_p1))

                    ; #24795: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bc_blocked_p1))

                    ; #25314: <==closure== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pc_not_blocked_p1))

                    ; #52874: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bc_not_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #38873: <==negation-removal== 25314 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bc_blocked_p1)))

                    ; #47622: <==unclosure== 68193 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bc_not_blocked_p1)))

                    ; #52468: <==negation-removal== 24795 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pc_not_blocked_p1)))

                    ; #60271: <==negation-removal== 17051 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bc_not_blocked_p1)))

                    ; #68193: <==uncertain_firing== 24795 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pc_not_blocked_p1)))

                    ; #90480: <==negation-removal== 52874 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pc_blocked_p1)))))

    (:action sensecells_c_p9_p2
        :precondition (and (at_c_p9)
                           (succ_p9_p2))
        :effect (and
                    ; #10527: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bc_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #52549: <==closure== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pc_not_blocked_p2))

                    ; #57942: <==closure== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pc_blocked_p2))

                    ; #80811: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bc_blocked_p2))

                    ; #13113: <==negation-removal== 10527 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pc_blocked_p2)))

                    ; #19267: <==negation-removal== 52549 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bc_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #35617: <==negation-removal== 57942 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bc_not_blocked_p2)))

                    ; #50648: <==uncertain_firing== 80811 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pc_not_blocked_p2)))

                    ; #69049: <==negation-removal== 80811 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pc_not_blocked_p2)))

                    ; #81247: <==unclosure== 50648 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bc_not_blocked_p2)))))

    (:action sensecells_c_p9_p3
        :precondition (and (at_c_p9)
                           (succ_p9_p3))
        :effect (and
                    ; #18399: <==closure== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pc_not_blocked_p3))

                    ; #42528: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bc_blocked_p3))

                    ; #61535: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bc_not_blocked_p3))

                    ; #78031: <==closure== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pc_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #10391: <==negation-removal== 61535 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pc_blocked_p3)))

                    ; #33233: <==unclosure== 62225 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bc_not_blocked_p3)))

                    ; #36435: <==negation-removal== 42528 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pc_not_blocked_p3)))

                    ; #62225: <==uncertain_firing== 42528 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pc_not_blocked_p3)))

                    ; #90828: <==negation-removal== 18399 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bc_blocked_p3)))

                    ; #96619: <==negation-removal== 78031 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bc_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_c_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_c_p9))
        :effect (and
                    ; #10819: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bc_blocked_p4))

                    ; #28728: origin
                    (checked_p4)

                    ; #58970: <==closure== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pc_blocked_p4))

                    ; #60351: <==closure== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pc_not_blocked_p4))

                    ; #87785: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bc_not_blocked_p4))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #35437: <==negation-removal== 10819 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pc_not_blocked_p4)))

                    ; #63650: <==unclosure== 83695 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bc_not_blocked_p4)))

                    ; #65891: <==negation-removal== 60351 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bc_blocked_p4)))

                    ; #69432: <==negation-removal== 58970 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bc_not_blocked_p4)))

                    ; #83695: <==uncertain_firing== 10819 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pc_not_blocked_p4)))

                    ; #87050: <==negation-removal== 87785 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pc_blocked_p4)))))

    (:action sensecells_c_p9_p5
        :precondition (and (at_c_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #11941: <==closure== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pc_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #67533: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bc_blocked_p5))

                    ; #67733: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bc_not_blocked_p5))

                    ; #86387: <==closure== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pc_blocked_p5))

                    ; #15055: <==negation-removal== 67733 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pc_blocked_p5)))

                    ; #35187: <==negation-removal== 86387 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bc_not_blocked_p5)))

                    ; #36757: <==negation-removal== 11941 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bc_blocked_p5)))

                    ; #38689: <==unclosure== 83960 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bc_not_blocked_p5)))

                    ; #51764: <==negation-removal== 67533 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pc_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #83960: <==uncertain_firing== 67533 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pc_not_blocked_p5)))))

    (:action sensecells_c_p9_p6
        :precondition (and (at_c_p9)
                           (succ_p9_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #21030: <==closure== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pc_blocked_p6))

                    ; #51490: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bc_not_blocked_p6))

                    ; #54900: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bc_blocked_p6))

                    ; #60848: <==closure== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pc_not_blocked_p6))

                    ; #19801: <==negation-removal== 54900 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pc_not_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #36889: <==negation-removal== 21030 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bc_not_blocked_p6)))

                    ; #56687: <==unclosure== 82598 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bc_not_blocked_p6)))

                    ; #82598: <==uncertain_firing== 54900 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pc_not_blocked_p6)))

                    ; #83634: <==negation-removal== 51490 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pc_blocked_p6)))

                    ; #83739: <==negation-removal== 60848 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bc_blocked_p6)))))

    (:action sensecells_c_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_c_p9))
        :effect (and
                    ; #50689: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bc_blocked_p7))

                    ; #63435: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bc_not_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #82306: <==closure== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pc_blocked_p7))

                    ; #85184: <==closure== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pc_not_blocked_p7))

                    ; #10300: <==negation-removal== 50689 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pc_not_blocked_p7)))

                    ; #23227: <==negation-removal== 63435 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pc_blocked_p7)))

                    ; #27326: <==negation-removal== 85184 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bc_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #68181: <==negation-removal== 82306 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bc_not_blocked_p7)))

                    ; #72225: <==uncertain_firing== 50689 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pc_not_blocked_p7)))

                    ; #91053: <==unclosure== 72225 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bc_not_blocked_p7)))))

    (:action sensecells_c_p9_p8
        :precondition (and (at_c_p9)
                           (succ_p9_p8))
        :effect (and
                    ; #13963: <==closure== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pc_not_blocked_p8))

                    ; #22177: <==closure== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pc_blocked_p8))

                    ; #35112: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bc_not_blocked_p8))

                    ; #59229: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bc_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #17955: <==negation-removal== 59229 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pc_not_blocked_p8)))

                    ; #39663: <==unclosure== 70721 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bc_not_blocked_p8)))

                    ; #48368: <==negation-removal== 22177 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bc_not_blocked_p8)))

                    ; #58575: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pc_blocked_p8)))

                    ; #62213: <==negation-removal== 13963 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bc_blocked_p8)))

                    ; #70721: <==uncertain_firing== 59229 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pc_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))))

    (:action sensecells_c_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_c_p9))
        :effect (and
                    ; #17722: <==closure== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pc_blocked_p9))

                    ; #30463: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bc_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #72687: <==closure== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pc_not_blocked_p9))

                    ; #75919: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bc_not_blocked_p9))

                    ; #21660: <==uncertain_firing== 30463 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pc_not_blocked_p9)))

                    ; #30493: <==negation-removal== 17722 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bc_not_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #42632: <==unclosure== 21660 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bc_not_blocked_p9)))

                    ; #42852: <==negation-removal== 30463 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pc_not_blocked_p9)))

                    ; #50384: <==negation-removal== 75919 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pc_blocked_p9)))

                    ; #80909: <==negation-removal== 72687 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bc_blocked_p9)))))

    (:action sensecells_d_p1_p1
        :precondition (and (succ_p1_p1)
                           (at_d_p1))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p1_p2
        :precondition (and (succ_p1_p2)
                           (at_d_p1))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p1_p3
        :precondition (and (succ_p1_p3)
                           (at_d_p1))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p1_p4
        :precondition (and (succ_p1_p4)
                           (at_d_p1))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p1_p5
        :precondition (and (at_d_p1)
                           (succ_p1_p5))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p1_p6
        :precondition (and (at_d_p1)
                           (succ_p1_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p1_p7
        :precondition (and (succ_p1_p7)
                           (at_d_p1))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p1_p8
        :precondition (and (succ_p1_p8)
                           (at_d_p1))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p1_p9
        :precondition (and (at_d_p1)
                           (succ_p1_p9))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p2_p1
        :precondition (and (at_d_p2)
                           (succ_p2_p1))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p2_p2
        :precondition (and (at_d_p2)
                           (succ_p2_p2))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p2_p3
        :precondition (and (at_d_p2)
                           (succ_p2_p3))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p2_p4
        :precondition (and (succ_p2_p4)
                           (at_d_p2))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p2_p5
        :precondition (and (succ_p2_p5)
                           (at_d_p2))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p2_p6
        :precondition (and (at_d_p2)
                           (succ_p2_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p2_p7
        :precondition (and (succ_p2_p7)
                           (at_d_p2))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p2_p8
        :precondition (and (succ_p2_p8)
                           (at_d_p2))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p2_p9
        :precondition (and (at_d_p2)
                           (succ_p2_p9))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p3_p1
        :precondition (and (succ_p3_p1)
                           (at_d_p3))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p3_p2
        :precondition (and (succ_p3_p2)
                           (at_d_p3))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p3_p3
        :precondition (and (succ_p3_p3)
                           (at_d_p3))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p3_p4
        :precondition (and (at_d_p3)
                           (succ_p3_p4))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p3_p5
        :precondition (and (succ_p3_p5)
                           (at_d_p3))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p3_p6
        :precondition (and (succ_p3_p6)
                           (at_d_p3))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p3_p7
        :precondition (and (succ_p3_p7)
                           (at_d_p3))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p3_p8
        :precondition (and (succ_p3_p8)
                           (at_d_p3))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p3_p9
        :precondition (and (succ_p3_p9)
                           (at_d_p3))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p4_p1
        :precondition (and (succ_p4_p1)
                           (at_d_p4))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p4_p2
        :precondition (and (succ_p4_p2)
                           (at_d_p4))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p4_p3
        :precondition (and (succ_p4_p3)
                           (at_d_p4))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p4_p4
        :precondition (and (succ_p4_p4)
                           (at_d_p4))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p4_p5
        :precondition (and (succ_p4_p5)
                           (at_d_p4))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p4_p6
        :precondition (and (succ_p4_p6)
                           (at_d_p4))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p4_p7
        :precondition (and (succ_p4_p7)
                           (at_d_p4))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p4_p8
        :precondition (and (succ_p4_p8)
                           (at_d_p4))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p4_p9
        :precondition (and (succ_p4_p9)
                           (at_d_p4))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p5_p1
        :precondition (and (succ_p5_p1)
                           (at_d_p5))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p5_p2
        :precondition (and (succ_p5_p2)
                           (at_d_p5))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p5_p3
        :precondition (and (succ_p5_p3)
                           (at_d_p5))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p5_p4
        :precondition (and (at_d_p5)
                           (succ_p5_p4))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p5_p5
        :precondition (and (succ_p5_p5)
                           (at_d_p5))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p5_p6
        :precondition (and (at_d_p5)
                           (succ_p5_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p5_p7
        :precondition (and (succ_p5_p7)
                           (at_d_p5))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p5_p8
        :precondition (and (succ_p5_p8)
                           (at_d_p5))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p5_p9
        :precondition (and (succ_p5_p9)
                           (at_d_p5))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p6_p1
        :precondition (and (at_d_p6)
                           (succ_p6_p1))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p6_p2
        :precondition (and (succ_p6_p2)
                           (at_d_p6))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p6_p3
        :precondition (and (succ_p6_p3)
                           (at_d_p6))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p6_p4
        :precondition (and (at_d_p6)
                           (succ_p6_p4))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p6_p5
        :precondition (and (at_d_p6)
                           (succ_p6_p5))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p6_p6
        :precondition (and (succ_p6_p6)
                           (at_d_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p6_p7
        :precondition (and (at_d_p6)
                           (succ_p6_p7))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p6_p8
        :precondition (and (at_d_p6)
                           (succ_p6_p8))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p6_p9
        :precondition (and (succ_p6_p9)
                           (at_d_p6))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p7_p1
        :precondition (and (succ_p7_p1)
                           (at_d_p7))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p7_p2
        :precondition (and (at_d_p7)
                           (succ_p7_p2))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p7_p3
        :precondition (and (at_d_p7)
                           (succ_p7_p3))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p7_p4
        :precondition (and (succ_p7_p4)
                           (at_d_p7))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p7_p5
        :precondition (and (at_d_p7)
                           (succ_p7_p5))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p7_p6
        :precondition (and (succ_p7_p6)
                           (at_d_p7))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p7_p7
        :precondition (and (at_d_p7)
                           (succ_p7_p7))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p7_p8
        :precondition (and (succ_p7_p8)
                           (at_d_p7))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p7_p9
        :precondition (and (succ_p7_p9)
                           (at_d_p7))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p8_p1
        :precondition (and (succ_p8_p1)
                           (at_d_p8))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p8_p2
        :precondition (and (at_d_p8)
                           (succ_p8_p2))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p8_p3
        :precondition (and (succ_p8_p3)
                           (at_d_p8))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p8_p4
        :precondition (and (succ_p8_p4)
                           (at_d_p8))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p8_p5
        :precondition (and (at_d_p8)
                           (succ_p8_p5))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p8_p6
        :precondition (and (at_d_p8)
                           (succ_p8_p6))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p8_p7
        :precondition (and (succ_p8_p7)
                           (at_d_p8))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p8_p8
        :precondition (and (at_d_p8)
                           (succ_p8_p8))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p8_p9
        :precondition (and (succ_p8_p9)
                           (at_d_p8))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensecells_d_p9_p1
        :precondition (and (succ_p9_p1)
                           (at_d_p9))
        :effect (and
                    ; #26092: origin
                    (when (and (not (hiddenblockedcell_p1)))
                          (Bd_not_blocked_p1))

                    ; #39493: <==closure== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (Pd_not_blocked_p1))

                    ; #49110: origin
                    (when (and (hiddenblockedcell_p1))
                          (Bd_blocked_p1))

                    ; #52829: <==closure== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (Pd_blocked_p1))

                    ; #67393: origin
                    (checked_p1)

                    ; #10487: <==negation-removal== 67393 (pos)
                    (not (not_checked_p1))

                    ; #11228: <==uncertain_firing== 49110 (pos)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Pd_not_blocked_p1)))

                    ; #26764: <==negation-removal== 26092 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Pd_blocked_p1)))

                    ; #36882: <==unclosure== 11228 (neg)
                    (when (and (not (not_hiddenblockedcell_p1)))
                          (not (Bd_not_blocked_p1)))

                    ; #38825: <==negation-removal== 49110 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Pd_not_blocked_p1)))

                    ; #40659: <==negation-removal== 39493 (pos)
                    (when (and (not (hiddenblockedcell_p1)))
                          (not (Bd_blocked_p1)))

                    ; #80597: <==negation-removal== 52829 (pos)
                    (when (and (hiddenblockedcell_p1))
                          (not (Bd_not_blocked_p1)))))

    (:action sensecells_d_p9_p2
        :precondition (and (succ_p9_p2)
                           (at_d_p9))
        :effect (and
                    ; #11088: <==closure== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (Pd_blocked_p2))

                    ; #19069: <==closure== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (Pd_not_blocked_p2))

                    ; #35283: origin
                    (checked_p2)

                    ; #77594: origin
                    (when (and (not (hiddenblockedcell_p2)))
                          (Bd_not_blocked_p2))

                    ; #80281: origin
                    (when (and (hiddenblockedcell_p2))
                          (Bd_blocked_p2))

                    ; #29344: <==negation-removal== 11088 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Bd_not_blocked_p2)))

                    ; #35107: <==negation-removal== 35283 (pos)
                    (not (not_checked_p2))

                    ; #37461: <==unclosure== 54636 (neg)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Bd_not_blocked_p2)))

                    ; #39290: <==negation-removal== 77594 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Pd_blocked_p2)))

                    ; #54636: <==uncertain_firing== 80281 (pos)
                    (when (and (not (not_hiddenblockedcell_p2)))
                          (not (Pd_not_blocked_p2)))

                    ; #74563: <==negation-removal== 19069 (pos)
                    (when (and (not (hiddenblockedcell_p2)))
                          (not (Bd_blocked_p2)))

                    ; #82260: <==negation-removal== 80281 (pos)
                    (when (and (hiddenblockedcell_p2))
                          (not (Pd_not_blocked_p2)))))

    (:action sensecells_d_p9_p3
        :precondition (and (succ_p9_p3)
                           (at_d_p9))
        :effect (and
                    ; #14520: <==closure== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (Pd_blocked_p3))

                    ; #27246: origin
                    (when (and (hiddenblockedcell_p3))
                          (Bd_blocked_p3))

                    ; #36654: origin
                    (when (and (not (hiddenblockedcell_p3)))
                          (Bd_not_blocked_p3))

                    ; #68962: <==closure== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (Pd_not_blocked_p3))

                    ; #91657: origin
                    (checked_p3)

                    ; #20958: <==uncertain_firing== 27246 (pos)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Pd_not_blocked_p3)))

                    ; #39315: <==negation-removal== 14520 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Bd_not_blocked_p3)))

                    ; #42911: <==negation-removal== 68962 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Bd_blocked_p3)))

                    ; #62599: <==unclosure== 20958 (neg)
                    (when (and (not (not_hiddenblockedcell_p3)))
                          (not (Bd_not_blocked_p3)))

                    ; #65426: <==negation-removal== 36654 (pos)
                    (when (and (not (hiddenblockedcell_p3)))
                          (not (Pd_blocked_p3)))

                    ; #75340: <==negation-removal== 27246 (pos)
                    (when (and (hiddenblockedcell_p3))
                          (not (Pd_not_blocked_p3)))

                    ; #99416: <==negation-removal== 91657 (pos)
                    (not (not_checked_p3))))

    (:action sensecells_d_p9_p4
        :precondition (and (succ_p9_p4)
                           (at_d_p9))
        :effect (and
                    ; #28728: origin
                    (checked_p4)

                    ; #64402: origin
                    (when (and (hiddenblockedcell_p4))
                          (Bd_blocked_p4))

                    ; #68240: origin
                    (when (and (not (hiddenblockedcell_p4)))
                          (Bd_not_blocked_p4))

                    ; #79772: <==closure== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (Pd_blocked_p4))

                    ; #90447: <==closure== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (Pd_not_blocked_p4))

                    ; #13179: <==negation-removal== 64402 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Pd_not_blocked_p4)))

                    ; #17544: <==unclosure== 90027 (neg)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Bd_not_blocked_p4)))

                    ; #27864: <==negation-removal== 28728 (pos)
                    (not (not_checked_p4))

                    ; #39523: <==negation-removal== 68240 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Pd_blocked_p4)))

                    ; #54165: <==negation-removal== 79772 (pos)
                    (when (and (hiddenblockedcell_p4))
                          (not (Bd_not_blocked_p4)))

                    ; #66112: <==negation-removal== 90447 (pos)
                    (when (and (not (hiddenblockedcell_p4)))
                          (not (Bd_blocked_p4)))

                    ; #90027: <==uncertain_firing== 64402 (pos)
                    (when (and (not (not_hiddenblockedcell_p4)))
                          (not (Pd_not_blocked_p4)))))

    (:action sensecells_d_p9_p5
        :precondition (and (at_d_p9)
                           (succ_p9_p5))
        :effect (and
                    ; #19322: <==closure== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (Pd_blocked_p5))

                    ; #20657: origin
                    (when (and (not (hiddenblockedcell_p5)))
                          (Bd_not_blocked_p5))

                    ; #20974: origin
                    (checked_p5)

                    ; #64662: <==closure== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (Pd_not_blocked_p5))

                    ; #75475: origin
                    (when (and (hiddenblockedcell_p5))
                          (Bd_blocked_p5))

                    ; #32325: <==negation-removal== 19322 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Bd_not_blocked_p5)))

                    ; #45053: <==unclosure== 63618 (neg)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Bd_not_blocked_p5)))

                    ; #63618: <==uncertain_firing== 75475 (pos)
                    (when (and (not (not_hiddenblockedcell_p5)))
                          (not (Pd_not_blocked_p5)))

                    ; #64955: <==negation-removal== 20974 (pos)
                    (not (not_checked_p5))

                    ; #79708: <==negation-removal== 75475 (pos)
                    (when (and (hiddenblockedcell_p5))
                          (not (Pd_not_blocked_p5)))

                    ; #83370: <==negation-removal== 64662 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Bd_blocked_p5)))

                    ; #91627: <==negation-removal== 20657 (pos)
                    (when (and (not (hiddenblockedcell_p5)))
                          (not (Pd_blocked_p5)))))

    (:action sensecells_d_p9_p6
        :precondition (and (succ_p9_p6)
                           (at_d_p9))
        :effect (and
                    ; #17969: origin
                    (checked_p6)

                    ; #19897: <==closure== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (Pd_blocked_p6))

                    ; #26857: origin
                    (when (and (not (hiddenblockedcell_p6)))
                          (Bd_not_blocked_p6))

                    ; #79395: <==closure== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (Pd_not_blocked_p6))

                    ; #85737: origin
                    (when (and (hiddenblockedcell_p6))
                          (Bd_blocked_p6))

                    ; #23858: <==negation-removal== 26857 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Pd_blocked_p6)))

                    ; #25272: <==negation-removal== 17969 (pos)
                    (not (not_checked_p6))

                    ; #28854: <==negation-removal== 85737 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Pd_not_blocked_p6)))

                    ; #40008: <==uncertain_firing== 85737 (pos)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Pd_not_blocked_p6)))

                    ; #51636: <==negation-removal== 79395 (pos)
                    (when (and (not (hiddenblockedcell_p6)))
                          (not (Bd_blocked_p6)))

                    ; #71094: <==negation-removal== 19897 (pos)
                    (when (and (hiddenblockedcell_p6))
                          (not (Bd_not_blocked_p6)))

                    ; #77984: <==unclosure== 40008 (neg)
                    (when (and (not (not_hiddenblockedcell_p6)))
                          (not (Bd_not_blocked_p6)))))

    (:action sensecells_d_p9_p7
        :precondition (and (succ_p9_p7)
                           (at_d_p9))
        :effect (and
                    ; #19619: <==closure== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (Pd_not_blocked_p7))

                    ; #53049: origin
                    (when (and (not (hiddenblockedcell_p7)))
                          (Bd_not_blocked_p7))

                    ; #63006: <==closure== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (Pd_blocked_p7))

                    ; #77843: origin
                    (checked_p7)

                    ; #83874: origin
                    (when (and (hiddenblockedcell_p7))
                          (Bd_blocked_p7))

                    ; #11506: <==negation-removal== 19619 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Bd_blocked_p7)))

                    ; #24247: <==negation-removal== 83874 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Pd_not_blocked_p7)))

                    ; #44961: <==negation-removal== 63006 (pos)
                    (when (and (hiddenblockedcell_p7))
                          (not (Bd_not_blocked_p7)))

                    ; #53381: <==negation-removal== 77843 (pos)
                    (not (not_checked_p7))

                    ; #54761: <==negation-removal== 53049 (pos)
                    (when (and (not (hiddenblockedcell_p7)))
                          (not (Pd_blocked_p7)))

                    ; #73234: <==uncertain_firing== 83874 (pos)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Pd_not_blocked_p7)))

                    ; #89967: <==unclosure== 73234 (neg)
                    (when (and (not (not_hiddenblockedcell_p7)))
                          (not (Bd_not_blocked_p7)))))

    (:action sensecells_d_p9_p8
        :precondition (and (succ_p9_p8)
                           (at_d_p9))
        :effect (and
                    ; #11972: <==closure== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (Pd_not_blocked_p8))

                    ; #36346: origin
                    (when (and (not (hiddenblockedcell_p8)))
                          (Bd_not_blocked_p8))

                    ; #44404: origin
                    (when (and (hiddenblockedcell_p8))
                          (Bd_blocked_p8))

                    ; #62828: origin
                    (checked_p8)

                    ; #67624: <==closure== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (Pd_blocked_p8))

                    ; #15564: <==negation-removal== 44404 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Pd_not_blocked_p8)))

                    ; #27713: <==negation-removal== 11972 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Bd_blocked_p8)))

                    ; #61867: <==unclosure== 86955 (neg)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Bd_not_blocked_p8)))

                    ; #78008: <==negation-removal== 36346 (pos)
                    (when (and (not (hiddenblockedcell_p8)))
                          (not (Pd_blocked_p8)))

                    ; #79019: <==negation-removal== 67624 (pos)
                    (when (and (hiddenblockedcell_p8))
                          (not (Bd_not_blocked_p8)))

                    ; #85417: <==negation-removal== 62828 (pos)
                    (not (not_checked_p8))

                    ; #86955: <==uncertain_firing== 44404 (pos)
                    (when (and (not (not_hiddenblockedcell_p8)))
                          (not (Pd_not_blocked_p8)))))

    (:action sensecells_d_p9_p9
        :precondition (and (succ_p9_p9)
                           (at_d_p9))
        :effect (and
                    ; #11104: origin
                    (when (and (not (hiddenblockedcell_p9)))
                          (Bd_not_blocked_p9))

                    ; #48046: <==closure== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (Pd_blocked_p9))

                    ; #66958: origin
                    (checked_p9)

                    ; #70707: origin
                    (when (and (hiddenblockedcell_p9))
                          (Bd_blocked_p9))

                    ; #73229: <==closure== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (Pd_not_blocked_p9))

                    ; #20966: <==negation-removal== 73229 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Bd_blocked_p9)))

                    ; #40299: <==negation-removal== 66958 (pos)
                    (not (not_checked_p9))

                    ; #59523: <==unclosure== 85307 (neg)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Bd_not_blocked_p9)))

                    ; #79819: <==negation-removal== 48046 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Bd_not_blocked_p9)))

                    ; #80764: <==negation-removal== 70707 (pos)
                    (when (and (hiddenblockedcell_p9))
                          (not (Pd_not_blocked_p9)))

                    ; #82760: <==negation-removal== 11104 (pos)
                    (when (and (not (hiddenblockedcell_p9)))
                          (not (Pd_blocked_p9)))

                    ; #85307: <==uncertain_firing== 70707 (pos)
                    (when (and (not (not_hiddenblockedcell_p9)))
                          (not (Pd_not_blocked_p9)))))

    (:action sensesurvivors_a_p1_s
        :precondition (and (at_a_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #36291: origin
                    (obs_p1)

                    ; #44445: <==closure== 82469 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pa_survivorat_s_p1))

                    ; #44542: <==closure== 62941 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pa_not_survivorat_s_p1))

                    ; #62941: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Ba_not_survivorat_s_p1))

                    ; #82469: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Ba_survivorat_s_p1))

                    ; #12602: <==negation-removal== 36291 (pos)
                    (not (not_obs_p1))

                    ; #42278: <==negation-removal== 62941 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pa_survivorat_s_p1)))

                    ; #53251: <==negation-removal== 44542 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Ba_survivorat_s_p1)))

                    ; #74624: <==uncertain_firing== 82469 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pa_not_survivorat_s_p1)))

                    ; #77589: <==unclosure== 74624 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #79686: <==negation-removal== 44445 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Ba_not_survivorat_s_p1)))

                    ; #87224: <==negation-removal== 82469 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pa_not_survivorat_s_p1)))))

    (:action sensesurvivors_a_p2_s
        :precondition (and (at_a_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #23731: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Ba_not_survivorat_s_p2))

                    ; #26049: <==closure== 23731 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pa_not_survivorat_s_p2))

                    ; #50628: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Ba_survivorat_s_p2))

                    ; #55100: origin
                    (obs_p2)

                    ; #61548: <==closure== 50628 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pa_survivorat_s_p2))

                    ; #10716: <==negation-removal== 55100 (pos)
                    (not (not_obs_p2))

                    ; #11012: <==negation-removal== 26049 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Ba_survivorat_s_p2)))

                    ; #27112: <==negation-removal== 61548 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Ba_not_survivorat_s_p2)))

                    ; #34769: <==uncertain_firing== 50628 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #47362: <==negation-removal== 50628 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pa_not_survivorat_s_p2)))

                    ; #68594: <==negation-removal== 23731 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pa_survivorat_s_p2)))

                    ; #69218: <==unclosure== 34769 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Ba_not_survivorat_s_p2)))))

    (:action sensesurvivors_a_p3_s
        :precondition (and (at_a_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #27470: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Ba_not_survivorat_s_p3))

                    ; #50028: <==closure== 81124 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pa_survivorat_s_p3))

                    ; #58125: <==closure== 27470 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pa_not_survivorat_s_p3))

                    ; #77759: origin
                    (obs_p3)

                    ; #81124: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Ba_survivorat_s_p3))

                    ; #10669: <==negation-removal== 50028 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Ba_not_survivorat_s_p3)))

                    ; #13855: <==uncertain_firing== 81124 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #14241: <==negation-removal== 27470 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pa_survivorat_s_p3)))

                    ; #30265: <==negation-removal== 58125 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Ba_survivorat_s_p3)))

                    ; #44998: <==negation-removal== 81124 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pa_not_survivorat_s_p3)))

                    ; #70942: <==negation-removal== 77759 (pos)
                    (not (not_obs_p3))

                    ; #77727: <==unclosure== 13855 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Ba_not_survivorat_s_p3)))))

    (:action sensesurvivors_a_p4_s
        :precondition (and (at_a_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #17708: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Ba_survivorat_s_p4))

                    ; #23336: <==closure== 17708 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pa_survivorat_s_p4))

                    ; #46336: origin
                    (obs_p4)

                    ; #61874: <==closure== 90100 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pa_not_survivorat_s_p4))

                    ; #90100: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Ba_not_survivorat_s_p4))

                    ; #14707: <==uncertain_firing== 17708 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #18364: <==negation-removal== 90100 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pa_survivorat_s_p4)))

                    ; #55767: <==negation-removal== 17708 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pa_not_survivorat_s_p4)))

                    ; #58387: <==negation-removal== 23336 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #76253: <==negation-removal== 46336 (pos)
                    (not (not_obs_p4))

                    ; #90637: <==unclosure== 14707 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Ba_not_survivorat_s_p4)))

                    ; #91074: <==negation-removal== 61874 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Ba_survivorat_s_p4)))))

    (:action sensesurvivors_a_p5_s
        :precondition (and (at_a_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #14208: origin
                    (obs_p5)

                    ; #31853: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Ba_survivorat_s_p5))

                    ; #53000: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Ba_not_survivorat_s_p5))

                    ; #66818: <==closure== 31853 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pa_survivorat_s_p5))

                    ; #68982: <==closure== 53000 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pa_not_survivorat_s_p5))

                    ; #38177: <==negation-removal== 53000 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pa_survivorat_s_p5)))

                    ; #61437: <==negation-removal== 68982 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Ba_survivorat_s_p5)))

                    ; #63394: <==uncertain_firing== 31853 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #67103: <==negation-removal== 31853 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pa_not_survivorat_s_p5)))

                    ; #83374: <==negation-removal== 66818 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #87572: <==unclosure== 63394 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Ba_not_survivorat_s_p5)))

                    ; #88047: <==negation-removal== 14208 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_a_p6_s
        :precondition (and (at_a_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #21090: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Ba_not_survivorat_s_p6))

                    ; #21331: origin
                    (obs_p6)

                    ; #36237: <==closure== 21090 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pa_not_survivorat_s_p6))

                    ; #42344: <==closure== 80905 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pa_survivorat_s_p6))

                    ; #80905: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Ba_survivorat_s_p6))

                    ; #32721: <==negation-removal== 42344 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Ba_not_survivorat_s_p6)))

                    ; #34131: <==negation-removal== 36237 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Ba_survivorat_s_p6)))

                    ; #43819: <==negation-removal== 80905 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #51707: <==negation-removal== 21090 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pa_survivorat_s_p6)))

                    ; #79398: <==uncertain_firing== 80905 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pa_not_survivorat_s_p6)))

                    ; #79493: <==negation-removal== 21331 (pos)
                    (not (not_obs_p6))

                    ; #86036: <==unclosure== 79398 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Ba_not_survivorat_s_p6)))))

    (:action sensesurvivors_a_p7_s
        :precondition (and (at_a_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #41197: <==closure== 83962 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pa_survivorat_s_p7))

                    ; #48294: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Ba_not_survivorat_s_p7))

                    ; #59721: origin
                    (obs_p7)

                    ; #61972: <==closure== 48294 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pa_not_survivorat_s_p7))

                    ; #83962: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Ba_survivorat_s_p7))

                    ; #25812: <==negation-removal== 59721 (pos)
                    (not (not_obs_p7))

                    ; #44215: <==uncertain_firing== 83962 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #58713: <==negation-removal== 83962 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pa_not_survivorat_s_p7)))

                    ; #60944: <==negation-removal== 61972 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Ba_survivorat_s_p7)))

                    ; #65075: <==negation-removal== 41197 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #88029: <==unclosure== 44215 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Ba_not_survivorat_s_p7)))

                    ; #91259: <==negation-removal== 48294 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pa_survivorat_s_p7)))))

    (:action sensesurvivors_a_p8_s
        :precondition (and (at_a_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #38737: <==closure== 85308 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pa_survivorat_s_p8))

                    ; #53029: <==closure== 66958 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pa_not_survivorat_s_p8))

                    ; #66958: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Ba_not_survivorat_s_p8))

                    ; #71103: origin
                    (obs_p8)

                    ; #85308: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Ba_survivorat_s_p8))

                    ; #29011: <==negation-removal== 53029 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Ba_survivorat_s_p8)))

                    ; #29102: <==negation-removal== 38737 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Ba_not_survivorat_s_p8)))

                    ; #40134: <==negation-removal== 85308 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #42040: <==uncertain_firing== 85308 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pa_not_survivorat_s_p8)))

                    ; #51186: <==negation-removal== 71103 (pos)
                    (not (not_obs_p8))

                    ; #80628: <==negation-removal== 66958 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pa_survivorat_s_p8)))

                    ; #92047: <==unclosure== 42040 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Ba_not_survivorat_s_p8)))))

    (:action sensesurvivors_a_p9_s
        :precondition (and (at_a_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #22842: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Ba_survivorat_s_p9))

                    ; #46968: origin
                    (obs_p9)

                    ; #55325: <==closure== 22842 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pa_survivorat_s_p9))

                    ; #66300: <==closure== 92021 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pa_not_survivorat_s_p9))

                    ; #92021: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Ba_not_survivorat_s_p9))

                    ; #17785: <==negation-removal== 46968 (pos)
                    (not (not_obs_p9))

                    ; #22346: <==unclosure== 61090 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #61090: <==uncertain_firing== 22842 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #61663: <==negation-removal== 55325 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Ba_not_survivorat_s_p9)))

                    ; #75343: <==negation-removal== 22842 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pa_not_survivorat_s_p9)))

                    ; #84741: <==negation-removal== 92021 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pa_survivorat_s_p9)))

                    ; #90415: <==negation-removal== 66300 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Ba_survivorat_s_p9)))))

    (:action sensesurvivors_b_p1_s
        :precondition (and (at_b_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #20792: <==closure== 78169 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pb_survivorat_s_p1))

                    ; #27709: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bb_not_survivorat_s_p1))

                    ; #36291: origin
                    (obs_p1)

                    ; #59966: <==closure== 27709 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pb_not_survivorat_s_p1))

                    ; #78169: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bb_survivorat_s_p1))

                    ; #10876: <==negation-removal== 20792 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bb_not_survivorat_s_p1)))

                    ; #12602: <==negation-removal== 36291 (pos)
                    (not (not_obs_p1))

                    ; #35091: <==negation-removal== 27709 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pb_survivorat_s_p1)))

                    ; #63420: <==negation-removal== 78169 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #65439: <==negation-removal== 59966 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bb_survivorat_s_p1)))

                    ; #69412: <==uncertain_firing== 78169 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pb_not_survivorat_s_p1)))

                    ; #71920: <==unclosure== 69412 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bb_not_survivorat_s_p1)))))

    (:action sensesurvivors_b_p2_s
        :precondition (and (at_b_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #44118: <==closure== 48577 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pb_not_survivorat_s_p2))

                    ; #47172: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bb_survivorat_s_p2))

                    ; #48577: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bb_not_survivorat_s_p2))

                    ; #55100: origin
                    (obs_p2)

                    ; #86251: <==closure== 47172 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pb_survivorat_s_p2))

                    ; #10716: <==negation-removal== 55100 (pos)
                    (not (not_obs_p2))

                    ; #13180: <==negation-removal== 47172 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #13688: <==uncertain_firing== 47172 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pb_not_survivorat_s_p2)))

                    ; #18427: <==unclosure== 13688 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #25123: <==negation-removal== 48577 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pb_survivorat_s_p2)))

                    ; #73378: <==negation-removal== 86251 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bb_not_survivorat_s_p2)))

                    ; #82731: <==negation-removal== 44118 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bb_survivorat_s_p2)))))

    (:action sensesurvivors_b_p3_s
        :precondition (and (at_b_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #25819: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bb_survivorat_s_p3))

                    ; #26956: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bb_not_survivorat_s_p3))

                    ; #47934: <==closure== 25819 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pb_survivorat_s_p3))

                    ; #56009: <==closure== 26956 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pb_not_survivorat_s_p3))

                    ; #77759: origin
                    (obs_p3)

                    ; #20797: <==negation-removal== 25819 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #43344: <==uncertain_firing== 25819 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pb_not_survivorat_s_p3)))

                    ; #44579: <==negation-removal== 47934 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #70169: <==unclosure== 43344 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bb_not_survivorat_s_p3)))

                    ; #70942: <==negation-removal== 77759 (pos)
                    (not (not_obs_p3))

                    ; #73816: <==negation-removal== 26956 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pb_survivorat_s_p3)))

                    ; #90835: <==negation-removal== 56009 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bb_survivorat_s_p3)))))

    (:action sensesurvivors_b_p4_s
        :precondition (and (at_b_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #11810: <==closure== 70268 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pb_not_survivorat_s_p4))

                    ; #34298: <==closure== 62219 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pb_survivorat_s_p4))

                    ; #46336: origin
                    (obs_p4)

                    ; #62219: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bb_survivorat_s_p4))

                    ; #70268: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bb_not_survivorat_s_p4))

                    ; #27085: <==negation-removal== 34298 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #57555: <==negation-removal== 70268 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pb_survivorat_s_p4)))

                    ; #62204: <==uncertain_firing== 62219 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pb_not_survivorat_s_p4)))

                    ; #70006: <==negation-removal== 11810 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bb_survivorat_s_p4)))

                    ; #71079: <==unclosure== 62204 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bb_not_survivorat_s_p4)))

                    ; #76253: <==negation-removal== 46336 (pos)
                    (not (not_obs_p4))

                    ; #77796: <==negation-removal== 62219 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pb_not_survivorat_s_p4)))))

    (:action sensesurvivors_b_p5_s
        :precondition (and (at_b_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #10746: <==closure== 29699 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pb_not_survivorat_s_p5))

                    ; #14208: origin
                    (obs_p5)

                    ; #29699: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bb_not_survivorat_s_p5))

                    ; #59920: <==closure== 76470 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pb_survivorat_s_p5))

                    ; #76470: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bb_survivorat_s_p5))

                    ; #15350: <==negation-removal== 29699 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pb_survivorat_s_p5)))

                    ; #21908: <==negation-removal== 59920 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #36368: <==negation-removal== 10746 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bb_survivorat_s_p5)))

                    ; #37911: <==unclosure== 55988 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bb_not_survivorat_s_p5)))

                    ; #55988: <==uncertain_firing== 76470 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #77921: <==negation-removal== 76470 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pb_not_survivorat_s_p5)))

                    ; #88047: <==negation-removal== 14208 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_b_p6_s
        :precondition (and (at_b_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #17815: <==closure== 20256 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pb_not_survivorat_s_p6))

                    ; #18296: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bb_survivorat_s_p6))

                    ; #20256: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bb_not_survivorat_s_p6))

                    ; #21331: origin
                    (obs_p6)

                    ; #28002: <==closure== 18296 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pb_survivorat_s_p6))

                    ; #40507: <==negation-removal== 17815 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bb_survivorat_s_p6)))

                    ; #48614: <==negation-removal== 18296 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #50072: <==uncertain_firing== 18296 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pb_not_survivorat_s_p6)))

                    ; #70789: <==negation-removal== 20256 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pb_survivorat_s_p6)))

                    ; #79493: <==negation-removal== 21331 (pos)
                    (not (not_obs_p6))

                    ; #79949: <==unclosure== 50072 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bb_not_survivorat_s_p6)))

                    ; #86298: <==negation-removal== 28002 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bb_not_survivorat_s_p6)))))

    (:action sensesurvivors_b_p7_s
        :precondition (and (at_b_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #59721: origin
                    (obs_p7)

                    ; #65097: <==closure== 84423 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pb_survivorat_s_p7))

                    ; #75523: <==closure== 88234 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pb_not_survivorat_s_p7))

                    ; #84423: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bb_survivorat_s_p7))

                    ; #88234: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bb_not_survivorat_s_p7))

                    ; #25812: <==negation-removal== 59721 (pos)
                    (not (not_obs_p7))

                    ; #26862: <==negation-removal== 84423 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #33284: <==uncertain_firing== 84423 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pb_not_survivorat_s_p7)))

                    ; #50134: <==negation-removal== 75523 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bb_survivorat_s_p7)))

                    ; #75423: <==negation-removal== 88234 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pb_survivorat_s_p7)))

                    ; #78007: <==unclosure== 33284 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bb_not_survivorat_s_p7)))

                    ; #87423: <==negation-removal== 65097 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bb_not_survivorat_s_p7)))))

    (:action sensesurvivors_b_p8_s
        :precondition (and (at_b_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #18986: <==closure== 70228 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pb_survivorat_s_p8))

                    ; #57476: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bb_not_survivorat_s_p8))

                    ; #58543: <==closure== 57476 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pb_not_survivorat_s_p8))

                    ; #70228: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bb_survivorat_s_p8))

                    ; #71103: origin
                    (obs_p8)

                    ; #42260: <==unclosure== 65190 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bb_not_survivorat_s_p8)))

                    ; #51186: <==negation-removal== 71103 (pos)
                    (not (not_obs_p8))

                    ; #62391: <==negation-removal== 57476 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pb_survivorat_s_p8)))

                    ; #65190: <==uncertain_firing== 70228 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #67890: <==negation-removal== 58543 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bb_survivorat_s_p8)))

                    ; #86170: <==negation-removal== 70228 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pb_not_survivorat_s_p8)))

                    ; #95831: <==negation-removal== 18986 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bb_not_survivorat_s_p8)))))

    (:action sensesurvivors_b_p9_s
        :precondition (and (at_b_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #24582: <==closure== 35236 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pb_not_survivorat_s_p9))

                    ; #35236: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bb_not_survivorat_s_p9))

                    ; #46947: <==closure== 47551 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pb_survivorat_s_p9))

                    ; #46968: origin
                    (obs_p9)

                    ; #47551: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bb_survivorat_s_p9))

                    ; #10687: <==uncertain_firing== 47551 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #17785: <==negation-removal== 46968 (pos)
                    (not (not_obs_p9))

                    ; #37025: <==negation-removal== 46947 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #43270: <==unclosure== 10687 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bb_not_survivorat_s_p9)))

                    ; #46184: <==negation-removal== 47551 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pb_not_survivorat_s_p9)))

                    ; #69984: <==negation-removal== 24582 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bb_survivorat_s_p9)))

                    ; #73559: <==negation-removal== 35236 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pb_survivorat_s_p9)))))

    (:action sensesurvivors_c_p1_s
        :precondition (and (at_c_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #27973: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bc_not_survivorat_s_p1))

                    ; #32400: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bc_survivorat_s_p1))

                    ; #36291: origin
                    (obs_p1)

                    ; #36553: <==closure== 32400 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pc_survivorat_s_p1))

                    ; #58247: <==closure== 27973 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pc_not_survivorat_s_p1))

                    ; #12602: <==negation-removal== 36291 (pos)
                    (not (not_obs_p1))

                    ; #31853: <==negation-removal== 36553 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #40543: <==negation-removal== 27973 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pc_survivorat_s_p1)))

                    ; #43062: <==negation-removal== 32400 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pc_not_survivorat_s_p1)))

                    ; #49992: <==negation-removal== 58247 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bc_survivorat_s_p1)))

                    ; #67504: <==unclosure== 78511 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bc_not_survivorat_s_p1)))

                    ; #78511: <==uncertain_firing== 32400 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pc_not_survivorat_s_p1)))))

    (:action sensesurvivors_c_p2_s
        :precondition (and (at_c_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #25565: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bc_survivorat_s_p2))

                    ; #50286: <==closure== 25565 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pc_survivorat_s_p2))

                    ; #55100: origin
                    (obs_p2)

                    ; #75424: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bc_not_survivorat_s_p2))

                    ; #83988: <==closure== 75424 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pc_not_survivorat_s_p2))

                    ; #10716: <==negation-removal== 55100 (pos)
                    (not (not_obs_p2))

                    ; #29395: <==negation-removal== 50286 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #36572: <==uncertain_firing== 25565 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pc_not_survivorat_s_p2)))

                    ; #38310: <==unclosure== 36572 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bc_not_survivorat_s_p2)))

                    ; #44200: <==negation-removal== 83988 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bc_survivorat_s_p2)))

                    ; #63249: <==negation-removal== 75424 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pc_survivorat_s_p2)))

                    ; #66831: <==negation-removal== 25565 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pc_not_survivorat_s_p2)))))

    (:action sensesurvivors_c_p3_s
        :precondition (and (at_c_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #11669: <==closure== 37003 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pc_survivorat_s_p3))

                    ; #24183: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bc_not_survivorat_s_p3))

                    ; #37003: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bc_survivorat_s_p3))

                    ; #60157: <==closure== 24183 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pc_not_survivorat_s_p3))

                    ; #77759: origin
                    (obs_p3)

                    ; #14589: <==negation-removal== 11669 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #28598: <==negation-removal== 37003 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #37403: <==negation-removal== 60157 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bc_survivorat_s_p3)))

                    ; #70942: <==negation-removal== 77759 (pos)
                    (not (not_obs_p3))

                    ; #72728: <==unclosure== 74867 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bc_not_survivorat_s_p3)))

                    ; #74867: <==uncertain_firing== 37003 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pc_not_survivorat_s_p3)))

                    ; #85129: <==negation-removal== 24183 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pc_survivorat_s_p3)))))

    (:action sensesurvivors_c_p4_s
        :precondition (and (at_c_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #24339: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bc_survivorat_s_p4))

                    ; #46336: origin
                    (obs_p4)

                    ; #56260: <==closure== 60057 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pc_not_survivorat_s_p4))

                    ; #60057: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bc_not_survivorat_s_p4))

                    ; #83315: <==closure== 24339 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pc_survivorat_s_p4))

                    ; #27270: <==negation-removal== 24339 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #31216: <==uncertain_firing== 24339 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pc_not_survivorat_s_p4)))

                    ; #37672: <==negation-removal== 83315 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #53606: <==unclosure== 31216 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bc_not_survivorat_s_p4)))

                    ; #76253: <==negation-removal== 46336 (pos)
                    (not (not_obs_p4))

                    ; #77789: <==negation-removal== 56260 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bc_survivorat_s_p4)))

                    ; #89534: <==negation-removal== 60057 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pc_survivorat_s_p4)))))

    (:action sensesurvivors_c_p5_s
        :precondition (and (at_c_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #14208: origin
                    (obs_p5)

                    ; #25949: <==closure== 87971 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pc_survivorat_s_p5))

                    ; #34669: <==closure== 59220 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pc_not_survivorat_s_p5))

                    ; #59220: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bc_not_survivorat_s_p5))

                    ; #87971: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bc_survivorat_s_p5))

                    ; #11155: <==negation-removal== 25949 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #20410: <==unclosure== 75331 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bc_not_survivorat_s_p5)))

                    ; #37645: <==negation-removal== 87971 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #47976: <==negation-removal== 34669 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bc_survivorat_s_p5)))

                    ; #75331: <==uncertain_firing== 87971 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pc_not_survivorat_s_p5)))

                    ; #76385: <==negation-removal== 59220 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pc_survivorat_s_p5)))

                    ; #88047: <==negation-removal== 14208 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_c_p6_s
        :precondition (and (at_c_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #15652: <==closure== 20908 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pc_not_survivorat_s_p6))

                    ; #17910: <==closure== 85145 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pc_survivorat_s_p6))

                    ; #20908: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bc_not_survivorat_s_p6))

                    ; #21331: origin
                    (obs_p6)

                    ; #85145: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bc_survivorat_s_p6))

                    ; #12986: <==negation-removal== 15652 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bc_survivorat_s_p6)))

                    ; #36362: <==uncertain_firing== 85145 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #40469: <==negation-removal== 17910 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bc_not_survivorat_s_p6)))

                    ; #62281: <==negation-removal== 85145 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pc_not_survivorat_s_p6)))

                    ; #79493: <==negation-removal== 21331 (pos)
                    (not (not_obs_p6))

                    ; #90964: <==negation-removal== 20908 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pc_survivorat_s_p6)))

                    ; #91193: <==unclosure== 36362 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bc_not_survivorat_s_p6)))))

    (:action sensesurvivors_c_p7_s
        :precondition (and (at_c_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #40597: <==closure== 51805 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pc_not_survivorat_s_p7))

                    ; #50643: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bc_survivorat_s_p7))

                    ; #51805: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bc_not_survivorat_s_p7))

                    ; #59721: origin
                    (obs_p7)

                    ; #89704: <==closure== 50643 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pc_survivorat_s_p7))

                    ; #23165: <==uncertain_firing== 50643 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #25812: <==negation-removal== 59721 (pos)
                    (not (not_obs_p7))

                    ; #26728: <==negation-removal== 50643 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pc_not_survivorat_s_p7)))

                    ; #36803: <==negation-removal== 51805 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pc_survivorat_s_p7)))

                    ; #75555: <==unclosure== 23165 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #86837: <==negation-removal== 89704 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bc_not_survivorat_s_p7)))

                    ; #94028: <==negation-removal== 40597 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bc_survivorat_s_p7)))))

    (:action sensesurvivors_c_p8_s
        :precondition (and (at_c_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #15170: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bc_not_survivorat_s_p8))

                    ; #23388: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bc_survivorat_s_p8))

                    ; #56825: <==closure== 23388 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pc_survivorat_s_p8))

                    ; #71103: origin
                    (obs_p8)

                    ; #88503: <==closure== 15170 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pc_not_survivorat_s_p8))

                    ; #11067: <==negation-removal== 88503 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bc_survivorat_s_p8)))

                    ; #12302: <==negation-removal== 15170 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pc_survivorat_s_p8)))

                    ; #26507: <==uncertain_firing== 23388 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #51186: <==negation-removal== 71103 (pos)
                    (not (not_obs_p8))

                    ; #61530: <==unclosure== 26507 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bc_not_survivorat_s_p8)))

                    ; #74657: <==negation-removal== 23388 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pc_not_survivorat_s_p8)))

                    ; #89254: <==negation-removal== 56825 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bc_not_survivorat_s_p8)))))

    (:action sensesurvivors_c_p9_s
        :precondition (and (at_c_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #10714: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bc_survivorat_s_p9))

                    ; #15172: <==closure== 82823 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pc_not_survivorat_s_p9))

                    ; #22778: <==closure== 10714 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pc_survivorat_s_p9))

                    ; #46968: origin
                    (obs_p9)

                    ; #82823: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bc_not_survivorat_s_p9))

                    ; #15198: <==negation-removal== 82823 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pc_survivorat_s_p9)))

                    ; #17785: <==negation-removal== 46968 (pos)
                    (not (not_obs_p9))

                    ; #22828: <==negation-removal== 22778 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #44013: <==uncertain_firing== 10714 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #46425: <==unclosure== 44013 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bc_not_survivorat_s_p9)))

                    ; #64037: <==negation-removal== 10714 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pc_not_survivorat_s_p9)))

                    ; #83933: <==negation-removal== 15172 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bc_survivorat_s_p9)))))

    (:action sensesurvivors_d_p1_s
        :precondition (and (at_d_p1)
                           (not (obs_p1)))
        :effect (and
                    ; #26122: origin
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Bd_not_survivorat_s_p1))

                    ; #36291: origin
                    (obs_p1)

                    ; #46357: <==closure== 61594 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (Pd_survivorat_s_p1))

                    ; #61112: <==closure== 26122 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (Pd_not_survivorat_s_p1))

                    ; #61594: origin
                    (when (and (hiddensurvivorat_s_p1))
                          (Bd_survivorat_s_p1))

                    ; #12602: <==negation-removal== 36291 (pos)
                    (not (not_obs_p1))

                    ; #20181: <==negation-removal== 46357 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Bd_not_survivorat_s_p1)))

                    ; #40178: <==uncertain_firing== 61594 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #54875: <==negation-removal== 26122 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Pd_survivorat_s_p1)))

                    ; #59294: <==negation-removal== 61112 (pos)
                    (when (and (not (hiddensurvivorat_s_p1)))
                          (not (Bd_survivorat_s_p1)))

                    ; #77314: <==negation-removal== 61594 (pos)
                    (when (and (hiddensurvivorat_s_p1))
                          (not (Pd_not_survivorat_s_p1)))

                    ; #88280: <==unclosure== 40178 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p1)))
                          (not (Bd_not_survivorat_s_p1)))))

    (:action sensesurvivors_d_p2_s
        :precondition (and (at_d_p2)
                           (not (obs_p2)))
        :effect (and
                    ; #10522: origin
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Bd_not_survivorat_s_p2))

                    ; #35159: <==closure== 10522 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (Pd_not_survivorat_s_p2))

                    ; #48863: origin
                    (when (and (hiddensurvivorat_s_p2))
                          (Bd_survivorat_s_p2))

                    ; #55100: origin
                    (obs_p2)

                    ; #66821: <==closure== 48863 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (Pd_survivorat_s_p2))

                    ; #10716: <==negation-removal== 55100 (pos)
                    (not (not_obs_p2))

                    ; #13817: <==negation-removal== 48863 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #21779: <==uncertain_firing== 48863 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Pd_not_survivorat_s_p2)))

                    ; #32846: <==negation-removal== 66821 (pos)
                    (when (and (hiddensurvivorat_s_p2))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #49210: <==negation-removal== 10522 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Pd_survivorat_s_p2)))

                    ; #53298: <==unclosure== 21779 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p2)))
                          (not (Bd_not_survivorat_s_p2)))

                    ; #68932: <==negation-removal== 35159 (pos)
                    (when (and (not (hiddensurvivorat_s_p2)))
                          (not (Bd_survivorat_s_p2)))))

    (:action sensesurvivors_d_p3_s
        :precondition (and (at_d_p3)
                           (not (obs_p3)))
        :effect (and
                    ; #21981: origin
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Bd_not_survivorat_s_p3))

                    ; #29492: origin
                    (when (and (hiddensurvivorat_s_p3))
                          (Bd_survivorat_s_p3))

                    ; #70083: <==closure== 29492 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (Pd_survivorat_s_p3))

                    ; #77759: origin
                    (obs_p3)

                    ; #86139: <==closure== 21981 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (Pd_not_survivorat_s_p3))

                    ; #35482: <==negation-removal== 70083 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #49616: <==unclosure== 68665 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Bd_not_survivorat_s_p3)))

                    ; #58326: <==negation-removal== 29492 (pos)
                    (when (and (hiddensurvivorat_s_p3))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #68665: <==uncertain_firing== 29492 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p3)))
                          (not (Pd_not_survivorat_s_p3)))

                    ; #70942: <==negation-removal== 77759 (pos)
                    (not (not_obs_p3))

                    ; #76447: <==negation-removal== 21981 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Pd_survivorat_s_p3)))

                    ; #84524: <==negation-removal== 86139 (pos)
                    (when (and (not (hiddensurvivorat_s_p3)))
                          (not (Bd_survivorat_s_p3)))))

    (:action sensesurvivors_d_p4_s
        :precondition (and (at_d_p4)
                           (not (obs_p4)))
        :effect (and
                    ; #46336: origin
                    (obs_p4)

                    ; #46984: origin
                    (when (and (hiddensurvivorat_s_p4))
                          (Bd_survivorat_s_p4))

                    ; #76250: <==closure== 46984 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (Pd_survivorat_s_p4))

                    ; #79927: <==closure== 87429 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Pd_not_survivorat_s_p4))

                    ; #87429: origin
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (Bd_not_survivorat_s_p4))

                    ; #17933: <==negation-removal== 46984 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #23720: <==negation-removal== 79927 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Bd_survivorat_s_p4)))

                    ; #39621: <==uncertain_firing== 46984 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Pd_not_survivorat_s_p4)))

                    ; #61292: <==unclosure== 39621 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p4)))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #76253: <==negation-removal== 46336 (pos)
                    (not (not_obs_p4))

                    ; #85403: <==negation-removal== 76250 (pos)
                    (when (and (hiddensurvivorat_s_p4))
                          (not (Bd_not_survivorat_s_p4)))

                    ; #85617: <==negation-removal== 87429 (pos)
                    (when (and (not (hiddensurvivorat_s_p4)))
                          (not (Pd_survivorat_s_p4)))))

    (:action sensesurvivors_d_p5_s
        :precondition (and (at_d_p5)
                           (not (obs_p5)))
        :effect (and
                    ; #11540: origin
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Bd_not_survivorat_s_p5))

                    ; #13542: <==closure== 11540 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (Pd_not_survivorat_s_p5))

                    ; #14208: origin
                    (obs_p5)

                    ; #30807: origin
                    (when (and (hiddensurvivorat_s_p5))
                          (Bd_survivorat_s_p5))

                    ; #38972: <==closure== 30807 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (Pd_survivorat_s_p5))

                    ; #12299: <==negation-removal== 13542 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Bd_survivorat_s_p5)))

                    ; #13754: <==negation-removal== 30807 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #28885: <==negation-removal== 38972 (pos)
                    (when (and (hiddensurvivorat_s_p5))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #39417: <==negation-removal== 11540 (pos)
                    (when (and (not (hiddensurvivorat_s_p5)))
                          (not (Pd_survivorat_s_p5)))

                    ; #58759: <==unclosure== 69687 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Bd_not_survivorat_s_p5)))

                    ; #69687: <==uncertain_firing== 30807 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p5)))
                          (not (Pd_not_survivorat_s_p5)))

                    ; #88047: <==negation-removal== 14208 (pos)
                    (not (not_obs_p5))))

    (:action sensesurvivors_d_p6_s
        :precondition (and (at_d_p6)
                           (not (obs_p6)))
        :effect (and
                    ; #17770: <==closure== 23325 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Pd_not_survivorat_s_p6))

                    ; #21331: origin
                    (obs_p6)

                    ; #23325: origin
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (Bd_not_survivorat_s_p6))

                    ; #80242: origin
                    (when (and (hiddensurvivorat_s_p6))
                          (Bd_survivorat_s_p6))

                    ; #89990: <==closure== 80242 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (Pd_survivorat_s_p6))

                    ; #11544: <==uncertain_firing== 80242 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #36668: <==negation-removal== 89990 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #74229: <==negation-removal== 17770 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Bd_survivorat_s_p6)))

                    ; #76577: <==negation-removal== 80242 (pos)
                    (when (and (hiddensurvivorat_s_p6))
                          (not (Pd_not_survivorat_s_p6)))

                    ; #79493: <==negation-removal== 21331 (pos)
                    (not (not_obs_p6))

                    ; #86303: <==unclosure== 11544 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p6)))
                          (not (Bd_not_survivorat_s_p6)))

                    ; #89807: <==negation-removal== 23325 (pos)
                    (when (and (not (hiddensurvivorat_s_p6)))
                          (not (Pd_survivorat_s_p6)))))

    (:action sensesurvivors_d_p7_s
        :precondition (and (at_d_p7)
                           (not (obs_p7)))
        :effect (and
                    ; #27422: <==closure== 60301 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Pd_not_survivorat_s_p7))

                    ; #40989: <==closure== 59609 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (Pd_survivorat_s_p7))

                    ; #59609: origin
                    (when (and (hiddensurvivorat_s_p7))
                          (Bd_survivorat_s_p7))

                    ; #59721: origin
                    (obs_p7)

                    ; #60301: origin
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (Bd_not_survivorat_s_p7))

                    ; #25812: <==negation-removal== 59721 (pos)
                    (not (not_obs_p7))

                    ; #29686: <==unclosure== 68928 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Bd_not_survivorat_s_p7)))

                    ; #55949: <==negation-removal== 27422 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Bd_survivorat_s_p7)))

                    ; #57446: <==negation-removal== 60301 (pos)
                    (when (and (not (hiddensurvivorat_s_p7)))
                          (not (Pd_survivorat_s_p7)))

                    ; #59637: <==negation-removal== 59609 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #68928: <==uncertain_firing== 59609 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p7)))
                          (not (Pd_not_survivorat_s_p7)))

                    ; #79359: <==negation-removal== 40989 (pos)
                    (when (and (hiddensurvivorat_s_p7))
                          (not (Bd_not_survivorat_s_p7)))))

    (:action sensesurvivors_d_p8_s
        :precondition (and (at_d_p8)
                           (not (obs_p8)))
        :effect (and
                    ; #29224: <==closure== 66021 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (Pd_survivorat_s_p8))

                    ; #48908: <==closure== 72865 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Pd_not_survivorat_s_p8))

                    ; #66021: origin
                    (when (and (hiddensurvivorat_s_p8))
                          (Bd_survivorat_s_p8))

                    ; #71103: origin
                    (obs_p8)

                    ; #72865: origin
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (Bd_not_survivorat_s_p8))

                    ; #18989: <==negation-removal== 29224 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #32719: <==negation-removal== 48908 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Bd_survivorat_s_p8)))

                    ; #51186: <==negation-removal== 71103 (pos)
                    (not (not_obs_p8))

                    ; #66892: <==unclosure== 89661 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Bd_not_survivorat_s_p8)))

                    ; #84105: <==negation-removal== 72865 (pos)
                    (when (and (not (hiddensurvivorat_s_p8)))
                          (not (Pd_survivorat_s_p8)))

                    ; #89661: <==uncertain_firing== 66021 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p8)))
                          (not (Pd_not_survivorat_s_p8)))

                    ; #92005: <==negation-removal== 66021 (pos)
                    (when (and (hiddensurvivorat_s_p8))
                          (not (Pd_not_survivorat_s_p8)))))

    (:action sensesurvivors_d_p9_s
        :precondition (and (at_d_p9)
                           (not (obs_p9)))
        :effect (and
                    ; #26088: <==closure== 47013 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (Pd_survivorat_s_p9))

                    ; #35112: <==closure== 83788 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Pd_not_survivorat_s_p9))

                    ; #46968: origin
                    (obs_p9)

                    ; #47013: origin
                    (when (and (hiddensurvivorat_s_p9))
                          (Bd_survivorat_s_p9))

                    ; #83788: origin
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (Bd_not_survivorat_s_p9))

                    ; #17785: <==negation-removal== 46968 (pos)
                    (not (not_obs_p9))

                    ; #23434: <==uncertain_firing== 47013 (pos)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #39663: <==negation-removal== 26088 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Bd_not_survivorat_s_p9)))

                    ; #44400: <==negation-removal== 47013 (pos)
                    (when (and (hiddensurvivorat_s_p9))
                          (not (Pd_not_survivorat_s_p9)))

                    ; #67956: <==negation-removal== 83788 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Pd_survivorat_s_p9)))

                    ; #68488: <==negation-removal== 35112 (pos)
                    (when (and (not (hiddensurvivorat_s_p9)))
                          (not (Bd_survivorat_s_p9)))

                    ; #91113: <==unclosure== 23434 (neg)
                    (when (and (not (not_hiddensurvivorat_s_p9)))
                          (not (Bd_not_survivorat_s_p9)))))

)